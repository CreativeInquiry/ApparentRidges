// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PixelMap_depth_1705__Fun extends haxe.lang.Function
{
	public PixelMap_depth_1705__Fun(apparentridges.Render render, double[] min, double[] max, double[] data)
	{
		super(3, 0);
		this.render = render;
		this.min = min;
		this.max = max;
		this.data = data;
	}
	
	
	@Override public java.lang.Object __hx_invoke3_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2, double __fn_float3, java.lang.Object __fn_dyn3)
	{
		int y = ( (( __fn_dyn3 == haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
		int x = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
		apparentridges.RayHit h = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((apparentridges.RayHit) (((java.lang.Object) (__fn_float1) )) )) : (((apparentridges.RayHit) (__fn_dyn1) )) );
		if (( h == null )) 
		{
			((double[]) (this.data) )[( ( y * this.render.width ) + x )] = java.lang.Double.POSITIVE_INFINITY;
		}
		else
		{
			this.min[0] = java.lang.Math.min(this.min[0], h.t);
			this.max[0] = java.lang.Math.max(this.max[0], h.t);
			((double[]) (this.data) )[( ( y * this.render.width ) + x )] = h.t;
		}
		
		return null;
	}
	
	
	public apparentridges.Render render;
	
	public double[] min;
	
	public double[] max;
	
	public double[] data;
	
}


