// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BVHBucket extends haxe.lang.HxObject
{
	public BVHBucket(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public BVHBucket()
	{
		apparentridges.BVHBucket.__hx_ctor_apparentridges_BVHBucket(this);
	}
	
	
	protected static void __hx_ctor_apparentridges_BVHBucket(apparentridges.BVHBucket __hx_this)
	{
		__hx_this.bbox = new apparentridges.BBox();
		__hx_this.area = ((double) (0) );
		__hx_this.count = 0;
	}
	
	
	public double min;
	
	public double max;
	
	public int count;
	
	public double area;
	
	public apparentridges.BBox bbox;
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3002509:
					{
						if (field.equals("area")) 
						{
							__temp_executeDef1 = false;
							this.area = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 108114:
					{
						if (field.equals("min")) 
						{
							__temp_executeDef1 = false;
							this.min = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 94851343:
					{
						if (field.equals("count")) 
						{
							__temp_executeDef1 = false;
							this.count = ((int) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 107876:
					{
						if (field.equals("max")) 
						{
							__temp_executeDef1 = false;
							this.max = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3017257:
					{
						if (field.equals("bbox")) 
						{
							__temp_executeDef1 = false;
							this.bbox = ((apparentridges.BBox) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 108114:
					{
						if (field.equals("min")) 
						{
							__temp_executeDef1 = false;
							this.min = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 3002509:
					{
						if (field.equals("area")) 
						{
							__temp_executeDef1 = false;
							this.area = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 107876:
					{
						if (field.equals("max")) 
						{
							__temp_executeDef1 = false;
							this.max = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 94851343:
					{
						if (field.equals("count")) 
						{
							__temp_executeDef1 = false;
							this.count = ((int) (haxe.lang.Runtime.toInt(value)) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3017257:
					{
						if (field.equals("bbox")) 
						{
							__temp_executeDef1 = false;
							return this.bbox;
						}
						
						break;
					}
					
					
					case 108114:
					{
						if (field.equals("min")) 
						{
							__temp_executeDef1 = false;
							return this.min;
						}
						
						break;
					}
					
					
					case 3002509:
					{
						if (field.equals("area")) 
						{
							__temp_executeDef1 = false;
							return this.area;
						}
						
						break;
					}
					
					
					case 107876:
					{
						if (field.equals("max")) 
						{
							__temp_executeDef1 = false;
							return this.max;
						}
						
						break;
					}
					
					
					case 94851343:
					{
						if (field.equals("count")) 
						{
							__temp_executeDef1 = false;
							return this.count;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3002509:
					{
						if (field.equals("area")) 
						{
							__temp_executeDef1 = false;
							return this.area;
						}
						
						break;
					}
					
					
					case 108114:
					{
						if (field.equals("min")) 
						{
							__temp_executeDef1 = false;
							return this.min;
						}
						
						break;
					}
					
					
					case 94851343:
					{
						if (field.equals("count")) 
						{
							__temp_executeDef1 = false;
							return ((double) (this.count) );
						}
						
						break;
					}
					
					
					case 107876:
					{
						if (field.equals("max")) 
						{
							__temp_executeDef1 = false;
							return this.max;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("bbox");
		baseArr.push("area");
		baseArr.push("count");
		baseArr.push("max");
		baseArr.push("min");
		super.__hx_getFields(baseArr);
	}
	
	
}


