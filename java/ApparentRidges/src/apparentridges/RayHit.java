// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class RayHit extends haxe.lang.HxObject
{
	public RayHit(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public RayHit(double _t)
	{
		apparentridges.RayHit.__hx_ctor_apparentridges_RayHit(this, _t);
	}
	
	
	protected static void __hx_ctor_apparentridges_RayHit(apparentridges.RayHit __hx_this, double _t)
	{
		__hx_this.t = _t;
	}
	
	
	public double t;
	
	public double t2;
	
	public double u;
	
	public double v;
	
	public int[] face;
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 118:
					{
						if (field.equals("v")) 
						{
							__temp_executeDef1 = false;
							this.v = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 116:
					{
						if (field.equals("t")) 
						{
							__temp_executeDef1 = false;
							this.t = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 117:
					{
						if (field.equals("u")) 
						{
							__temp_executeDef1 = false;
							this.u = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 3646:
					{
						if (field.equals("t2")) 
						{
							__temp_executeDef1 = false;
							this.t2 = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3135069:
					{
						if (field.equals("face")) 
						{
							__temp_executeDef1 = false;
							this.face = ((int[]) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 116:
					{
						if (field.equals("t")) 
						{
							__temp_executeDef1 = false;
							this.t = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 118:
					{
						if (field.equals("v")) 
						{
							__temp_executeDef1 = false;
							this.v = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 3646:
					{
						if (field.equals("t2")) 
						{
							__temp_executeDef1 = false;
							this.t2 = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 117:
					{
						if (field.equals("u")) 
						{
							__temp_executeDef1 = false;
							this.u = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3135069:
					{
						if (field.equals("face")) 
						{
							__temp_executeDef1 = false;
							return this.face;
						}
						
						break;
					}
					
					
					case 116:
					{
						if (field.equals("t")) 
						{
							__temp_executeDef1 = false;
							return this.t;
						}
						
						break;
					}
					
					
					case 118:
					{
						if (field.equals("v")) 
						{
							__temp_executeDef1 = false;
							return this.v;
						}
						
						break;
					}
					
					
					case 3646:
					{
						if (field.equals("t2")) 
						{
							__temp_executeDef1 = false;
							return this.t2;
						}
						
						break;
					}
					
					
					case 117:
					{
						if (field.equals("u")) 
						{
							__temp_executeDef1 = false;
							return this.u;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 118:
					{
						if (field.equals("v")) 
						{
							__temp_executeDef1 = false;
							return this.v;
						}
						
						break;
					}
					
					
					case 116:
					{
						if (field.equals("t")) 
						{
							__temp_executeDef1 = false;
							return this.t;
						}
						
						break;
					}
					
					
					case 117:
					{
						if (field.equals("u")) 
						{
							__temp_executeDef1 = false;
							return this.u;
						}
						
						break;
					}
					
					
					case 3646:
					{
						if (field.equals("t2")) 
						{
							__temp_executeDef1 = false;
							return this.t2;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("face");
		baseArr.push("v");
		baseArr.push("u");
		baseArr.push("t2");
		baseArr.push("t");
		super.__hx_getFields(baseArr);
	}
	
	
}


