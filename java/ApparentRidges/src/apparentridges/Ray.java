// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Ray extends haxe.lang.HxObject
{
	public Ray(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Ray()
	{
		apparentridges.Ray.__hx_ctor_apparentridges_Ray(this);
	}
	
	
	protected static void __hx_ctor_apparentridges_Ray(apparentridges.Ray __hx_this)
	{
	}
	
	
	public double[] o;
	
	public double[] d;
	
	public double tmin;
	
	public double tmax;
	
	public final apparentridges.RayHit hitBBox(apparentridges.BBox bb)
	{
		double tx1 = ( (( ((double[]) (bb.min) )[0] - ((double[]) (this.o) )[0] )) / ((double[]) (this.d) )[0] );
		double tx2 = ( (( ((double[]) (bb.max) )[0] - ((double[]) (this.o) )[0] )) / ((double[]) (this.d) )[0] );
		double ty1 = ( (( ((double[]) (bb.min) )[1] - ((double[]) (this.o) )[1] )) / ((double[]) (this.d) )[1] );
		double ty2 = ( (( ((double[]) (bb.max) )[1] - ((double[]) (this.o) )[1] )) / ((double[]) (this.d) )[1] );
		double tz1 = ( (( ((double[]) (bb.min) )[2] - ((double[]) (this.o) )[2] )) / ((double[]) (this.d) )[2] );
		double tz2 = ( (( ((double[]) (bb.max) )[2] - ((double[]) (this.o) )[2] )) / ((double[]) (this.d) )[2] );
		double t1 = java.lang.Math.max(java.lang.Math.max(java.lang.Math.min(tx1, tx2), java.lang.Math.min(ty1, ty2)), java.lang.Math.min(tz1, tz2));
		double t2 = java.lang.Math.min(java.lang.Math.min(java.lang.Math.max(tx1, tx2), java.lang.Math.max(ty1, ty2)), java.lang.Math.max(tz1, tz2));
		if (( ( t2 - t1 ) < 0 )) 
		{
			return null;
		}
		
		if (( ( t1 > this.tmax ) || ( t2 < this.tmin ) )) 
		{
			return null;
		}
		
		apparentridges.RayHit h = new apparentridges.RayHit(((double) (t1) ));
		h.t2 = t2;
		return h;
	}
	
	
	public final apparentridges.RayHit hitTriangle(double[] p0, double[] p1, double[] p2)
	{
		double[] this1 = new double[3];
		double[] this2 = ((double[]) (this1) );
		((double[]) (this2) )[0] = ( ((double[]) (p1) )[0] - ((double[]) (p0) )[0] );
		((double[]) (this2) )[1] = ( ((double[]) (p1) )[1] - ((double[]) (p0) )[1] );
		((double[]) (this2) )[2] = ( ((double[]) (p1) )[2] - ((double[]) (p0) )[2] );
		double[] e1 = ((double[]) (this2) );
		double[] this3 = new double[3];
		double[] this4 = ((double[]) (this3) );
		((double[]) (this4) )[0] = ( ((double[]) (p2) )[0] - ((double[]) (p0) )[0] );
		((double[]) (this4) )[1] = ( ((double[]) (p2) )[1] - ((double[]) (p0) )[1] );
		((double[]) (this4) )[2] = ( ((double[]) (p2) )[2] - ((double[]) (p0) )[2] );
		double[] e2 = ((double[]) (this4) );
		double[] this5 = this.o;
		double[] this6 = new double[3];
		double[] this7 = ((double[]) (this6) );
		((double[]) (this7) )[0] = ( ((double[]) (this5) )[0] - ((double[]) (p0) )[0] );
		((double[]) (this7) )[1] = ( ((double[]) (this5) )[1] - ((double[]) (p0) )[1] );
		((double[]) (this7) )[2] = ( ((double[]) (this5) )[2] - ((double[]) (p0) )[2] );
		double[] s = ((double[]) (this7) );
		double[] this8 = this.d;
		double[] this9 = new double[3];
		double[] this10 = ((double[]) (this9) );
		((double[]) (this10) )[0] = ( ((double[]) (this8) )[0] * -1.0 );
		((double[]) (this10) )[1] = ( ((double[]) (this8) )[1] * -1.0 );
		((double[]) (this10) )[2] = ( ((double[]) (this8) )[2] * -1.0 );
		double[] _d = ((double[]) (this10) );
		double[] this11 = new double[3];
		double[] this12 = ((double[]) (this11) );
		((double[]) (this12) )[0] = ( ( ((double[]) (e1) )[1] * ((double[]) (e2) )[2] ) - ( ((double[]) (e1) )[2] * ((double[]) (e2) )[1] ) );
		((double[]) (this12) )[1] = ( ( ((double[]) (e1) )[2] * ((double[]) (e2) )[0] ) - ( ((double[]) (e1) )[0] * ((double[]) (e2) )[2] ) );
		((double[]) (this12) )[2] = ( ( ((double[]) (e1) )[0] * ((double[]) (e2) )[1] ) - ( ((double[]) (e1) )[1] * ((double[]) (e2) )[0] ) );
		double[] v1 = ((double[]) (this12) );
		double denom = ( ( ( ((double[]) (v1) )[0] * ((double[]) (_d) )[0] ) + ( ((double[]) (v1) )[1] * ((double[]) (_d) )[1] ) ) + ( ((double[]) (v1) )[2] * ((double[]) (_d) )[2] ) );
		if (( denom == 0 )) 
		{
			return null;
		}
		
		double[] this13 = new double[3];
		double[] this14 = ((double[]) (this13) );
		((double[]) (this14) )[0] = ( ( ((double[]) (s) )[1] * ((double[]) (e2) )[2] ) - ( ((double[]) (s) )[2] * ((double[]) (e2) )[1] ) );
		((double[]) (this14) )[1] = ( ( ((double[]) (s) )[2] * ((double[]) (e2) )[0] ) - ( ((double[]) (s) )[0] * ((double[]) (e2) )[2] ) );
		((double[]) (this14) )[2] = ( ( ((double[]) (s) )[0] * ((double[]) (e2) )[1] ) - ( ((double[]) (s) )[1] * ((double[]) (e2) )[0] ) );
		double[] v11 = ((double[]) (this14) );
		double _x = ( ( ( ((double[]) (v11) )[0] * ((double[]) (_d) )[0] ) + ( ((double[]) (v11) )[1] * ((double[]) (_d) )[1] ) ) + ( ((double[]) (v11) )[2] * ((double[]) (_d) )[2] ) );
		double[] this15 = new double[3];
		double[] this16 = ((double[]) (this15) );
		((double[]) (this16) )[0] = ( ( ((double[]) (e1) )[1] * ((double[]) (s) )[2] ) - ( ((double[]) (e1) )[2] * ((double[]) (s) )[1] ) );
		((double[]) (this16) )[1] = ( ( ((double[]) (e1) )[2] * ((double[]) (s) )[0] ) - ( ((double[]) (e1) )[0] * ((double[]) (s) )[2] ) );
		((double[]) (this16) )[2] = ( ( ((double[]) (e1) )[0] * ((double[]) (s) )[1] ) - ( ((double[]) (e1) )[1] * ((double[]) (s) )[0] ) );
		double[] v12 = ((double[]) (this16) );
		double _y = ( ( ( ((double[]) (v12) )[0] * ((double[]) (_d) )[0] ) + ( ((double[]) (v12) )[1] * ((double[]) (_d) )[1] ) ) + ( ((double[]) (v12) )[2] * ((double[]) (_d) )[2] ) );
		double[] this17 = new double[3];
		double[] this18 = ((double[]) (this17) );
		((double[]) (this18) )[0] = ( ( ((double[]) (e1) )[1] * ((double[]) (e2) )[2] ) - ( ((double[]) (e1) )[2] * ((double[]) (e2) )[1] ) );
		((double[]) (this18) )[1] = ( ( ((double[]) (e1) )[2] * ((double[]) (e2) )[0] ) - ( ((double[]) (e1) )[0] * ((double[]) (e2) )[2] ) );
		((double[]) (this18) )[2] = ( ( ((double[]) (e1) )[0] * ((double[]) (e2) )[1] ) - ( ((double[]) (e1) )[1] * ((double[]) (e2) )[0] ) );
		double[] v13 = ((double[]) (this18) );
		double _z = ( ( ( ((double[]) (v13) )[0] * ((double[]) (s) )[0] ) + ( ((double[]) (v13) )[1] * ((double[]) (s) )[1] ) ) + ( ((double[]) (v13) )[2] * ((double[]) (s) )[2] ) );
		double[] this19 = new double[3];
		double[] this20 = ((double[]) (this19) );
		((double[]) (this20) )[0] = _x;
		((double[]) (this20) )[1] = _y;
		((double[]) (this20) )[2] = _z;
		double[] this21 = ((double[]) (this20) );
		double rhs = ( 1 / denom );
		double[] this22 = new double[3];
		double[] this23 = ((double[]) (this22) );
		((double[]) (this23) )[0] = ( ((double[]) (this21) )[0] * rhs );
		((double[]) (this23) )[1] = ( ((double[]) (this21) )[1] * rhs );
		((double[]) (this23) )[2] = ( ((double[]) (this21) )[2] * rhs );
		double[] uvt = ((double[]) (this23) );
		double u = ((double[]) (uvt) )[0];
		double v = ((double[]) (uvt) )[1];
		double t = ((double[]) (uvt) )[2];
		if (( ( ( ( ( u < 0 ) || ( v < 0 ) ) || ( ( ( 1 - u ) - v ) < 0 ) ) || ( t < this.tmin ) ) || ( t > this.tmax ) )) 
		{
			return null;
		}
		
		apparentridges.RayHit h = new apparentridges.RayHit(((double) (t) ));
		h.u = u;
		h.v = v;
		return h;
	}
	
	
	public final apparentridges.RayHit hitBVH(apparentridges.BVHTree bvh)
	{
		haxe.lang.Function[] hitNode = new haxe.lang.Function[]{null};
		apparentridges.Ray _gthis = this;
		hitNode[0] = new apparentridges.Ray_hitBVH_1046__Fun(hitNode, bvh, _gthis);
		return ((apparentridges.RayHit) (hitNode[0].__hx_invoke1_o(0.0, bvh.root)) );
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3563632:
					{
						if (field.equals("tmax")) 
						{
							__temp_executeDef1 = false;
							this.tmax = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 3563870:
					{
						if (field.equals("tmin")) 
						{
							__temp_executeDef1 = false;
							this.tmin = ((double) (value) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3563632:
					{
						if (field.equals("tmax")) 
						{
							__temp_executeDef1 = false;
							this.tmax = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 111:
					{
						if (field.equals("o")) 
						{
							__temp_executeDef1 = false;
							this.o = ((double[]) (value) );
							return value;
						}
						
						break;
					}
					
					
					case 3563870:
					{
						if (field.equals("tmin")) 
						{
							__temp_executeDef1 = false;
							this.tmin = ((double) (haxe.lang.Runtime.toDouble(value)) );
							return value;
						}
						
						break;
					}
					
					
					case 100:
					{
						if (field.equals("d")) 
						{
							__temp_executeDef1 = false;
							this.d = ((double[]) (value) );
							return value;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case -1217043967:
					{
						if (field.equals("hitBVH")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hitBVH")) );
						}
						
						break;
					}
					
					
					case 111:
					{
						if (field.equals("o")) 
						{
							__temp_executeDef1 = false;
							return this.o;
						}
						
						break;
					}
					
					
					case 992657083:
					{
						if (field.equals("hitTriangle")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hitTriangle")) );
						}
						
						break;
					}
					
					
					case 100:
					{
						if (field.equals("d")) 
						{
							__temp_executeDef1 = false;
							return this.d;
						}
						
						break;
					}
					
					
					case 926324796:
					{
						if (field.equals("hitBBox")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hitBBox")) );
						}
						
						break;
					}
					
					
					case 3563870:
					{
						if (field.equals("tmin")) 
						{
							__temp_executeDef1 = false;
							return this.tmin;
						}
						
						break;
					}
					
					
					case 3563632:
					{
						if (field.equals("tmax")) 
						{
							__temp_executeDef1 = false;
							return this.tmax;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 3563632:
					{
						if (field.equals("tmax")) 
						{
							__temp_executeDef1 = false;
							return this.tmax;
						}
						
						break;
					}
					
					
					case 3563870:
					{
						if (field.equals("tmin")) 
						{
							__temp_executeDef1 = false;
							return this.tmin;
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case -1217043967:
					{
						if (field.equals("hitBVH")) 
						{
							__temp_executeDef1 = false;
							return this.hitBVH(((apparentridges.BVHTree) (dynargs[0]) ));
						}
						
						break;
					}
					
					
					case 926324796:
					{
						if (field.equals("hitBBox")) 
						{
							__temp_executeDef1 = false;
							return this.hitBBox(((apparentridges.BBox) (dynargs[0]) ));
						}
						
						break;
					}
					
					
					case 992657083:
					{
						if (field.equals("hitTriangle")) 
						{
							__temp_executeDef1 = false;
							return this.hitTriangle(((double[]) (dynargs[0]) ), ((double[]) (dynargs[1]) ), ((double[]) (dynargs[2]) ));
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("tmax");
		baseArr.push("tmin");
		baseArr.push("d");
		baseArr.push("o");
		super.__hx_getFields(baseArr);
	}
	
	
}


