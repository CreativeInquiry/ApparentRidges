// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PixelMap_curvature_1755__Fun extends haxe.lang.Function
{
	public PixelMap_curvature_1755__Fun(apparentridges.Render render, double[] data)
	{
		super(3, 0);
		this.render = render;
		this.data = data;
	}
	
	
	@Override public java.lang.Object __hx_invoke3_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2, double __fn_float3, java.lang.Object __fn_dyn3)
	{
		int y = ( (( __fn_dyn3 == haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
		int x = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
		apparentridges.RayHit h = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((apparentridges.RayHit) (((java.lang.Object) (__fn_float1) )) )) : (((apparentridges.RayHit) (__fn_dyn1) )) );
		int idx = ( (( ( y * this.render.width ) + x )) * 2 );
		if (( h == null )) 
		{
			((double[]) (this.data) )[idx] = ((double) (0) );
			((double[]) (this.data) )[( idx + 1 )] = ((double) (0) );
		}
		else
		{
			int[] f = h.face;
			double c1a = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv1.__get(((int[]) (f) )[0]))) );
			double c1b = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv1.__get(((int[]) (f) )[1]))) );
			double c1c = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv1.__get(((int[]) (f) )[2]))) );
			double c2a = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv2.__get(((int[]) (f) )[0]))) );
			double c2b = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv2.__get(((int[]) (f) )[1]))) );
			double c2c = ((double) (haxe.lang.Runtime.toDouble(this.render.mesh.curv2.__get(((int[]) (f) )[2]))) );
			double c1 = ( ( ( c1a * (( ( 1 - h.u ) - h.v )) ) + ( c1b * h.u ) ) + ( c1c * h.v ) );
			double c2 = ( ( ( c2a * (( ( 1 - h.u ) - h.v )) ) + ( c2b * h.u ) ) + ( c2c * h.v ) );
			((double[]) (this.data) )[idx] = c1;
			((double[]) (this.data) )[( idx + 1 )] = c2;
		}
		
		return null;
	}
	
	
	public apparentridges.Render render;
	
	public double[] data;
	
}


