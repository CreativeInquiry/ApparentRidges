// Generated by Haxe 4.1.3
package apparentridges;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Mesh_computeBSphere_659__Fun extends haxe.lang.Function
{
	public Mesh_computeBSphere_659__Fun(apparentridges.Mesh _gthis)
	{
		super(1, 1);
		this._gthis = _gthis;
	}
	
	
	@Override public double __hx_invoke1_f(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		double[] dir = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((double[]) (((java.lang.Object) (__fn_float1) )) )) : (((double[]) (__fn_dyn1) )) );
		int nv = this._gthis.vertices.length;
		int far = 0;
		double[] v1 = this._gthis.vertices.__get(0);
		double far_dot = ( ( ( ((double[]) (v1) )[0] * ((double[]) (dir) )[0] ) + ( ((double[]) (v1) )[1] * ((double[]) (dir) )[1] ) ) + ( ((double[]) (v1) )[2] * ((double[]) (dir) )[2] ) );
		{
			int _g = 1;
			int _g1 = nv;
			while (( _g < _g1 ))
			{
				int i = _g++;
				double[] v11 = this._gthis.vertices.__get(i);
				double my_dot = ( ( ( ((double[]) (v11) )[0] * ((double[]) (dir) )[0] ) + ( ((double[]) (v11) )[1] * ((double[]) (dir) )[1] ) ) + ( ((double[]) (v11) )[2] * ((double[]) (dir) )[2] ) );
				if (( my_dot > far_dot )) 
				{
					far = i;
					far_dot = my_dot;
				}
				
			}
			
		}
		
		return ((double) (far) );
	}
	
	
	public apparentridges.Mesh _gthis;
	
}


