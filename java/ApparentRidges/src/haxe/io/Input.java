// Generated by Haxe 4.1.3
package haxe.io;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Input extends haxe.lang.HxObject
{
	public Input(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Input()
	{
		haxe.io.Input.__hx_ctor_haxe_io_Input(this);
	}
	
	
	protected static void __hx_ctor_haxe_io_Input(haxe.io.Input __hx_this)
	{
	}
	
	
	public int readByte()
	{
		throw ((java.lang.RuntimeException) (haxe.Exception.thrown("Not implemented")) );
	}
	
	
	public int readBytes(haxe.io.Bytes s, int pos, int len)
	{
		try 
		{
			int k = len;
			byte[] b = s.b;
			if (( ( ( pos < 0 ) || ( len < 0 ) ) || ( ( pos + len ) > s.length ) )) 
			{
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.OutsideBounds)) );
			}
			
			try 
			{
				while (( k > 0 ))
				{
					b[pos] = ((byte) (this.readByte()) );
					 ++ pos;
					 -- k;
				}
				
			}
			catch (java.lang.Throwable _g)
			{
				if ( ! (( ((java.lang.Object) (haxe.Exception.caught(_g).unwrap()) ) instanceof haxe.io.Eof )) ) 
				{
					throw _g;
				}
				
			}
			
			
			return ( len - k );
		}
		catch (java.lang.Throwable typedException)
		{
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public haxe.io.Bytes readAll(java.lang.Object bufsize)
	{
		try 
		{
			if (haxe.lang.Runtime.eq(bufsize, null)) 
			{
				bufsize = 16384;
			}
			
			haxe.io.Bytes buf = haxe.io.Bytes.alloc(((int) (haxe.lang.Runtime.toInt(bufsize)) ));
			haxe.io.BytesBuffer total = new haxe.io.BytesBuffer();
			try 
			{
				while (true)
				{
					int len = this.readBytes(buf, 0, ((int) (haxe.lang.Runtime.toInt(bufsize)) ));
					if (( len == 0 )) 
					{
						throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.Blocked)) );
					}
					
					{
						if (( ( len < 0 ) || ( len > buf.length ) )) 
						{
							throw ((java.lang.RuntimeException) (haxe.Exception.thrown(haxe.io.Error.OutsideBounds)) );
						}
						
						total.b.write(((byte[]) (buf.b) ), ((int) (0) ), ((int) (len) ));
					}
					
				}
				
			}
			catch (java.lang.Throwable _g)
			{
				if ( ! (( ((java.lang.Object) (haxe.Exception.caught(_g).unwrap()) ) instanceof haxe.io.Eof )) ) 
				{
					throw _g;
				}
				
			}
			
			
			return total.getBytes();
		}
		catch (java.lang.Throwable typedException)
		{
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 1080375339:
					{
						if (field.equals("readAll")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readAll")) );
						}
						
						break;
					}
					
					
					case -868060226:
					{
						if (field.equals("readByte")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readByte")) );
						}
						
						break;
					}
					
					
					case -1140063115:
					{
						if (field.equals("readBytes")) 
						{
							__temp_executeDef1 = false;
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "readBytes")) );
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		{
			boolean __temp_executeDef1 = true;
			if (( field != null )) 
			{
				switch (field.hashCode())
				{
					case 1080375339:
					{
						if (field.equals("readAll")) 
						{
							__temp_executeDef1 = false;
							return this.readAll(( (( dynargs.length > 0 )) ? (dynargs[0]) : (null) ));
						}
						
						break;
					}
					
					
					case -868060226:
					{
						if (field.equals("readByte")) 
						{
							__temp_executeDef1 = false;
							return this.readByte();
						}
						
						break;
					}
					
					
					case -1140063115:
					{
						if (field.equals("readBytes")) 
						{
							__temp_executeDef1 = false;
							return this.readBytes(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						break;
					}
					
					
				}
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
}


