// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_apparentridges__ApparentRidges_Face_Impl_
#include <apparentridges/_ApparentRidges/Face_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e0a936b57bc2953e_268__new,"apparentridges._ApparentRidges.Face_Impl_","_new",0xb2075657,"apparentridges._ApparentRidges.Face_Impl_._new","apparentridges/ApparentRidges.hx",268,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_e0a936b57bc2953e_276_get,"apparentridges._ApparentRidges.Face_Impl_","get",0x04441060,"apparentridges._ApparentRidges.Face_Impl_.get","apparentridges/ApparentRidges.hx",276,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_e0a936b57bc2953e_279_set,"apparentridges._ApparentRidges.Face_Impl_","set",0x044d2b6c,"apparentridges._ApparentRidges.Face_Impl_.set","apparentridges/ApparentRidges.hx",279,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_e0a936b57bc2953e_283_indexOf,"apparentridges._ApparentRidges.Face_Impl_","indexOf",0x1f198593,"apparentridges._ApparentRidges.Face_Impl_.indexOf","apparentridges/ApparentRidges.hx",283,0xfeacc84f)
namespace apparentridges{
namespace _ApparentRidges{

void Face_Impl__obj::__construct() { }

Dynamic Face_Impl__obj::__CreateEmpty() { return new Face_Impl__obj; }

void *Face_Impl__obj::_hx_vtable = 0;

Dynamic Face_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Face_Impl__obj > _hx_result = new Face_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Face_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2f5499b8;
}

::Array< int > Face_Impl__obj::_new(int a,int b,int c){
            	HX_STACKFRAME(&_hx_pos_e0a936b57bc2953e_268__new)
HXLINE( 269)		::Array< int > this1 = ::Array_obj< int >::__new(3);
HXLINE( 268)		::Array< int > this2 = this1;
HXLINE( 270)		this2->__unsafe_set(0,a);
HXLINE( 271)		this2->__unsafe_set(1,b);
HXLINE( 272)		this2->__unsafe_set(2,c);
HXLINE( 268)		return this2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Face_Impl__obj,_new,return )

int Face_Impl__obj::get(::Array< int > this1,int i){
            	HX_STACKFRAME(&_hx_pos_e0a936b57bc2953e_276_get)
HXDLIN( 276)		return ( (int)(_hx_array_unsafe_get(this1,i)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Face_Impl__obj,get,return )

int Face_Impl__obj::set(::Array< int > this1,int i,int v){
            	HX_STACKFRAME(&_hx_pos_e0a936b57bc2953e_279_set)
HXLINE( 280)		this1->__unsafe_set(i,v);
HXLINE( 281)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Face_Impl__obj,set,return )

int Face_Impl__obj::indexOf(::Array< int > this1,int v){
            	HX_STACKFRAME(&_hx_pos_e0a936b57bc2953e_283_indexOf)
HXLINE( 284)		if ((( (int)(_hx_array_unsafe_get(this1,0)) ) == v)) {
HXLINE( 284)			return 0;
            		}
HXLINE( 285)		if ((( (int)(_hx_array_unsafe_get(this1,1)) ) == v)) {
HXLINE( 285)			return 1;
            		}
HXLINE( 286)		if ((( (int)(_hx_array_unsafe_get(this1,2)) ) == v)) {
HXLINE( 286)			return 2;
            		}
HXLINE( 287)		return -1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Face_Impl__obj,indexOf,return )


Face_Impl__obj::Face_Impl__obj()
{
}

bool Face_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"indexOf") ) { outValue = indexOf_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Face_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Face_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Face_Impl__obj::__mClass;

static ::String Face_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("get",96,80,4e,00),
	HX_("set",a2,9b,57,00),
	HX_("indexOf",c9,48,bf,e0),
	::String(null())
};

void Face_Impl__obj::__register()
{
	Face_Impl__obj _hx_dummy;
	Face_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges._ApparentRidges.Face_Impl_",38,c3,7f,d8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Face_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Face_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Face_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Face_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Face_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
} // end namespace _ApparentRidges
