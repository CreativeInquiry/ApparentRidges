// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_apparentridges_RayHit
#include <apparentridges/RayHit.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_60335cdf4807d466_1108_new,"apparentridges.RayHit","new",0xa757a568,"apparentridges.RayHit.new","apparentridges/ApparentRidges.hx",1108,0xfeacc84f)
namespace apparentridges{

void RayHit_obj::__construct(Float _t){
            	HX_STACKFRAME(&_hx_pos_60335cdf4807d466_1108_new)
HXDLIN(1108)		this->t = _t;
            	}

Dynamic RayHit_obj::__CreateEmpty() { return new RayHit_obj; }

void *RayHit_obj::_hx_vtable = 0;

Dynamic RayHit_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< RayHit_obj > _hx_result = new RayHit_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool RayHit_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2130bb2a;
}


RayHit_obj::RayHit_obj()
{
}

void RayHit_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(RayHit);
	HX_MARK_MEMBER_NAME(t,"t");
	HX_MARK_MEMBER_NAME(t2,"t2");
	HX_MARK_MEMBER_NAME(u,"u");
	HX_MARK_MEMBER_NAME(v,"v");
	HX_MARK_MEMBER_NAME(face,"face");
	HX_MARK_END_CLASS();
}

void RayHit_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(t,"t");
	HX_VISIT_MEMBER_NAME(t2,"t2");
	HX_VISIT_MEMBER_NAME(u,"u");
	HX_VISIT_MEMBER_NAME(v,"v");
	HX_VISIT_MEMBER_NAME(face,"face");
}

::hx::Val RayHit_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"t") ) { return ::hx::Val( t ); }
		if (HX_FIELD_EQ(inName,"u") ) { return ::hx::Val( u ); }
		if (HX_FIELD_EQ(inName,"v") ) { return ::hx::Val( v ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"t2") ) { return ::hx::Val( t2 ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"face") ) { return ::hx::Val( face ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val RayHit_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"t") ) { t=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"u") ) { u=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"v") ) { v=inValue.Cast< Float >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"t2") ) { t2=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"face") ) { face=inValue.Cast< ::Array< int > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void RayHit_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("t",74,00,00,00));
	outFields->push(HX_("t2",3e,65,00,00));
	outFields->push(HX_("u",75,00,00,00));
	outFields->push(HX_("v",76,00,00,00));
	outFields->push(HX_("face",9d,b4,b5,43));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo RayHit_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(RayHit_obj,t),HX_("t",74,00,00,00)},
	{::hx::fsFloat,(int)offsetof(RayHit_obj,t2),HX_("t2",3e,65,00,00)},
	{::hx::fsFloat,(int)offsetof(RayHit_obj,u),HX_("u",75,00,00,00)},
	{::hx::fsFloat,(int)offsetof(RayHit_obj,v),HX_("v",76,00,00,00)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(RayHit_obj,face),HX_("face",9d,b4,b5,43)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *RayHit_obj_sStaticStorageInfo = 0;
#endif

static ::String RayHit_obj_sMemberFields[] = {
	HX_("t",74,00,00,00),
	HX_("t2",3e,65,00,00),
	HX_("u",75,00,00,00),
	HX_("v",76,00,00,00),
	HX_("face",9d,b4,b5,43),
	::String(null()) };

::hx::Class RayHit_obj::__mClass;

void RayHit_obj::__register()
{
	RayHit_obj _hx_dummy;
	RayHit_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.RayHit",76,11,f7,ff);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(RayHit_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< RayHit_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RayHit_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RayHit_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
