// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_apparentridges_Util
#include <apparentridges/Util.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_17_rndInt,"apparentridges.Util","rndInt",0xda475986,"apparentridges.Util.rndInt","apparentridges/ApparentRidges.hx",17,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_20_min,"apparentridges.Util","min",0x28589353,"apparentridges.Util.min","apparentridges/ApparentRidges.hx",20,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_24_sq,"apparentridges.Util","sq",0xeef615fd,"apparentridges.Util.sq","apparentridges/ApparentRidges.hx",24,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_29_nextMod3,"apparentridges.Util","nextMod3",0xce74fc63,"apparentridges.Util.nextMod3","apparentridges/ApparentRidges.hx",29,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_32_prevMod3,"apparentridges.Util","prevMod3",0xeb763663,"apparentridges.Util.prevMod3","apparentridges/ApparentRidges.hx",32,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_36_trinorm,"apparentridges.Util","trinorm",0x0a35e728,"apparentridges.Util.trinorm","apparentridges/ApparentRidges.hx",36,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_45_ldltdc,"apparentridges.Util","ldltdc",0xb78baf5e,"apparentridges.Util.ldltdc","apparentridges/ApparentRidges.hx",45,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_91_ldltsl,"apparentridges.Util","ldltsl",0xb78bbc78,"apparentridges.Util.ldltsl","apparentridges/ApparentRidges.hx",91,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_112_largestEig2x2,"apparentridges.Util","largestEig2x2",0xa64eb906,"apparentridges.Util.largestEig2x2","apparentridges/ApparentRidges.hx",112,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_129_matIden,"apparentridges.Util","matIden",0x57f99e05,"apparentridges.Util.matIden","apparentridges/ApparentRidges.hx",129,0xfeacc84f)
static const Float _hx_array_data_66a3adaf_18[] = {
	(Float)1,(Float)0,(Float)0,(Float)0,(Float)0,(Float)1,(Float)0,(Float)0,(Float)0,(Float)0,(Float)1,(Float)0,(Float)0,(Float)0,(Float)0,(Float)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_130_matRotx,"apparentridges.Util","matRotx",0x5df4ef82,"apparentridges.Util.matRotx","apparentridges/ApparentRidges.hx",130,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_131_matRoty,"apparentridges.Util","matRoty",0x5df4ef83,"apparentridges.Util.matRoty","apparentridges/ApparentRidges.hx",131,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_132_matRotz,"apparentridges.Util","matRotz",0x5df4ef84,"apparentridges.Util.matRotz","apparentridges/ApparentRidges.hx",132,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_133_matTrsl,"apparentridges.Util","matTrsl",0x5f49a298,"apparentridges.Util.matTrsl","apparentridges/ApparentRidges.hx",133,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_134_matScal,"apparentridges.Util","matScal",0x5e94fa7c,"apparentridges.Util.matScal","apparentridges/ApparentRidges.hx",134,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_136_matMult,"apparentridges.Util","matMult",0x5aab64f1,"apparentridges.Util.matMult","apparentridges/ApparentRidges.hx",136,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_144_matTrfm,"apparentridges.Util","matTrfm",0x5f499746,"apparentridges.Util.matTrfm","apparentridges/ApparentRidges.hx",144,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_147_matProj,"apparentridges.Util","matProj",0x5ca4c49e,"apparentridges.Util.matProj","apparentridges/ApparentRidges.hx",147,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_149_uniformHemisphereSampler,"apparentridges.Util","uniformHemisphereSampler",0x29af7f0d,"apparentridges.Util.uniformHemisphereSampler","apparentridges/ApparentRidges.hx",149,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1c3b4f34a29f24_163_writeFile,"apparentridges.Util","writeFile",0x70ba8b7c,"apparentridges.Util.writeFile","apparentridges/ApparentRidges.hx",163,0xfeacc84f)
namespace apparentridges{

void Util_obj::__construct() { }

Dynamic Util_obj::__CreateEmpty() { return new Util_obj; }

void *Util_obj::_hx_vtable = 0;

Dynamic Util_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Util_obj > _hx_result = new Util_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Util_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4f27c263;
}

int Util_obj::rndInt(Float x){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_17_rndInt)
HXDLIN(  17)		return ::Std_obj::_hx_int(( (Float)(::Math_obj::round(x)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,rndInt,return )

int Util_obj::min(int a,int b){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_20_min)
HXDLIN(  20)		if ((a > b)) {
HXDLIN(  20)			return b;
            		}
            		else {
HXDLIN(  20)			return a;
            		}
HXDLIN(  20)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,min,return )

Float Util_obj::sq(Float x){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_24_sq)
HXDLIN(  24)		return (x * x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,sq,return )

int Util_obj::nextMod3(int i){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_29_nextMod3)
HXDLIN(  29)		if ((i < 2)) {
HXDLIN(  29)			return (i + 1);
            		}
            		else {
HXDLIN(  29)			return (i - 2);
            		}
HXDLIN(  29)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,nextMod3,return )

int Util_obj::prevMod3(int i){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_32_prevMod3)
HXDLIN(  32)		if ((i > 0)) {
HXDLIN(  32)			return (i - 1);
            		}
            		else {
HXDLIN(  32)			return (i + 2);
            		}
HXDLIN(  32)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,prevMod3,return )

::Array< Float > Util_obj::trinorm(::Array< Float > v0,::Array< Float > v1,::Array< Float > v2){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_36_trinorm)
HXDLIN(  36)		Float _x = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(  36)		Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(v0,0)) ));
HXDLIN(  36)		Float _y = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(  36)		Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(v0,1)) ));
HXDLIN(  36)		Float _z = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(  36)		Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(v0,2)) ));
HXDLIN(  36)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(  36)		::Array< Float > this2 = this1;
HXDLIN(  36)		this2->__unsafe_set(0,_x1);
HXDLIN(  36)		this2->__unsafe_set(1,_y1);
HXDLIN(  36)		this2->__unsafe_set(2,_z1);
HXDLIN(  36)		::Array< Float > v11 = this2;
HXDLIN(  36)		Float _x2 = ( (Float)(_hx_array_unsafe_get(v2,0)) );
HXDLIN(  36)		Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(v0,0)) ));
HXDLIN(  36)		Float _y2 = ( (Float)(_hx_array_unsafe_get(v2,1)) );
HXDLIN(  36)		Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(v0,1)) ));
HXDLIN(  36)		Float _z2 = ( (Float)(_hx_array_unsafe_get(v2,2)) );
HXDLIN(  36)		Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(v0,2)) ));
HXDLIN(  36)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(  36)		::Array< Float > this4 = this3;
HXDLIN(  36)		this4->__unsafe_set(0,_x3);
HXDLIN(  36)		this4->__unsafe_set(1,_y3);
HXDLIN(  36)		this4->__unsafe_set(2,_z3);
HXDLIN(  36)		::Array< Float > v21 = this4;
HXDLIN(  36)		Float _x4 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(  36)		Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(v21,2)) ));
HXDLIN(  36)		Float _x6 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(  36)		Float _x7 = (_x5 - (_x6 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN(  36)		Float _y4 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(  36)		Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN(  36)		Float _y6 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(  36)		Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(v21,2)) )));
HXDLIN(  36)		Float _z4 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(  36)		Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(v21,1)) ));
HXDLIN(  36)		Float _z6 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(  36)		Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(v21,0)) )));
HXDLIN(  36)		::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN(  36)		::Array< Float > this6 = this5;
HXDLIN(  36)		this6->__unsafe_set(0,_x7);
HXDLIN(  36)		this6->__unsafe_set(1,_y7);
HXDLIN(  36)		this6->__unsafe_set(2,_z7);
HXDLIN(  36)		::Array< Float > this7 = this6;
HXDLIN(  36)		Float _x8 = (( (Float)(_hx_array_unsafe_get(this7,0)) ) * ((Float)0.5));
HXDLIN(  36)		Float _y8 = (( (Float)(_hx_array_unsafe_get(this7,1)) ) * ((Float)0.5));
HXDLIN(  36)		Float _z8 = (( (Float)(_hx_array_unsafe_get(this7,2)) ) * ((Float)0.5));
HXDLIN(  36)		::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN(  36)		::Array< Float > this9 = this8;
HXDLIN(  36)		this9->__unsafe_set(0,_x8);
HXDLIN(  36)		this9->__unsafe_set(1,_y8);
HXDLIN(  36)		this9->__unsafe_set(2,_z8);
HXDLIN(  36)		return this9;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Util_obj,trinorm,return )

bool Util_obj::ldltdc(::Array< ::Dynamic> A,::Array< Float > rdiag){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_45_ldltdc)
HXLINE(  47)		int N = rdiag->length;
HXLINE(  48)		if ((N < 1)) {
HXLINE(  49)			return false;
            		}
            		else {
HXLINE(  50)			if ((N <= 3)) {
HXLINE(  51)				Float d0 = A->__get(0).StaticCast< ::Array< Float > >()->__get(0);
HXLINE(  52)				rdiag[0] = (( (Float)(1) ) / d0);
HXLINE(  53)				if ((N == 1)) {
HXLINE(  54)					return (d0 != 0);
            				}
HXLINE(  55)				A->__get(1).StaticCast< ::Array< Float > >()[0] = A->__get(0).StaticCast< ::Array< Float > >()->__get(1);
HXLINE(  56)				Float l10 = (rdiag->__get(0) * A->__get(1).StaticCast< ::Array< Float > >()->__get(0));
HXLINE(  57)				Float d1 = (A->__get(1).StaticCast< ::Array< Float > >()->__get(1) - (l10 * A->__get(1).StaticCast< ::Array< Float > >()->__get(0)));
HXLINE(  58)				rdiag[1] = (( (Float)(1) ) / d1);
HXLINE(  59)				if ((N == 2)) {
HXLINE(  60)					if ((d0 != 0)) {
HXLINE(  60)						return (d1 != 0);
            					}
            					else {
HXLINE(  60)						return false;
            					}
            				}
HXLINE(  61)				Float x = A->__get(2).StaticCast< ::Array< Float > >()->__get(0);
HXDLIN(  61)				Float x1 = A->__get(2).StaticCast< ::Array< Float > >()->__get(1);
HXDLIN(  61)				Float d2 = ((A->__get(2).StaticCast< ::Array< Float > >()->__get(2) - (rdiag->__get(0) * (x * x))) - (rdiag->__get(1) * (x1 * x1)));
HXLINE(  62)				rdiag[2] = (( (Float)(1) ) / d2);
HXLINE(  63)				A->__get(2).StaticCast< ::Array< Float > >()[0] = A->__get(0).StaticCast< ::Array< Float > >()->__get(2);
HXLINE(  64)				A->__get(2).StaticCast< ::Array< Float > >()[1] = (A->__get(1).StaticCast< ::Array< Float > >()->__get(2) - (l10 * A->__get(2).StaticCast< ::Array< Float > >()->__get(0)));
HXLINE(  65)				bool _hx_tmp;
HXDLIN(  65)				if ((d0 != 0)) {
HXLINE(  65)					_hx_tmp = (d1 != 0);
            				}
            				else {
HXLINE(  65)					_hx_tmp = false;
            				}
HXDLIN(  65)				if (_hx_tmp) {
HXLINE(  65)					return (d2 != 0);
            				}
            				else {
HXLINE(  65)					return false;
            				}
            			}
            		}
HXLINE(  67)		::Array< Float > v = ::Array_obj< Float >::__new(0);
HXLINE(  68)		{
HXLINE(  68)			int _g = 0;
HXDLIN(  68)			int _g1 = N;
HXDLIN(  68)			while((_g < _g1)){
HXLINE(  68)				_g = (_g + 1);
HXDLIN(  68)				int i = (_g - 1);
HXLINE(  69)				{
HXLINE(  69)					int _g1 = 0;
HXDLIN(  69)					int _g2 = i;
HXDLIN(  69)					while((_g1 < _g2)){
HXLINE(  69)						_g1 = (_g1 + 1);
HXDLIN(  69)						int k = (_g1 - 1);
HXLINE(  70)						v[k] = (A->__get(i).StaticCast< ::Array< Float > >()->__get(k) * rdiag->__get(k));
            					}
            				}
HXLINE(  71)				{
HXLINE(  71)					int _g3 = i;
HXDLIN(  71)					int _g4 = N;
HXDLIN(  71)					while((_g3 < _g4)){
HXLINE(  71)						_g3 = (_g3 + 1);
HXDLIN(  71)						int j = (_g3 - 1);
HXLINE(  72)						Float sum = A->__get(i).StaticCast< ::Array< Float > >()->__get(j);
HXLINE(  73)						{
HXLINE(  73)							int _g = 0;
HXDLIN(  73)							int _g1 = i;
HXDLIN(  73)							while((_g < _g1)){
HXLINE(  73)								_g = (_g + 1);
HXDLIN(  73)								int k = (_g - 1);
HXLINE(  74)								sum = (sum - (v->__get(k) * A->__get(j).StaticCast< ::Array< Float > >()->__get(k)));
            							}
            						}
HXLINE(  75)						if ((i == j)) {
HXLINE(  76)							if ((sum == 0)) {
HXLINE(  77)								return false;
            							}
HXLINE(  78)							rdiag[i] = (( (Float)(1) ) / sum);
            						}
            						else {
HXLINE(  80)							A->__get(j).StaticCast< ::Array< Float > >()[i] = sum;
            						}
            					}
            				}
            			}
            		}
HXLINE(  85)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,ldltdc,return )

void Util_obj::ldltsl(::Array< ::Dynamic> A,::Array< Float > rdiag,::Array< Float > b,::Array< Float > x){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_91_ldltsl)
HXLINE(  92)		int N = rdiag->length;
HXLINE(  93)		{
HXLINE(  93)			int _g = 0;
HXDLIN(  93)			int _g1 = N;
HXDLIN(  93)			while((_g < _g1)){
HXLINE(  93)				_g = (_g + 1);
HXDLIN(  93)				int i = (_g - 1);
HXLINE(  94)				Float sum = b->__get(i);
HXLINE(  95)				{
HXLINE(  95)					int _g1 = 0;
HXDLIN(  95)					int _g2 = i;
HXDLIN(  95)					while((_g1 < _g2)){
HXLINE(  95)						_g1 = (_g1 + 1);
HXDLIN(  95)						int k = (_g1 - 1);
HXLINE(  96)						sum = (sum - (A->__get(i).StaticCast< ::Array< Float > >()->__get(k) * x->__get(k)));
            					}
            				}
HXLINE(  97)				x[i] = (sum * rdiag->__get(i));
            			}
            		}
HXLINE(  99)		{
HXLINE(  99)			int _g2 = 0;
HXDLIN(  99)			int _g3 = N;
HXDLIN(  99)			while((_g2 < _g3)){
HXLINE(  99)				_g2 = (_g2 + 1);
HXDLIN(  99)				int _i = (_g2 - 1);
HXLINE( 100)				int i = ((N - _i) - 1);
HXLINE( 101)				Float sum = ( (Float)(0) );
HXLINE( 102)				{
HXLINE( 102)					int _g = (i + 1);
HXDLIN( 102)					int _g1 = N;
HXDLIN( 102)					while((_g < _g1)){
HXLINE( 102)						_g = (_g + 1);
HXDLIN( 102)						int k = (_g - 1);
HXLINE( 103)						sum = (sum + (A->__get(k).StaticCast< ::Array< Float > >()->__get(i) * x->__get(k)));
            					}
            				}
HXLINE( 104)				::Array< Float > x1 = x;
HXDLIN( 104)				int i1 = i;
HXDLIN( 104)				x1[i1] = (x1->__get(i1) - (sum * rdiag->__get(i)));
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Util_obj,ldltsl,(void))

::Array< Float > Util_obj::largestEig2x2(Float m1,Float m12,Float m2){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_112_largestEig2x2)
HXLINE( 113)		Float l1 = (((Float)0.5) * (m1 + m2));
HXLINE( 117)		if ((l1 > ((Float)0.0))) {
HXLINE( 118)			Float x = (m2 - m1);
HXDLIN( 118)			l1 = (l1 + ::Math_obj::sqrt(((m12 * m12) + (((Float)0.25) * (x * x)))));
            		}
            		else {
HXLINE( 120)			Float x = (m2 - m1);
HXDLIN( 120)			l1 = (l1 - ::Math_obj::sqrt(((m12 * m12) + (((Float)0.25) * (x * x)))));
            		}
HXLINE( 123)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 123)		::Array< Float > this2 = this1;
HXDLIN( 123)		this2->__unsafe_set(0,(m2 - l1));
HXDLIN( 123)		this2->__unsafe_set(1,-(m12));
HXDLIN( 123)		this2->__unsafe_set(2,0);
HXDLIN( 123)		::Array< Float > e1 = this2;
HXLINE( 124)		{
HXLINE( 124)			Float l = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 124)			Float l2 = (l * ( (Float)(_hx_array_unsafe_get(e1,0)) ));
HXDLIN( 124)			Float l3 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 124)			Float l4 = (l2 + (l3 * ( (Float)(_hx_array_unsafe_get(e1,1)) )));
HXDLIN( 124)			Float l5 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 124)			Float l6 = ::Math_obj::sqrt((l4 + (l5 * ( (Float)(_hx_array_unsafe_get(e1,2)) ))));
HXDLIN( 124)			if ((l6 > 0)) {
HXLINE( 124)				l6 = (( (Float)(1) ) / l6);
HXDLIN( 124)				{
HXLINE( 124)					::Array< Float > _g = e1;
HXDLIN( 124)					{
HXLINE( 124)						Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l6);
HXDLIN( 124)						_g->__unsafe_set(0,v);
            					}
            				}
HXDLIN( 124)				{
HXLINE( 124)					::Array< Float > _g1 = e1;
HXDLIN( 124)					{
HXLINE( 124)						Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l6);
HXDLIN( 124)						_g1->__unsafe_set(1,v1);
            					}
            				}
HXDLIN( 124)				{
HXLINE( 124)					::Array< Float > _g2 = e1;
HXDLIN( 124)					{
HXLINE( 124)						Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l6);
HXDLIN( 124)						_g2->__unsafe_set(2,v2);
            					}
            				}
            			}
            			else {
HXLINE( 124)				e1->__unsafe_set(0,0);
HXDLIN( 124)				e1->__unsafe_set(1,0);
HXDLIN( 124)				e1->__unsafe_set(2,1);
            			}
            		}
HXLINE( 125)		e1->__unsafe_set(2,l1);
HXLINE( 126)		return e1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Util_obj,largestEig2x2,return )

::Array< Float > Util_obj::matIden(){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_129_matIden)
HXDLIN( 129)		return ::Array_obj< Float >::fromData( _hx_array_data_66a3adaf_18,16);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Util_obj,matIden,return )

::Array< Float > Util_obj::matRotx(Float a){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_130_matRotx)
HXDLIN( 130)		return ::Array_obj< Float >::__new(16)->init(0,1)->init(1,0)->init(2,0)->init(3,0)->init(4,0)->init(5,::Math_obj::cos(a))->init(6,-(::Math_obj::sin(a)))->init(7,0)->init(8,0)->init(9,::Math_obj::sin(a))->init(10,::Math_obj::cos(a))->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,matRotx,return )

::Array< Float > Util_obj::matRoty(Float a){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_131_matRoty)
HXDLIN( 131)		return ::Array_obj< Float >::__new(16)->init(0,::Math_obj::cos(a))->init(1,0)->init(2,::Math_obj::sin(a))->init(3,0)->init(4,0)->init(5,1)->init(6,0)->init(7,0)->init(8,-(::Math_obj::sin(a)))->init(9,0)->init(10,::Math_obj::cos(a))->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,matRoty,return )

::Array< Float > Util_obj::matRotz(Float a){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_132_matRotz)
HXDLIN( 132)		return ::Array_obj< Float >::__new(16)->init(0,::Math_obj::cos(a))->init(1,-(::Math_obj::sin(a)))->init(2,0)->init(3,0)->init(4,::Math_obj::sin(a))->init(5,::Math_obj::cos(a))->init(6,0)->init(7,0)->init(8,0)->init(9,0)->init(10,1)->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Util_obj,matRotz,return )

::Array< Float > Util_obj::matTrsl(Float x,Float y,Float z){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_133_matTrsl)
HXDLIN( 133)		return ::Array_obj< Float >::__new(16)->init(0,1)->init(1,0)->init(2,0)->init(3,x)->init(4,0)->init(5,1)->init(6,0)->init(7,y)->init(8,0)->init(9,0)->init(10,1)->init(11,z)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Util_obj,matTrsl,return )

::Array< Float > Util_obj::matScal(Float x,Float y,Float z){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_134_matScal)
HXDLIN( 134)		return ::Array_obj< Float >::__new(16)->init(0,x)->init(1,0)->init(2,0)->init(3,0)->init(4,0)->init(5,y)->init(6,0)->init(7,0)->init(8,0)->init(9,0)->init(10,z)->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Util_obj,matScal,return )

::Array< Float > Util_obj::matMult(::Array< Float > A,::Array< Float > B){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_136_matMult)
HXDLIN( 136)		return ::Array_obj< Float >::__new(16)->init(0,((((A->__get(0) * B->__get(0)) + (A->__get(1) * B->__get(4))) + (A->__get(2) * B->__get(8))) + (A->__get(3) * B->__get(12))))->init(1,((((A->__get(0) * B->__get(1)) + (A->__get(1) * B->__get(5))) + (A->__get(2) * B->__get(9))) + (A->__get(3) * B->__get(13))))->init(2,((((A->__get(0) * B->__get(2)) + (A->__get(1) * B->__get(6))) + (A->__get(2) * B->__get(10))) + (A->__get(3) * B->__get(14))))->init(3,((((A->__get(0) * B->__get(3)) + (A->__get(1) * B->__get(7))) + (A->__get(2) * B->__get(11))) + (A->__get(3) * B->__get(15))))->init(4,((((A->__get(4) * B->__get(0)) + (A->__get(5) * B->__get(4))) + (A->__get(6) * B->__get(8))) + (A->__get(7) * B->__get(12))))->init(5,((((A->__get(4) * B->__get(1)) + (A->__get(5) * B->__get(5))) + (A->__get(6) * B->__get(9))) + (A->__get(7) * B->__get(13))))->init(6,((((A->__get(4) * B->__get(2)) + (A->__get(5) * B->__get(6))) + (A->__get(6) * B->__get(10))) + (A->__get(7) * B->__get(14))))->init(7,((((A->__get(4) * B->__get(3)) + (A->__get(5) * B->__get(7))) + (A->__get(6) * B->__get(11))) + (A->__get(7) * B->__get(15))))->init(8,((((A->__get(8) * B->__get(0)) + (A->__get(9) * B->__get(4))) + (A->__get(10) * B->__get(8))) + (A->__get(11) * B->__get(12))))->init(9,((((A->__get(8) * B->__get(1)) + (A->__get(9) * B->__get(5))) + (A->__get(10) * B->__get(9))) + (A->__get(11) * B->__get(13))))->init(10,((((A->__get(8) * B->__get(2)) + (A->__get(9) * B->__get(6))) + (A->__get(10) * B->__get(10))) + (A->__get(11) * B->__get(14))))->init(11,((((A->__get(8) * B->__get(3)) + (A->__get(9) * B->__get(7))) + (A->__get(10) * B->__get(11))) + (A->__get(11) * B->__get(15))))->init(12,((((A->__get(12) * B->__get(0)) + (A->__get(13) * B->__get(4))) + (A->__get(14) * B->__get(8))) + (A->__get(15) * B->__get(12))))->init(13,((((A->__get(12) * B->__get(1)) + (A->__get(13) * B->__get(5))) + (A->__get(14) * B->__get(9))) + (A->__get(15) * B->__get(13))))->init(14,((((A->__get(12) * B->__get(2)) + (A->__get(13) * B->__get(6))) + (A->__get(14) * B->__get(10))) + (A->__get(15) * B->__get(14))))->init(15,((((A->__get(12) * B->__get(3)) + (A->__get(13) * B->__get(7))) + (A->__get(14) * B->__get(11))) + (A->__get(15) * B->__get(15))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,matMult,return )

::Array< Float > Util_obj::matTrfm(::Array< Float > A,::Array< Float > v){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_144_matTrfm)
HXDLIN( 144)		Float A1 = A->__get(0);
HXDLIN( 144)		Float _x = (A1 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 144)		Float A2 = A->__get(1);
HXDLIN( 144)		Float _x1 = (_x + (A2 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 144)		Float A3 = A->__get(2);
HXDLIN( 144)		Float _x2 = (_x1 + (A3 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN( 144)		Float _x3 = (_x2 + A->__get(3));
HXDLIN( 144)		Float A4 = A->__get(12);
HXDLIN( 144)		Float _x4 = (A4 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 144)		Float A5 = A->__get(13);
HXDLIN( 144)		Float _x5 = (_x4 + (A5 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 144)		Float A6 = A->__get(14);
HXDLIN( 144)		Float _x6 = (_x5 + (A6 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN( 144)		Float _x7 = (_x3 / (_x6 + A->__get(15)));
HXLINE( 145)		Float A7 = A->__get(4);
HXDLIN( 145)		Float _y = (A7 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 145)		Float A8 = A->__get(5);
HXDLIN( 145)		Float _y1 = (_y + (A8 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 145)		Float A9 = A->__get(6);
HXDLIN( 145)		Float _y2 = (_y1 + (A9 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN( 145)		Float _y3 = (_y2 + A->__get(7));
HXDLIN( 145)		Float A10 = A->__get(12);
HXDLIN( 145)		Float _y4 = (A10 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 145)		Float A11 = A->__get(13);
HXDLIN( 145)		Float _y5 = (_y4 + (A11 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 145)		Float A12 = A->__get(14);
HXDLIN( 145)		Float _y6 = (_y5 + (A12 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXLINE( 144)		Float _y7 = (_y3 / (_y6 + A->__get(15)));
HXLINE( 145)		Float A13 = A->__get(8);
HXDLIN( 145)		Float _z = (A13 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 145)		Float A14 = A->__get(9);
HXDLIN( 145)		Float _z1 = (_z + (A14 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 145)		Float A15 = A->__get(10);
HXDLIN( 145)		Float _z2 = (_z1 + (A15 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN( 145)		Float _z3 = (_z2 + A->__get(11));
HXDLIN( 145)		Float A16 = A->__get(12);
HXDLIN( 145)		Float _z4 = (A16 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 145)		Float A17 = A->__get(13);
HXDLIN( 145)		Float _z5 = (_z4 + (A17 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN( 145)		Float A18 = A->__get(14);
HXDLIN( 145)		Float _z6 = (_z5 + (A18 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXLINE( 144)		Float _z7 = (_z3 / (_z6 + A->__get(15)));
HXDLIN( 144)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 144)		::Array< Float > this2 = this1;
HXDLIN( 144)		this2->__unsafe_set(0,_x7);
HXDLIN( 144)		this2->__unsafe_set(1,_y7);
HXDLIN( 144)		this2->__unsafe_set(2,_z7);
HXDLIN( 144)		return this2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,matTrfm,return )

::Array< Float > Util_obj::matProj(Float f,::Array< Float > v){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_147_matProj)
HXDLIN( 147)		Float _x = (f * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN( 147)		Float _x1 = (_x / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN( 147)		Float _y = (f * ( (Float)(_hx_array_unsafe_get(v,1)) ));
HXDLIN( 147)		Float _y1 = (_y / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN( 147)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 147)		::Array< Float > this2 = this1;
HXDLIN( 147)		this2->__unsafe_set(0,_x1);
HXDLIN( 147)		this2->__unsafe_set(1,_y1);
HXDLIN( 147)		this2->__unsafe_set(2,0);
HXDLIN( 147)		return this2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,matProj,return )

::Array< Float > Util_obj::uniformHemisphereSampler(){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_149_uniformHemisphereSampler)
HXLINE( 150)		Float Xi1 = ::Math_obj::random();
HXLINE( 151)		Float Xi2 = ::Math_obj::random();
HXLINE( 152)		Float theta = ::Math_obj::acos(Xi1);
HXLINE( 153)		Float phi = ((( (Float)(2) ) * ::Math_obj::PI) * Xi2);
HXLINE( 154)		Float xs = (::Math_obj::sin(theta) * ::Math_obj::cos(phi));
HXLINE( 155)		Float ys = (::Math_obj::sin(theta) * ::Math_obj::sin(phi));
HXLINE( 156)		Float zs = ::Math_obj::cos(theta);
HXLINE( 157)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 157)		::Array< Float > this2 = this1;
HXDLIN( 157)		this2->__unsafe_set(0,xs);
HXDLIN( 157)		this2->__unsafe_set(1,ys);
HXDLIN( 157)		this2->__unsafe_set(2,zs);
HXDLIN( 157)		::Array< Float > v = this2;
HXLINE( 158)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Util_obj,uniformHemisphereSampler,return )

void Util_obj::writeFile(::String filename,::String content){
            	HX_STACKFRAME(&_hx_pos_bc1c3b4f34a29f24_163_writeFile)
HXDLIN( 163)		::sys::io::File_obj::saveContent(filename,content);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Util_obj,writeFile,(void))


Util_obj::Util_obj()
{
}

bool Util_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"sq") ) { outValue = sq_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"min") ) { outValue = min_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rndInt") ) { outValue = rndInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ldltdc") ) { outValue = ldltdc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ldltsl") ) { outValue = ldltsl_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"trinorm") ) { outValue = trinorm_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matIden") ) { outValue = matIden_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matRotx") ) { outValue = matRotx_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matRoty") ) { outValue = matRoty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matRotz") ) { outValue = matRotz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matTrsl") ) { outValue = matTrsl_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matScal") ) { outValue = matScal_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matMult") ) { outValue = matMult_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matTrfm") ) { outValue = matTrfm_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"matProj") ) { outValue = matProj_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextMod3") ) { outValue = nextMod3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"prevMod3") ) { outValue = prevMod3_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"writeFile") ) { outValue = writeFile_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"largestEig2x2") ) { outValue = largestEig2x2_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"uniformHemisphereSampler") ) { outValue = uniformHemisphereSampler_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Util_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Util_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Util_obj::__mClass;

static ::String Util_obj_sStaticFields[] = {
	HX_("rndInt",a7,0c,14,2d),
	HX_("min",92,11,53,00),
	HX_("sq",9e,64,00,00),
	HX_("nextMod3",c4,79,2d,f4),
	HX_("prevMod3",c4,b3,2e,11),
	HX_("trinorm",e7,f0,85,2a),
	HX_("ldltdc",7f,62,58,0a),
	HX_("ldltsl",99,6f,58,0a),
	HX_("largestEig2x2",05,1c,4f,2a),
	HX_("matIden",c4,a7,49,78),
	HX_("matRotx",41,f9,44,7e),
	HX_("matRoty",42,f9,44,7e),
	HX_("matRotz",43,f9,44,7e),
	HX_("matTrsl",57,ac,99,7f),
	HX_("matScal",3b,04,e5,7e),
	HX_("matMult",b0,6e,fb,7a),
	HX_("matTrfm",05,a1,99,7f),
	HX_("matProj",5d,ce,f4,7c),
	HX_("uniformHemisphereSampler",6e,8e,54,eb),
	HX_("writeFile",fb,c2,6f,4c),
	::String(null())
};

void Util_obj::__register()
{
	Util_obj _hx_dummy;
	Util_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.Util",af,ad,a3,66);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Util_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Util_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Util_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Util_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Util_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
