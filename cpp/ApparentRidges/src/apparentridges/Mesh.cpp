// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_apparentridges_BBox
#include <apparentridges/BBox.h>
#endif
#ifndef INCLUDED_apparentridges_BSphere
#include <apparentridges/BSphere.h>
#endif
#ifndef INCLUDED_apparentridges_BVHNode
#include <apparentridges/BVHNode.h>
#endif
#ifndef INCLUDED_apparentridges_BVHTree
#include <apparentridges/BVHTree.h>
#endif
#ifndef INCLUDED_apparentridges_Mesh
#include <apparentridges/Mesh.h>
#endif
#ifndef INCLUDED_apparentridges_RayHit
#include <apparentridges/RayHit.h>
#endif
#ifndef INCLUDED_apparentridges_Ridge
#include <apparentridges/Ridge.h>
#endif
#ifndef INCLUDED_apparentridges_Util
#include <apparentridges/Util.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0d00699988983bd6_311_new,"apparentridges.Mesh","new",0xa0fb158c,"apparentridges.Mesh.new","apparentridges/ApparentRidges.hx",311,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_336_precompute,"apparentridges.Mesh","precompute",0x641b7a08,"apparentridges.Mesh.precompute","apparentridges/ApparentRidges.hx",336,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_354_computeNormals,"apparentridges.Mesh","computeNormals",0xb0f8f009,"apparentridges.Mesh.computeNormals","apparentridges/ApparentRidges.hx",354,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_375_computeBSphere,"apparentridges.Mesh","computeBSphere",0x61e118ac,"apparentridges.Mesh.computeBSphere","apparentridges/ApparentRidges.hx",375,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_372_computeBSphere,"apparentridges.Mesh","computeBSphere",0x61e118ac,"apparentridges.Mesh.computeBSphere","apparentridges/ApparentRidges.hx",372,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_447_computeFeatureSize,"apparentridges.Mesh","computeFeatureSize",0xb8ab64b4,"apparentridges.Mesh.computeFeatureSize","apparentridges/ApparentRidges.hx",447,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_428_computeFeatureSize,"apparentridges.Mesh","computeFeatureSize",0xb8ab64b4,"apparentridges.Mesh.computeFeatureSize","apparentridges/ApparentRidges.hx",428,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_454_computeAdjacentFaces,"apparentridges.Mesh","computeAdjacentFaces",0x1d8f1071,"apparentridges.Mesh.computeAdjacentFaces","apparentridges/ApparentRidges.hx",454,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_463_getFaceEdges,"apparentridges.Mesh","getFaceEdges",0xed1ea197,"apparentridges.Mesh.getFaceEdges","apparentridges/ApparentRidges.hx",463,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_471_computePointAreas,"apparentridges.Mesh","computePointAreas",0x60c50a59,"apparentridges.Mesh.computePointAreas","apparentridges/ApparentRidges.hx",471,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_598_computeCurvatures,"apparentridges.Mesh","computeCurvatures",0xa4c46277,"apparentridges.Mesh.computeCurvatures","apparentridges/ApparentRidges.hx",598,0xfeacc84f)
static const Float _hx_array_data_614e9f9a_33[] = {
	(Float)0,(Float)0,(Float)0,
};
static const Float _hx_array_data_614e9f9a_34[] = {
	(Float)0,(Float)0,(Float)0,
};
static const Float _hx_array_data_614e9f9a_35[] = {
	(Float)0,(Float)0,(Float)0,
};
static const Float _hx_array_data_614e9f9a_36[] = {
	(Float)0,(Float)0,(Float)0,
};
static const Float _hx_array_data_614e9f9a_37[] = {
	(Float)0,(Float)0,(Float)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_694_computeVertViewDepCurv,"apparentridges.Mesh","computeVertViewDepCurv",0x594d13ec,"apparentridges.Mesh.computeVertViewDepCurv","apparentridges/ApparentRidges.hx",694,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_715_computeVertDt1q1,"apparentridges.Mesh","computeVertDt1q1",0x0fa74ded,"apparentridges.Mesh.computeVertDt1q1","apparentridges/ApparentRidges.hx",715,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_783_segmentApparentRidge,"apparentridges.Mesh","segmentApparentRidge",0x35d14fb3,"apparentridges.Mesh.segmentApparentRidge","apparentridges/ApparentRidges.hx",783,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_844_facesApparentRidges,"apparentridges.Mesh","facesApparentRidges",0x4b5ccf23,"apparentridges.Mesh.facesApparentRidges","apparentridges/ApparentRidges.hx",844,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_939_apparentRidges,"apparentridges.Mesh","apparentRidges",0x6ea2c875,"apparentridges.Mesh.apparentRidges","apparentridges/ApparentRidges.hx",939,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_968_computeBVHTrivial,"apparentridges.Mesh","computeBVHTrivial",0xe868d458,"apparentridges.Mesh.computeBVHTrivial","apparentridges/ApparentRidges.hx",968,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_972_computeBVH,"apparentridges.Mesh","computeBVH",0x742fd531,"apparentridges.Mesh.computeBVH","apparentridges/ApparentRidges.hx",972,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_986_visible,"apparentridges.Mesh","visible",0x1ef3c39e,"apparentridges.Mesh.visible","apparentridges/ApparentRidges.hx",986,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_977_visible,"apparentridges.Mesh","visible",0x1ef3c39e,"apparentridges.Mesh.visible","apparentridges/ApparentRidges.hx",977,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_515_rotCoordSys,"apparentridges.Mesh","rotCoordSys",0x12d1e7bb,"apparentridges.Mesh.rotCoordSys","apparentridges/ApparentRidges.hx",515,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_546_projCurv,"apparentridges.Mesh","projCurv",0xfaec4c87,"apparentridges.Mesh.projCurv","apparentridges/ApparentRidges.hx",546,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_0d00699988983bd6_565_diagonalizeCurv,"apparentridges.Mesh","diagonalizeCurv",0x048a5341,"apparentridges.Mesh.diagonalizeCurv","apparentridges/ApparentRidges.hx",565,0xfeacc84f)
namespace apparentridges{

void Mesh_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_311_new)
HXLINE( 325)		this->Dt1q1 = ::Array_obj< Float >::__new(0);
HXLINE( 324)		this->t1q1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 323)		this->ndotv = ::Array_obj< Float >::__new(0);
HXLINE( 321)		this->adjacentFaces = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 320)		this->cornerAreas = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 319)		this->pointAreas = ::Array_obj< Float >::__new(0);
HXLINE( 318)		this->pdir2 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 317)		this->pdir1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 316)		this->curv2 = ::Array_obj< Float >::__new(0);
HXLINE( 315)		this->curv1 = ::Array_obj< Float >::__new(0);
HXLINE( 314)		this->normals = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 313)		this->faces = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 312)		this->vertices = ::Array_obj< ::Dynamic>::__new(0);
            	}

Dynamic Mesh_obj::__CreateEmpty() { return new Mesh_obj; }

void *Mesh_obj::_hx_vtable = 0;

Dynamic Mesh_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Mesh_obj > _hx_result = new Mesh_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Mesh_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x49d2b44e;
}

void Mesh_obj::precompute(::hx::Null< bool >  __o_doBVH,::hx::Null< bool >  __o_verb){
            		bool doBVH = __o_doBVH.Default(true);
            		bool verb = __o_verb.Default(false);
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_336_precompute)
HXLINE( 337)		if (verb) {
HXLINE( 337)			::haxe::Log_obj::trace(HX_("computing normals...",2e,83,48,5d),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),337,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 338)		this->computeNormals();
HXLINE( 339)		if (verb) {
HXLINE( 339)			::haxe::Log_obj::trace(HX_("computing point areas...",64,2f,6d,a5),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),339,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 340)		this->computePointAreas();
HXLINE( 341)		if (verb) {
HXLINE( 341)			::haxe::Log_obj::trace(HX_("computing adjacent faces...",ea,d4,72,09),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),341,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 342)		this->computeAdjacentFaces();
HXLINE( 343)		if (verb) {
HXLINE( 343)			::haxe::Log_obj::trace(HX_("computing curvatures...",ce,49,b4,48),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),343,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 344)		this->computeCurvatures();
HXLINE( 345)		if (verb) {
HXLINE( 345)			::haxe::Log_obj::trace(HX_("computing bounding sphere...",71,a3,38,cd),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),345,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 346)		this->computeBSphere();
HXLINE( 347)		if (verb) {
HXLINE( 347)			::haxe::Log_obj::trace(HX_("computing feature size...",b7,82,81,c1),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),347,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 348)		this->computeFeatureSize();
HXLINE( 349)		if (verb) {
HXLINE( 349)			::haxe::Log_obj::trace(HX_("computing bounding volume hierarchy...",0f,90,22,23),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),349,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
HXLINE( 350)		if (doBVH) {
HXLINE( 350)			this->computeBVH();
            		}
            		else {
HXLINE( 350)			this->computeBVHTrivial();
            		}
HXLINE( 351)		if (verb) {
HXLINE( 351)			::haxe::Log_obj::trace(HX_("pre-computation finished.",f9,7a,f2,2c),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),351,HX_("apparentridges.Mesh",9a,9f,4e,61),HX_("precompute",b4,81,74,24)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,precompute,(void))

void Mesh_obj::computeNormals(){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_354_computeNormals)
HXLINE( 355)		::Array< ::Dynamic> _g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 355)		{
HXLINE( 355)			int _g1 = 0;
HXDLIN( 355)			int _g2 = this->vertices->length;
HXDLIN( 355)			while((_g1 < _g2)){
HXLINE( 355)				_g1 = (_g1 + 1);
HXDLIN( 355)				int i = (_g1 - 1);
HXDLIN( 355)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 355)				::Array< Float > this2 = this1;
HXDLIN( 355)				this2->__unsafe_set(0,0);
HXDLIN( 355)				this2->__unsafe_set(1,0);
HXDLIN( 355)				this2->__unsafe_set(2,0);
HXDLIN( 355)				_g->push(this2);
            			}
            		}
HXDLIN( 355)		this->normals = _g;
HXLINE( 356)		{
HXLINE( 356)			int _g3 = 0;
HXDLIN( 356)			::Array< ::Dynamic> _g4 = this->faces;
HXDLIN( 356)			while((_g3 < _g4->length)){
HXLINE( 356)				::Array< int > f = _g4->__get(_g3).StaticCast< ::Array< int > >();
HXDLIN( 356)				_g3 = (_g3 + 1);
HXLINE( 357)				::Array< Float > p0 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXLINE( 358)				::Array< Float > p1 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXLINE( 359)				::Array< Float > p2 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXLINE( 360)				Float _x = ( (Float)(_hx_array_unsafe_get(p0,0)) );
HXDLIN( 360)				Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p1,0)) ));
HXDLIN( 360)				Float _y = ( (Float)(_hx_array_unsafe_get(p0,1)) );
HXDLIN( 360)				Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p1,1)) ));
HXDLIN( 360)				Float _z = ( (Float)(_hx_array_unsafe_get(p0,2)) );
HXDLIN( 360)				Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p1,2)) ));
HXDLIN( 360)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 360)				::Array< Float > this2 = this1;
HXDLIN( 360)				this2->__unsafe_set(0,_x1);
HXDLIN( 360)				this2->__unsafe_set(1,_y1);
HXDLIN( 360)				this2->__unsafe_set(2,_z1);
HXDLIN( 360)				::Array< Float > a = this2;
HXLINE( 361)				Float _x2 = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN( 361)				Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p2,0)) ));
HXDLIN( 361)				Float _y2 = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN( 361)				Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p2,1)) ));
HXDLIN( 361)				Float _z2 = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN( 361)				Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p2,2)) ));
HXDLIN( 361)				::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 361)				::Array< Float > this4 = this3;
HXDLIN( 361)				this4->__unsafe_set(0,_x3);
HXDLIN( 361)				this4->__unsafe_set(1,_y3);
HXDLIN( 361)				this4->__unsafe_set(2,_z3);
HXDLIN( 361)				::Array< Float > b = this4;
HXLINE( 362)				Float _x4 = ( (Float)(_hx_array_unsafe_get(a,1)) );
HXDLIN( 362)				Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(b,2)) ));
HXDLIN( 362)				Float _x6 = ( (Float)(_hx_array_unsafe_get(a,2)) );
HXDLIN( 362)				Float _x7 = (_x5 - (_x6 * ( (Float)(_hx_array_unsafe_get(b,1)) )));
HXDLIN( 362)				Float _y4 = ( (Float)(_hx_array_unsafe_get(a,2)) );
HXDLIN( 362)				Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(b,0)) ));
HXDLIN( 362)				Float _y6 = ( (Float)(_hx_array_unsafe_get(a,0)) );
HXDLIN( 362)				Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(b,2)) )));
HXDLIN( 362)				Float _z4 = ( (Float)(_hx_array_unsafe_get(a,0)) );
HXDLIN( 362)				Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(b,1)) ));
HXDLIN( 362)				Float _z6 = ( (Float)(_hx_array_unsafe_get(a,1)) );
HXDLIN( 362)				Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(b,0)) )));
HXDLIN( 362)				::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 362)				::Array< Float > this6 = this5;
HXDLIN( 362)				this6->__unsafe_set(0,_x7);
HXDLIN( 362)				this6->__unsafe_set(1,_y7);
HXDLIN( 362)				this6->__unsafe_set(2,_z7);
HXDLIN( 362)				::Array< Float > fn = this6;
HXLINE( 363)				{
HXLINE( 363)					::Array< ::Dynamic> _g = this->normals;
HXDLIN( 363)					int _g1 = ( (int)(_hx_array_unsafe_get(f,0)) );
HXDLIN( 363)					::Array< Float > _g2 = _g->__get(_g1).StaticCast< ::Array< Float > >();
HXDLIN( 363)					Float _x8 = ( (Float)(_hx_array_unsafe_get(_g2,0)) );
HXDLIN( 363)					Float _x9 = (_x8 + ( (Float)(_hx_array_unsafe_get(fn,0)) ));
HXDLIN( 363)					Float _y8 = ( (Float)(_hx_array_unsafe_get(_g2,1)) );
HXDLIN( 363)					Float _y9 = (_y8 + ( (Float)(_hx_array_unsafe_get(fn,1)) ));
HXDLIN( 363)					Float _z8 = ( (Float)(_hx_array_unsafe_get(_g2,2)) );
HXDLIN( 363)					Float _z9 = (_z8 + ( (Float)(_hx_array_unsafe_get(fn,2)) ));
HXDLIN( 363)					::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 363)					::Array< Float > this8 = this7;
HXDLIN( 363)					this8->__unsafe_set(0,_x9);
HXDLIN( 363)					this8->__unsafe_set(1,_y9);
HXDLIN( 363)					this8->__unsafe_set(2,_z9);
HXDLIN( 363)					_g[_g1] = this8;
            				}
HXLINE( 364)				{
HXLINE( 364)					::Array< ::Dynamic> _g5 = this->normals;
HXDLIN( 364)					int _g6 = ( (int)(_hx_array_unsafe_get(f,1)) );
HXDLIN( 364)					::Array< Float > _g7 = _g5->__get(_g6).StaticCast< ::Array< Float > >();
HXDLIN( 364)					Float _x10 = ( (Float)(_hx_array_unsafe_get(_g7,0)) );
HXDLIN( 364)					Float _x11 = (_x10 + ( (Float)(_hx_array_unsafe_get(fn,0)) ));
HXDLIN( 364)					Float _y10 = ( (Float)(_hx_array_unsafe_get(_g7,1)) );
HXDLIN( 364)					Float _y11 = (_y10 + ( (Float)(_hx_array_unsafe_get(fn,1)) ));
HXDLIN( 364)					Float _z10 = ( (Float)(_hx_array_unsafe_get(_g7,2)) );
HXDLIN( 364)					Float _z11 = (_z10 + ( (Float)(_hx_array_unsafe_get(fn,2)) ));
HXDLIN( 364)					::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN( 364)					::Array< Float > this10 = this9;
HXDLIN( 364)					this10->__unsafe_set(0,_x11);
HXDLIN( 364)					this10->__unsafe_set(1,_y11);
HXDLIN( 364)					this10->__unsafe_set(2,_z11);
HXDLIN( 364)					_g5[_g6] = this10;
            				}
HXLINE( 365)				{
HXLINE( 365)					::Array< ::Dynamic> _g8 = this->normals;
HXDLIN( 365)					int _g9 = ( (int)(_hx_array_unsafe_get(f,2)) );
HXDLIN( 365)					::Array< Float > _g10 = _g8->__get(_g9).StaticCast< ::Array< Float > >();
HXDLIN( 365)					Float _x12 = ( (Float)(_hx_array_unsafe_get(_g10,0)) );
HXDLIN( 365)					Float _x13 = (_x12 + ( (Float)(_hx_array_unsafe_get(fn,0)) ));
HXDLIN( 365)					Float _y12 = ( (Float)(_hx_array_unsafe_get(_g10,1)) );
HXDLIN( 365)					Float _y13 = (_y12 + ( (Float)(_hx_array_unsafe_get(fn,1)) ));
HXDLIN( 365)					Float _z12 = ( (Float)(_hx_array_unsafe_get(_g10,2)) );
HXDLIN( 365)					Float _z13 = (_z12 + ( (Float)(_hx_array_unsafe_get(fn,2)) ));
HXDLIN( 365)					::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN( 365)					::Array< Float > this12 = this11;
HXDLIN( 365)					this12->__unsafe_set(0,_x13);
HXDLIN( 365)					this12->__unsafe_set(1,_y13);
HXDLIN( 365)					this12->__unsafe_set(2,_z13);
HXDLIN( 365)					_g8[_g9] = this12;
            				}
            			}
            		}
HXLINE( 367)		{
HXLINE( 367)			int _g5 = 0;
HXDLIN( 367)			::Array< ::Dynamic> _g6 = this->normals;
HXDLIN( 367)			while((_g5 < _g6->length)){
HXLINE( 367)				::Array< Float > n = _g6->__get(_g5).StaticCast< ::Array< Float > >();
HXDLIN( 367)				_g5 = (_g5 + 1);
HXLINE( 368)				{
HXLINE( 368)					Float l = ( (Float)(_hx_array_unsafe_get(n,0)) );
HXDLIN( 368)					Float l1 = (l * ( (Float)(_hx_array_unsafe_get(n,0)) ));
HXDLIN( 368)					Float l2 = ( (Float)(_hx_array_unsafe_get(n,1)) );
HXDLIN( 368)					Float l3 = (l1 + (l2 * ( (Float)(_hx_array_unsafe_get(n,1)) )));
HXDLIN( 368)					Float l4 = ( (Float)(_hx_array_unsafe_get(n,2)) );
HXDLIN( 368)					Float l5 = ::Math_obj::sqrt((l3 + (l4 * ( (Float)(_hx_array_unsafe_get(n,2)) ))));
HXDLIN( 368)					if ((l5 > 0)) {
HXLINE( 368)						l5 = (( (Float)(1) ) / l5);
HXDLIN( 368)						{
HXLINE( 368)							::Array< Float > _g = n;
HXDLIN( 368)							{
HXLINE( 368)								Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l5);
HXDLIN( 368)								_g->__unsafe_set(0,v);
            							}
            						}
HXDLIN( 368)						{
HXLINE( 368)							::Array< Float > _g1 = n;
HXDLIN( 368)							{
HXLINE( 368)								Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l5);
HXDLIN( 368)								_g1->__unsafe_set(1,v1);
            							}
            						}
HXDLIN( 368)						{
HXLINE( 368)							::Array< Float > _g2 = n;
HXDLIN( 368)							{
HXLINE( 368)								Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l5);
HXDLIN( 368)								_g2->__unsafe_set(2,v2);
            							}
            						}
            					}
            					else {
HXLINE( 368)						n->__unsafe_set(0,0);
HXDLIN( 368)						n->__unsafe_set(1,0);
HXDLIN( 368)						n->__unsafe_set(2,1);
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeNormals,(void))

void Mesh_obj::computeBSphere(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::apparentridges::Mesh,_gthis) HXARGC(1)
            		int _hx_run(::Array< Float > dir){
            			HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_375_computeBSphere)
HXLINE( 376)			int nv = _gthis->vertices->length;
HXLINE( 377)			int _hx_far = 0;
HXLINE( 378)			::Array< Float > v1 = _gthis->vertices->__get(0).StaticCast< ::Array< Float > >();
HXDLIN( 378)			Float far_dot = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 378)			Float far_dot1 = (far_dot * ( (Float)(_hx_array_unsafe_get(dir,0)) ));
HXDLIN( 378)			Float far_dot2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 378)			Float far_dot3 = (far_dot1 + (far_dot2 * ( (Float)(_hx_array_unsafe_get(dir,1)) )));
HXDLIN( 378)			Float far_dot4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 378)			Float far_dot5 = (far_dot3 + (far_dot4 * ( (Float)(_hx_array_unsafe_get(dir,2)) )));
HXLINE( 379)			{
HXLINE( 379)				int _g = 1;
HXDLIN( 379)				int _g1 = nv;
HXDLIN( 379)				while((_g < _g1)){
HXLINE( 379)					_g = (_g + 1);
HXDLIN( 379)					int i = (_g - 1);
HXLINE( 380)					::Array< Float > v1 = _gthis->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 380)					Float my_dot = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 380)					Float my_dot1 = (my_dot * ( (Float)(_hx_array_unsafe_get(dir,0)) ));
HXDLIN( 380)					Float my_dot2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 380)					Float my_dot3 = (my_dot1 + (my_dot2 * ( (Float)(_hx_array_unsafe_get(dir,1)) )));
HXDLIN( 380)					Float my_dot4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 380)					Float my_dot5 = (my_dot3 + (my_dot4 * ( (Float)(_hx_array_unsafe_get(dir,2)) )));
HXLINE( 381)					if ((my_dot5 > far_dot5)) {
HXLINE( 382)						_hx_far = i;
HXLINE( 383)						far_dot5 = my_dot5;
            					}
            				}
            			}
HXLINE( 386)			return _hx_far;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_372_computeBSphere)
HXDLIN( 372)		 ::apparentridges::Mesh _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 373)		this->bsphere =  ::apparentridges::BSphere_obj::__alloc( HX_CTX );
HXLINE( 375)		 ::Dynamic farthestVertexAlong =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE( 388)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 388)		::Array< Float > this2 = this1;
HXDLIN( 388)		this2->__unsafe_set(0,0);
HXDLIN( 388)		this2->__unsafe_set(1,0);
HXDLIN( 388)		this2->__unsafe_set(2,0);
HXDLIN( 388)		::Array< Float > best_min = this2;
HXLINE( 389)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 389)		::Array< Float > this4 = this3;
HXDLIN( 389)		this4->__unsafe_set(0,0);
HXDLIN( 389)		this4->__unsafe_set(1,0);
HXDLIN( 389)		this4->__unsafe_set(2,0);
HXDLIN( 389)		::Array< Float > best_max = this4;
HXLINE( 391)		::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 391)		::Array< Float > this6 = this5;
HXDLIN( 391)		this6->__unsafe_set(0,1);
HXDLIN( 391)		this6->__unsafe_set(1,0);
HXDLIN( 391)		this6->__unsafe_set(2,0);
HXLINE( 392)		::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 392)		::Array< Float > this8 = this7;
HXDLIN( 392)		this8->__unsafe_set(0,0);
HXDLIN( 392)		this8->__unsafe_set(1,1);
HXDLIN( 392)		this8->__unsafe_set(2,0);
HXLINE( 393)		::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN( 393)		::Array< Float > this10 = this9;
HXDLIN( 393)		this10->__unsafe_set(0,0);
HXDLIN( 393)		this10->__unsafe_set(1,0);
HXDLIN( 393)		this10->__unsafe_set(2,1);
HXLINE( 394)		::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN( 394)		::Array< Float > this12 = this11;
HXDLIN( 394)		this12->__unsafe_set(0,1);
HXDLIN( 394)		this12->__unsafe_set(1,1);
HXDLIN( 394)		this12->__unsafe_set(2,1);
HXLINE( 395)		::Array< Float > this13 = ::Array_obj< Float >::__new(3);
HXDLIN( 395)		::Array< Float > this14 = this13;
HXDLIN( 395)		this14->__unsafe_set(0,1);
HXDLIN( 395)		this14->__unsafe_set(1,-1);
HXDLIN( 395)		this14->__unsafe_set(2,1);
HXLINE( 396)		::Array< Float > this15 = ::Array_obj< Float >::__new(3);
HXDLIN( 396)		::Array< Float > this16 = this15;
HXDLIN( 396)		this16->__unsafe_set(0,1);
HXDLIN( 396)		this16->__unsafe_set(1,-1);
HXDLIN( 396)		this16->__unsafe_set(2,-1);
HXLINE( 397)		::Array< Float > this17 = ::Array_obj< Float >::__new(3);
HXDLIN( 397)		::Array< Float > this18 = this17;
HXDLIN( 397)		this18->__unsafe_set(0,1);
HXDLIN( 397)		this18->__unsafe_set(1,1);
HXDLIN( 397)		this18->__unsafe_set(2,1);
HXLINE( 390)		::Array< ::Dynamic> dirs = ::Array_obj< ::Dynamic>::__new(7)->init(0,this6)->init(1,this8)->init(2,this10)->init(3,this12)->init(4,this14)->init(5,this16)->init(6,this18);
HXLINE( 399)		{
HXLINE( 399)			int _g = 0;
HXDLIN( 399)			while((_g < dirs->length)){
HXLINE( 399)				::Array< Float > d = dirs->__get(_g).StaticCast< ::Array< Float > >();
HXDLIN( 399)				_g = (_g + 1);
HXLINE( 400)				::Array< ::Dynamic> p1 = this->vertices;
HXDLIN( 400)				Float _x = (( (Float)(_hx_array_unsafe_get(d,0)) ) * ((Float)-1.0));
HXDLIN( 400)				Float _y = (( (Float)(_hx_array_unsafe_get(d,1)) ) * ((Float)-1.0));
HXDLIN( 400)				Float _z = (( (Float)(_hx_array_unsafe_get(d,2)) ) * ((Float)-1.0));
HXDLIN( 400)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 400)				::Array< Float > this2 = this1;
HXDLIN( 400)				this2->__unsafe_set(0,_x);
HXDLIN( 400)				this2->__unsafe_set(1,_y);
HXDLIN( 400)				this2->__unsafe_set(2,_z);
HXDLIN( 400)				::Array< Float > p11 = p1->__get(( (int)(farthestVertexAlong(this2)) )).StaticCast< ::Array< Float > >();
HXLINE( 401)				::Array< Float > p2 = this->vertices->__get(( (int)(farthestVertexAlong(d)) )).StaticCast< ::Array< Float > >();
HXLINE( 402)				Float x = ( (Float)(_hx_array_unsafe_get(p11,0)) );
HXDLIN( 402)				Float x1 = (x - ( (Float)(_hx_array_unsafe_get(p2,0)) ));
HXDLIN( 402)				Float x2 = ( (Float)(_hx_array_unsafe_get(p11,1)) );
HXDLIN( 402)				Float x3 = (x2 - ( (Float)(_hx_array_unsafe_get(p2,1)) ));
HXDLIN( 402)				Float x4 = ( (Float)(_hx_array_unsafe_get(p11,2)) );
HXDLIN( 402)				Float x5 = (x4 - ( (Float)(_hx_array_unsafe_get(p2,2)) ));
HXDLIN( 402)				Float x6 = ( (Float)(_hx_array_unsafe_get(best_min,0)) );
HXDLIN( 402)				Float x7 = (x6 - ( (Float)(_hx_array_unsafe_get(best_max,0)) ));
HXDLIN( 402)				Float x8 = ( (Float)(_hx_array_unsafe_get(best_min,1)) );
HXDLIN( 402)				Float x9 = (x8 - ( (Float)(_hx_array_unsafe_get(best_max,1)) ));
HXDLIN( 402)				Float x10 = ( (Float)(_hx_array_unsafe_get(best_min,2)) );
HXDLIN( 402)				Float x11 = (x10 - ( (Float)(_hx_array_unsafe_get(best_max,2)) ));
HXDLIN( 402)				if (((((x1 * x1) + (x3 * x3)) + (x5 * x5)) > (((x7 * x7) + (x9 * x9)) + (x11 * x11)))) {
HXLINE( 403)					best_min = p11;
HXLINE( 404)					best_max = p2;
            				}
            			}
            		}
HXLINE( 407)		Float _x = ( (Float)(_hx_array_unsafe_get(best_min,0)) );
HXDLIN( 407)		Float _x1 = (_x + ( (Float)(_hx_array_unsafe_get(best_max,0)) ));
HXDLIN( 407)		Float _y = ( (Float)(_hx_array_unsafe_get(best_min,1)) );
HXDLIN( 407)		Float _y1 = (_y + ( (Float)(_hx_array_unsafe_get(best_max,1)) ));
HXDLIN( 407)		Float _z = ( (Float)(_hx_array_unsafe_get(best_min,2)) );
HXDLIN( 407)		Float _z1 = (_z + ( (Float)(_hx_array_unsafe_get(best_max,2)) ));
HXDLIN( 407)		::Array< Float > this19 = ::Array_obj< Float >::__new(3);
HXDLIN( 407)		::Array< Float > this20 = this19;
HXDLIN( 407)		this20->__unsafe_set(0,_x1);
HXDLIN( 407)		this20->__unsafe_set(1,_y1);
HXDLIN( 407)		this20->__unsafe_set(2,_z1);
HXDLIN( 407)		::Array< Float > this21 = this20;
HXDLIN( 407)		Float _x2 = (( (Float)(_hx_array_unsafe_get(this21,0)) ) * ((Float)0.5));
HXDLIN( 407)		Float _y2 = (( (Float)(_hx_array_unsafe_get(this21,1)) ) * ((Float)0.5));
HXDLIN( 407)		Float _z2 = (( (Float)(_hx_array_unsafe_get(this21,2)) ) * ((Float)0.5));
HXDLIN( 407)		::Array< Float > this22 = ::Array_obj< Float >::__new(3);
HXDLIN( 407)		::Array< Float > this23 = this22;
HXDLIN( 407)		this23->__unsafe_set(0,_x2);
HXDLIN( 407)		this23->__unsafe_set(1,_y2);
HXDLIN( 407)		this23->__unsafe_set(2,_z2);
HXDLIN( 407)		this->bsphere->o = this23;
HXLINE( 408)		Float x = ( (Float)(_hx_array_unsafe_get(best_min,0)) );
HXDLIN( 408)		Float x1 = (x - ( (Float)(_hx_array_unsafe_get(best_max,0)) ));
HXDLIN( 408)		Float x2 = ( (Float)(_hx_array_unsafe_get(best_min,1)) );
HXDLIN( 408)		Float x3 = (x2 - ( (Float)(_hx_array_unsafe_get(best_max,1)) ));
HXDLIN( 408)		Float x4 = ( (Float)(_hx_array_unsafe_get(best_min,2)) );
HXDLIN( 408)		Float x5 = (x4 - ( (Float)(_hx_array_unsafe_get(best_max,2)) ));
HXDLIN( 408)		this->bsphere->r = (::Math_obj::sqrt((((x1 * x1) + (x3 * x3)) + (x5 * x5))) * ((Float)0.5));
HXLINE( 409)		Float x6 = this->bsphere->r;
HXDLIN( 409)		Float r2 = (x6 * x6);
HXLINE( 411)		{
HXLINE( 411)			int _g1 = 0;
HXDLIN( 411)			int _g2 = this->vertices->length;
HXDLIN( 411)			while((_g1 < _g2)){
HXLINE( 411)				_g1 = (_g1 + 1);
HXDLIN( 411)				int i = (_g1 - 1);
HXLINE( 412)				::Array< Float > v1 = this->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 412)				::Array< Float > v2 = this->bsphere->o;
HXDLIN( 412)				Float x = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 412)				Float x1 = (x - ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 412)				Float x2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 412)				Float x3 = (x2 - ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN( 412)				Float x4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 412)				Float x5 = (x4 - ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN( 412)				Float d2 = (((x1 * x1) + (x3 * x3)) + (x5 * x5));
HXLINE( 413)				if ((d2 <= r2)) {
HXLINE( 414)					continue;
            				}
HXLINE( 416)				Float d = ::Math_obj::sqrt(d2);
HXLINE( 417)				this->bsphere->r = (((Float)0.5) * (this->bsphere->r + d));
HXLINE( 418)				Float x6 = this->bsphere->r;
HXDLIN( 418)				r2 = (x6 * x6);
HXLINE( 419)				::Array< Float > this1 = this->bsphere->o;
HXDLIN( 419)				::Array< Float > rhs = this->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 419)				Float _x = ( (Float)(_hx_array_unsafe_get(this1,0)) );
HXDLIN( 419)				Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 419)				Float _y = ( (Float)(_hx_array_unsafe_get(this1,1)) );
HXDLIN( 419)				Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 419)				Float _z = ( (Float)(_hx_array_unsafe_get(this1,2)) );
HXDLIN( 419)				Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 419)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 419)				::Array< Float > this3 = this2;
HXDLIN( 419)				this3->__unsafe_set(0,_x1);
HXDLIN( 419)				this3->__unsafe_set(1,_y1);
HXDLIN( 419)				this3->__unsafe_set(2,_z1);
HXDLIN( 419)				this->bsphere->o = this3;
HXLINE( 420)				::Array< Float > this4 = this->bsphere->o;
HXDLIN( 420)				Float rhs1 = (this->bsphere->r * (((Float)1.0) / d));
HXDLIN( 420)				Float _x2 = (( (Float)(_hx_array_unsafe_get(this4,0)) ) * rhs1);
HXDLIN( 420)				Float _y2 = (( (Float)(_hx_array_unsafe_get(this4,1)) ) * rhs1);
HXDLIN( 420)				Float _z2 = (( (Float)(_hx_array_unsafe_get(this4,2)) ) * rhs1);
HXDLIN( 420)				::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 420)				::Array< Float > this6 = this5;
HXDLIN( 420)				this6->__unsafe_set(0,_x2);
HXDLIN( 420)				this6->__unsafe_set(1,_y2);
HXDLIN( 420)				this6->__unsafe_set(2,_z2);
HXDLIN( 420)				this->bsphere->o = this6;
HXLINE( 421)				::Array< Float > this7 = this->bsphere->o;
HXDLIN( 421)				::Array< Float > rhs2 = this->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 421)				Float _x3 = ( (Float)(_hx_array_unsafe_get(this7,0)) );
HXDLIN( 421)				Float _x4 = (_x3 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN( 421)				Float _y3 = ( (Float)(_hx_array_unsafe_get(this7,1)) );
HXDLIN( 421)				Float _y4 = (_y3 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN( 421)				Float _z3 = ( (Float)(_hx_array_unsafe_get(this7,2)) );
HXDLIN( 421)				Float _z4 = (_z3 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN( 421)				::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 421)				::Array< Float > this9 = this8;
HXDLIN( 421)				this9->__unsafe_set(0,_x4);
HXDLIN( 421)				this9->__unsafe_set(1,_y4);
HXDLIN( 421)				this9->__unsafe_set(2,_z4);
HXDLIN( 421)				this->bsphere->o = this9;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeBSphere,(void))

void Mesh_obj::computeFeatureSize(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(Float a,Float b){
            			HX_STACKFRAME(&_hx_pos_0d00699988983bd6_447_computeFeatureSize)
HXLINE( 447)			if ((a < b)) {
HXLINE( 447)				return -1;
            			}
            			else {
HXLINE( 448)				if ((a > b)) {
HXLINE( 448)					return 1;
            				}
            				else {
HXLINE( 449)					return 0;
            				}
            			}
HXLINE( 447)			return 0;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_428_computeFeatureSize)
HXLINE( 429)		int nv = this->curv1->length;
HXLINE( 430)		int nsamp;
HXDLIN( 430)		if ((nv > 500)) {
HXLINE( 430)			nsamp = 500;
            		}
            		else {
HXLINE( 430)			nsamp = nv;
            		}
HXLINE( 431)		::Array< Float > samples = ::Array_obj< Float >::__new(0);
HXLINE( 432)		int s = 79;
HXLINE( 433)		int p = 103;
HXLINE( 434)		int q = 211;
HXLINE( 435)		int m = (p * q);
HXLINE( 436)		{
HXLINE( 436)			int _g = 0;
HXDLIN( 436)			int _g1 = nsamp;
HXDLIN( 436)			while((_g < _g1)){
HXLINE( 436)				_g = (_g + 1);
HXDLIN( 436)				int i = (_g - 1);
HXLINE( 437)				int ind = ::Std_obj::_hx_int((( (Float)(nv) ) * (( (Float)(s) ) / ( (Float)(m) ))));
HXLINE( 438)				s = ::hx::Mod((s * s),m);
HXLINE( 439)				samples->push(::Math_obj::abs(this->curv1->__get(ind)));
HXLINE( 440)				samples->push(::Math_obj::abs(this->curv2->__get(ind)));
            			}
            		}
HXLINE( 442)		Float frac = ((Float)0.1);
HXLINE( 443)		Float mult = ((Float)0.01);
HXLINE( 444)		Float max_feat_size = (((Float)0.05) * this->bsphere->r);
HXLINE( 445)		int which = ::Std_obj::_hx_int((frac * ( (Float)(samples->length) )));
HXLINE( 446)		samples->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE( 451)		this->featureSize = ::Math_obj::min((mult / samples->__get(which)),max_feat_size);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeFeatureSize,(void))

void Mesh_obj::computeAdjacentFaces(){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_454_computeAdjacentFaces)
HXLINE( 455)		::Array< ::Dynamic> _g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 455)		{
HXLINE( 455)			int _g1 = 0;
HXDLIN( 455)			int _g2 = this->vertices->length;
HXDLIN( 455)			while((_g1 < _g2)){
HXLINE( 455)				_g1 = (_g1 + 1);
HXDLIN( 455)				int i = (_g1 - 1);
HXDLIN( 455)				_g->push(::Array_obj< int >::__new());
            			}
            		}
HXDLIN( 455)		this->adjacentFaces = _g;
HXLINE( 456)		{
HXLINE( 456)			int _g3 = 0;
HXDLIN( 456)			int _g4 = this->faces->length;
HXDLIN( 456)			while((_g3 < _g4)){
HXLINE( 456)				_g3 = (_g3 + 1);
HXDLIN( 456)				int i = (_g3 - 1);
HXLINE( 457)				{
HXLINE( 458)					this->adjacentFaces->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< int > >()->push(i);
HXDLIN( 458)					this->adjacentFaces->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< int > >()->push(i);
HXDLIN( 458)					this->adjacentFaces->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< int > >()->push(i);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeAdjacentFaces,(void))

::Array< ::Dynamic> Mesh_obj::getFaceEdges(::Array< int > f){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_463_getFaceEdges)
HXLINE( 464)		::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(3);
HXDLIN( 464)		::Array< ::Dynamic> e = this1;
HXLINE( 465)		{
HXLINE( 465)			::Array< Float > this2 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXDLIN( 465)			::Array< Float > rhs = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXDLIN( 465)			Float _x = ( (Float)(_hx_array_unsafe_get(this2,0)) );
HXDLIN( 465)			Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 465)			Float _y = ( (Float)(_hx_array_unsafe_get(this2,1)) );
HXDLIN( 465)			Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 465)			Float _z = ( (Float)(_hx_array_unsafe_get(this2,2)) );
HXDLIN( 465)			Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 465)			::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 465)			::Array< Float > this4 = this3;
HXDLIN( 465)			this4->__unsafe_set(0,_x1);
HXDLIN( 465)			this4->__unsafe_set(1,_y1);
HXDLIN( 465)			this4->__unsafe_set(2,_z1);
HXDLIN( 465)			e->__unsafe_set(0,this4);
            		}
HXLINE( 466)		{
HXLINE( 466)			::Array< Float > this5 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXDLIN( 466)			::Array< Float > rhs1 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXDLIN( 466)			Float _x2 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN( 466)			Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(rhs1,0)) ));
HXDLIN( 466)			Float _y2 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN( 466)			Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(rhs1,1)) ));
HXDLIN( 466)			Float _z2 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN( 466)			Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(rhs1,2)) ));
HXDLIN( 466)			::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 466)			::Array< Float > this7 = this6;
HXDLIN( 466)			this7->__unsafe_set(0,_x3);
HXDLIN( 466)			this7->__unsafe_set(1,_y3);
HXDLIN( 466)			this7->__unsafe_set(2,_z3);
HXDLIN( 466)			e->__unsafe_set(1,this7);
            		}
HXLINE( 467)		{
HXLINE( 467)			::Array< Float > this8 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXDLIN( 467)			::Array< Float > rhs2 = this->vertices->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXDLIN( 467)			Float _x4 = ( (Float)(_hx_array_unsafe_get(this8,0)) );
HXDLIN( 467)			Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN( 467)			Float _y4 = ( (Float)(_hx_array_unsafe_get(this8,1)) );
HXDLIN( 467)			Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN( 467)			Float _z4 = ( (Float)(_hx_array_unsafe_get(this8,2)) );
HXDLIN( 467)			Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN( 467)			::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN( 467)			::Array< Float > this10 = this9;
HXDLIN( 467)			this10->__unsafe_set(0,_x5);
HXDLIN( 467)			this10->__unsafe_set(1,_y5);
HXDLIN( 467)			this10->__unsafe_set(2,_z5);
HXDLIN( 467)			e->__unsafe_set(2,this10);
            		}
HXLINE( 468)		return e;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,getFaceEdges,return )

void Mesh_obj::computePointAreas(){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_471_computePointAreas)
HXLINE( 472)		int nf = this->faces->length;
HXLINE( 473)		int nv = this->vertices->length;
HXLINE( 475)		::Array< Float > _g = ::Array_obj< Float >::__new(0);
HXDLIN( 475)		int _g1 = 0;
HXDLIN( 475)		int _g2 = nv;
HXDLIN( 475)		while((_g1 < _g2)){
HXLINE( 475)			_g1 = (_g1 + 1);
HXDLIN( 475)			int i = (_g1 - 1);
HXDLIN( 475)			_g->push(0);
            		}
HXDLIN( 475)		this->pointAreas = _g;
HXLINE( 476)		::Array< ::Dynamic> _g3 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 476)		int _g4 = 0;
HXDLIN( 476)		int _g5 = nf;
HXDLIN( 476)		while((_g4 < _g5)){
HXLINE( 476)			_g4 = (_g4 + 1);
HXDLIN( 476)			int i = (_g4 - 1);
HXDLIN( 476)			::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 476)			::Array< Float > this2 = this1;
HXDLIN( 476)			this2->__unsafe_set(0,0);
HXDLIN( 476)			this2->__unsafe_set(1,0);
HXDLIN( 476)			this2->__unsafe_set(2,0);
HXDLIN( 476)			_g3->push(this2);
            		}
HXDLIN( 476)		this->cornerAreas = _g3;
HXLINE( 478)		{
HXLINE( 478)			int _g6 = 0;
HXDLIN( 478)			int _g7 = nf;
HXDLIN( 478)			while((_g6 < _g7)){
HXLINE( 478)				_g6 = (_g6 + 1);
HXDLIN( 478)				int i = (_g6 - 1);
HXLINE( 479)				::Array< ::Dynamic> e = this->getFaceEdges(this->faces->__get(i).StaticCast< ::Array< int > >());
HXLINE( 481)				::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 481)				::Array< Float > v2 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 481)				Float _x = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 481)				Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN( 481)				Float _x2 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 481)				Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 481)				Float _y = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 481)				Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 481)				Float _y2 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 481)				Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(v2,2)) )));
HXDLIN( 481)				Float _z = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 481)				Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN( 481)				Float _z2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 481)				Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(v2,0)) )));
HXDLIN( 481)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 481)				::Array< Float > this2 = this1;
HXDLIN( 481)				this2->__unsafe_set(0,_x3);
HXDLIN( 481)				this2->__unsafe_set(1,_y3);
HXDLIN( 481)				this2->__unsafe_set(2,_z3);
HXDLIN( 481)				::Array< Float > this3 = this2;
HXDLIN( 481)				Float area = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN( 481)				Float area1 = (area * ( (Float)(_hx_array_unsafe_get(this3,0)) ));
HXDLIN( 481)				Float area2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN( 481)				Float area3 = (area1 + (area2 * ( (Float)(_hx_array_unsafe_get(this3,1)) )));
HXDLIN( 481)				Float area4 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN( 481)				Float area5 = (((Float)0.5) * ::Math_obj::sqrt((area3 + (area4 * ( (Float)(_hx_array_unsafe_get(this3,2)) )))));
HXLINE( 482)				::Array< Float > this4 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 482)				Float l2_0 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 482)				Float l2_01 = (l2_0 * ( (Float)(_hx_array_unsafe_get(this4,0)) ));
HXDLIN( 482)				Float l2_02 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 482)				Float l2_03 = (l2_01 + (l2_02 * ( (Float)(_hx_array_unsafe_get(this4,1)) )));
HXDLIN( 482)				Float l2_04 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 482)				Float l2_05 = (l2_03 + (l2_04 * ( (Float)(_hx_array_unsafe_get(this4,2)) )));
HXDLIN( 482)				::Array< Float > this5 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 482)				Float l2_1 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN( 482)				Float l2_11 = (l2_1 * ( (Float)(_hx_array_unsafe_get(this5,0)) ));
HXDLIN( 482)				Float l2_12 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN( 482)				Float l2_13 = (l2_11 + (l2_12 * ( (Float)(_hx_array_unsafe_get(this5,1)) )));
HXDLIN( 482)				Float l2_14 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN( 482)				Float l2_15 = (l2_13 + (l2_14 * ( (Float)(_hx_array_unsafe_get(this5,2)) )));
HXDLIN( 482)				::Array< Float > this6 = ( (::Array< Float >)(_hx_array_unsafe_get(e,2)) );
HXDLIN( 482)				Float l2_2 = ( (Float)(_hx_array_unsafe_get(this6,0)) );
HXDLIN( 482)				Float l2_21 = (l2_2 * ( (Float)(_hx_array_unsafe_get(this6,0)) ));
HXDLIN( 482)				Float l2_22 = ( (Float)(_hx_array_unsafe_get(this6,1)) );
HXDLIN( 482)				Float l2_23 = (l2_21 + (l2_22 * ( (Float)(_hx_array_unsafe_get(this6,1)) )));
HXDLIN( 482)				Float l2_24 = ( (Float)(_hx_array_unsafe_get(this6,2)) );
HXDLIN( 482)				Float l2_25 = (l2_23 + (l2_24 * ( (Float)(_hx_array_unsafe_get(this6,2)) )));
HXLINE( 484)				Float bcw_0 = (l2_05 * ((l2_15 + l2_25) - l2_05));
HXDLIN( 484)				Float bcw_1 = (l2_15 * ((l2_25 + l2_05) - l2_15));
HXDLIN( 484)				Float bcw_2 = (l2_25 * ((l2_05 + l2_15) - l2_25));
HXLINE( 489)				if ((bcw_0 <= 0)) {
HXLINE( 490)					{
HXLINE( 490)						::Array< Float > this1 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 490)						::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 490)						::Array< Float > v2 = ( (::Array< Float >)(_hx_array_unsafe_get(e,2)) );
HXDLIN( 490)						Float v = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 490)						Float v3 = (v * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 490)						Float v4 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 490)						Float v5 = (v3 + (v4 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 490)						Float v6 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 490)						Float v7 = (((((Float)-0.25) * l2_25) * area5) / (v5 + (v6 * ( (Float)(_hx_array_unsafe_get(v2,2)) ))));
HXDLIN( 490)						this1->__unsafe_set(1,v7);
            					}
HXLINE( 491)					{
HXLINE( 491)						::Array< Float > this2 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 491)						::Array< Float > v11 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 491)						::Array< Float > v21 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 491)						Float v8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 491)						Float v9 = (v8 * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN( 491)						Float v10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 491)						Float v12 = (v9 + (v10 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN( 491)						Float v13 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 491)						Float v14 = (((((Float)-0.25) * l2_15) * area5) / (v12 + (v13 * ( (Float)(_hx_array_unsafe_get(v21,2)) ))));
HXDLIN( 491)						this2->__unsafe_set(2,v14);
            					}
HXLINE( 492)					{
HXLINE( 492)						::Array< Float > this3 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 492)						Float v15 = (area5 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),1)) ));
HXDLIN( 492)						Float v16 = (v15 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),2)) ));
HXDLIN( 492)						this3->__unsafe_set(0,v16);
            					}
            				}
            				else {
HXLINE( 493)					if ((bcw_1 <= ((Float)0.0))) {
HXLINE( 494)						{
HXLINE( 494)							::Array< Float > this1 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 494)							::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 494)							::Array< Float > v2 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 494)							Float v = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 494)							Float v3 = (v * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 494)							Float v4 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 494)							Float v5 = (v3 + (v4 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 494)							Float v6 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 494)							Float v7 = (((((Float)-0.25) * l2_05) * area5) / (v5 + (v6 * ( (Float)(_hx_array_unsafe_get(v2,2)) ))));
HXDLIN( 494)							this1->__unsafe_set(2,v7);
            						}
HXLINE( 495)						{
HXLINE( 495)							::Array< Float > this2 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 495)							::Array< Float > v11 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 495)							::Array< Float > v21 = ( (::Array< Float >)(_hx_array_unsafe_get(e,2)) );
HXDLIN( 495)							Float v8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 495)							Float v9 = (v8 * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN( 495)							Float v10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 495)							Float v12 = (v9 + (v10 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN( 495)							Float v13 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 495)							Float v14 = (((((Float)-0.25) * l2_25) * area5) / (v12 + (v13 * ( (Float)(_hx_array_unsafe_get(v21,2)) ))));
HXDLIN( 495)							this2->__unsafe_set(0,v14);
            						}
HXLINE( 496)						{
HXLINE( 496)							::Array< Float > this3 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 496)							Float v15 = (area5 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),2)) ));
HXDLIN( 496)							Float v16 = (v15 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),0)) ));
HXDLIN( 496)							this3->__unsafe_set(1,v16);
            						}
            					}
            					else {
HXLINE( 497)						if ((bcw_2 <= ((Float)0.0))) {
HXLINE( 498)							{
HXLINE( 498)								::Array< Float > this1 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 498)								::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,2)) );
HXDLIN( 498)								::Array< Float > v2 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 498)								Float v = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 498)								Float v3 = (v * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 498)								Float v4 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 498)								Float v5 = (v3 + (v4 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 498)								Float v6 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 498)								Float v7 = (((((Float)-0.25) * l2_15) * area5) / (v5 + (v6 * ( (Float)(_hx_array_unsafe_get(v2,2)) ))));
HXDLIN( 498)								this1->__unsafe_set(0,v7);
            							}
HXLINE( 499)							{
HXLINE( 499)								::Array< Float > this2 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 499)								::Array< Float > v11 = ( (::Array< Float >)(_hx_array_unsafe_get(e,2)) );
HXDLIN( 499)								::Array< Float > v21 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 499)								Float v8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 499)								Float v9 = (v8 * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN( 499)								Float v10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 499)								Float v12 = (v9 + (v10 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN( 499)								Float v13 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 499)								Float v14 = (((((Float)-0.25) * l2_05) * area5) / (v12 + (v13 * ( (Float)(_hx_array_unsafe_get(v21,2)) ))));
HXDLIN( 499)								this2->__unsafe_set(1,v14);
            							}
HXLINE( 500)							{
HXLINE( 500)								::Array< Float > this3 = this->cornerAreas->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 500)								Float v15 = (area5 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),0)) ));
HXDLIN( 500)								Float v16 = (v15 - ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),1)) ));
HXDLIN( 500)								this3->__unsafe_set(2,v16);
            							}
            						}
            						else {
HXLINE( 502)							Float scale = ((((Float)0.5) * area5) / ((bcw_0 + bcw_1) + bcw_2));
HXLINE( 503)							{
HXLINE( 504)								{
HXLINE( 504)									Float v = (scale * (bcw_1 + bcw_2));
HXDLIN( 504)									this->cornerAreas->__get(i).StaticCast< ::Array< Float > >()->__unsafe_set(0,v);
            								}
HXDLIN( 504)								{
HXLINE( 504)									Float v1 = (scale * (bcw_2 + bcw_0));
HXDLIN( 504)									this->cornerAreas->__get(i).StaticCast< ::Array< Float > >()->__unsafe_set(1,v1);
            								}
HXDLIN( 504)								{
HXLINE( 504)									Float v2 = (scale * (bcw_0 + bcw_1));
HXDLIN( 504)									this->cornerAreas->__get(i).StaticCast< ::Array< Float > >()->__unsafe_set(2,v2);
            								}
            							}
            						}
            					}
            				}
HXLINE( 507)				::Array< Float > _hx_tmp = this->pointAreas;
HXDLIN( 507)				int _hx_tmp1 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),0)) );
HXDLIN( 507)				Float _hx_tmp2 = _hx_tmp->__get(_hx_tmp1);
HXDLIN( 507)				_hx_tmp[_hx_tmp1] = (_hx_tmp2 + ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),0)) ));
HXLINE( 508)				::Array< Float > _hx_tmp3 = this->pointAreas;
HXDLIN( 508)				int _hx_tmp4 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),1)) );
HXDLIN( 508)				Float _hx_tmp5 = _hx_tmp3->__get(_hx_tmp4);
HXDLIN( 508)				_hx_tmp3[_hx_tmp4] = (_hx_tmp5 + ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),1)) ));
HXLINE( 509)				::Array< Float > _hx_tmp6 = this->pointAreas;
HXDLIN( 509)				int _hx_tmp7 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),2)) );
HXDLIN( 509)				Float _hx_tmp8 = _hx_tmp6->__get(_hx_tmp7);
HXDLIN( 509)				_hx_tmp6[_hx_tmp7] = (_hx_tmp8 + ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),2)) ));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computePointAreas,(void))

void Mesh_obj::computeCurvatures(){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_598_computeCurvatures)
HXLINE( 600)		int nv = this->vertices->length;
HXLINE( 601)		int nf = this->faces->length;
HXLINE( 603)		::Array< Float > _g = ::Array_obj< Float >::__new(0);
HXDLIN( 603)		{
HXLINE( 603)			int _g1 = 0;
HXDLIN( 603)			int _g2 = nv;
HXDLIN( 603)			while((_g1 < _g2)){
HXLINE( 603)				_g1 = (_g1 + 1);
HXDLIN( 603)				int i = (_g1 - 1);
HXDLIN( 603)				_g->push(0);
            			}
            		}
HXDLIN( 603)		this->curv1 = _g;
HXLINE( 604)		::Array< Float > _g3 = ::Array_obj< Float >::__new(0);
HXDLIN( 604)		{
HXLINE( 604)			int _g4 = 0;
HXDLIN( 604)			int _g5 = nv;
HXDLIN( 604)			while((_g4 < _g5)){
HXLINE( 604)				_g4 = (_g4 + 1);
HXDLIN( 604)				int i = (_g4 - 1);
HXDLIN( 604)				_g3->push(0);
            			}
            		}
HXDLIN( 604)		this->curv2 = _g3;
HXLINE( 605)		::Array< ::Dynamic> _g6 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 605)		{
HXLINE( 605)			int _g7 = 0;
HXDLIN( 605)			int _g8 = nv;
HXDLIN( 605)			while((_g7 < _g8)){
HXLINE( 605)				_g7 = (_g7 + 1);
HXDLIN( 605)				int i = (_g7 - 1);
HXDLIN( 605)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 605)				::Array< Float > this2 = this1;
HXDLIN( 605)				this2->__unsafe_set(0,0);
HXDLIN( 605)				this2->__unsafe_set(1,0);
HXDLIN( 605)				this2->__unsafe_set(2,0);
HXDLIN( 605)				_g6->push(this2);
            			}
            		}
HXDLIN( 605)		this->pdir1 = _g6;
HXLINE( 606)		::Array< ::Dynamic> _g9 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 606)		{
HXLINE( 606)			int _g10 = 0;
HXDLIN( 606)			int _g11 = nv;
HXDLIN( 606)			while((_g10 < _g11)){
HXLINE( 606)				_g10 = (_g10 + 1);
HXDLIN( 606)				int i = (_g10 - 1);
HXDLIN( 606)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 606)				::Array< Float > this2 = this1;
HXDLIN( 606)				this2->__unsafe_set(0,0);
HXDLIN( 606)				this2->__unsafe_set(1,0);
HXDLIN( 606)				this2->__unsafe_set(2,0);
HXDLIN( 606)				_g9->push(this2);
            			}
            		}
HXDLIN( 606)		this->pdir2 = _g9;
HXLINE( 607)		::Array< Float > _g12 = ::Array_obj< Float >::__new(0);
HXDLIN( 607)		{
HXLINE( 607)			int _g13 = 0;
HXDLIN( 607)			int _g14 = nv;
HXDLIN( 607)			while((_g13 < _g14)){
HXLINE( 607)				_g13 = (_g13 + 1);
HXDLIN( 607)				int i = (_g13 - 1);
HXDLIN( 607)				_g12->push(0);
            			}
            		}
HXDLIN( 607)		::Array< Float > curv12 = _g12;
HXLINE( 610)		{
HXLINE( 610)			int _g15 = 0;
HXDLIN( 610)			int _g16 = nf;
HXDLIN( 610)			while((_g15 < _g16)){
HXLINE( 610)				_g15 = (_g15 + 1);
HXDLIN( 610)				int i = (_g15 - 1);
HXLINE( 611)				::Array< ::Dynamic> _hx_tmp = this->pdir1;
HXDLIN( 611)				int _hx_tmp1 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),0)) );
HXDLIN( 611)				::Array< Float > this1 = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN( 611)				::Array< Float > rhs = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN( 611)				Float _x = ( (Float)(_hx_array_unsafe_get(this1,0)) );
HXDLIN( 611)				Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 611)				Float _y = ( (Float)(_hx_array_unsafe_get(this1,1)) );
HXDLIN( 611)				Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 611)				Float _z = ( (Float)(_hx_array_unsafe_get(this1,2)) );
HXDLIN( 611)				Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 611)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 611)				::Array< Float > this3 = this2;
HXDLIN( 611)				this3->__unsafe_set(0,_x1);
HXDLIN( 611)				this3->__unsafe_set(1,_y1);
HXDLIN( 611)				this3->__unsafe_set(2,_z1);
HXDLIN( 611)				_hx_tmp[_hx_tmp1] = this3;
HXLINE( 613)				::Array< ::Dynamic> _hx_tmp2 = this->pdir1;
HXDLIN( 613)				int _hx_tmp3 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),1)) );
HXDLIN( 613)				::Array< Float > this4 = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN( 613)				::Array< Float > rhs1 = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN( 613)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 613)				Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(rhs1,0)) ));
HXDLIN( 613)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 613)				Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(rhs1,1)) ));
HXDLIN( 613)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 613)				Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(rhs1,2)) ));
HXDLIN( 613)				::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 613)				::Array< Float > this6 = this5;
HXDLIN( 613)				this6->__unsafe_set(0,_x3);
HXDLIN( 613)				this6->__unsafe_set(1,_y3);
HXDLIN( 613)				this6->__unsafe_set(2,_z3);
HXDLIN( 613)				_hx_tmp2[_hx_tmp3] = this6;
HXLINE( 615)				::Array< ::Dynamic> _hx_tmp4 = this->pdir1;
HXDLIN( 615)				int _hx_tmp5 = ( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),2)) );
HXDLIN( 615)				::Array< Float > this7 = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN( 615)				::Array< Float > rhs2 = this->vertices->__get(( (int)(_hx_array_unsafe_get(this->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN( 615)				Float _x4 = ( (Float)(_hx_array_unsafe_get(this7,0)) );
HXDLIN( 615)				Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN( 615)				Float _y4 = ( (Float)(_hx_array_unsafe_get(this7,1)) );
HXDLIN( 615)				Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN( 615)				Float _z4 = ( (Float)(_hx_array_unsafe_get(this7,2)) );
HXDLIN( 615)				Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN( 615)				::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 615)				::Array< Float > this9 = this8;
HXDLIN( 615)				this9->__unsafe_set(0,_x5);
HXDLIN( 615)				this9->__unsafe_set(1,_y5);
HXDLIN( 615)				this9->__unsafe_set(2,_z5);
HXDLIN( 615)				_hx_tmp4[_hx_tmp5] = this9;
            			}
            		}
HXLINE( 618)		{
HXLINE( 618)			int _g17 = 0;
HXDLIN( 618)			int _g18 = nv;
HXDLIN( 618)			while((_g17 < _g18)){
HXLINE( 618)				_g17 = (_g17 + 1);
HXDLIN( 618)				int i = (_g17 - 1);
HXLINE( 619)				::Array< ::Dynamic> _hx_tmp = this->pdir1;
HXDLIN( 619)				::Array< Float > v1 = this->pdir1->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 619)				::Array< Float > v2 = this->normals->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 619)				Float _x = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 619)				Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN( 619)				Float _x2 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 619)				Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 619)				Float _y = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 619)				Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 619)				Float _y2 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 619)				Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(v2,2)) )));
HXDLIN( 619)				Float _z = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 619)				Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN( 619)				Float _z2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 619)				Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(v2,0)) )));
HXDLIN( 619)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 619)				::Array< Float > this2 = this1;
HXDLIN( 619)				this2->__unsafe_set(0,_x3);
HXDLIN( 619)				this2->__unsafe_set(1,_y3);
HXDLIN( 619)				this2->__unsafe_set(2,_z3);
HXDLIN( 619)				_hx_tmp[i] = this2;
HXLINE( 620)				{
HXLINE( 620)					::Array< Float > this3 = this->pdir1->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 620)					Float l = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN( 620)					Float l1 = (l * ( (Float)(_hx_array_unsafe_get(this3,0)) ));
HXDLIN( 620)					Float l2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN( 620)					Float l3 = (l1 + (l2 * ( (Float)(_hx_array_unsafe_get(this3,1)) )));
HXDLIN( 620)					Float l4 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN( 620)					Float l5 = ::Math_obj::sqrt((l3 + (l4 * ( (Float)(_hx_array_unsafe_get(this3,2)) ))));
HXDLIN( 620)					if ((l5 > 0)) {
HXLINE( 620)						l5 = (( (Float)(1) ) / l5);
HXDLIN( 620)						{
HXLINE( 620)							::Array< Float > _g = this3;
HXDLIN( 620)							{
HXLINE( 620)								Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l5);
HXDLIN( 620)								_g->__unsafe_set(0,v);
            							}
            						}
HXDLIN( 620)						{
HXLINE( 620)							::Array< Float > _g1 = this3;
HXDLIN( 620)							{
HXLINE( 620)								Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l5);
HXDLIN( 620)								_g1->__unsafe_set(1,v1);
            							}
            						}
HXDLIN( 620)						{
HXLINE( 620)							::Array< Float > _g2 = this3;
HXDLIN( 620)							{
HXLINE( 620)								Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l5);
HXDLIN( 620)								_g2->__unsafe_set(2,v2);
            							}
            						}
            					}
            					else {
HXLINE( 620)						this3->__unsafe_set(0,0);
HXDLIN( 620)						this3->__unsafe_set(1,0);
HXDLIN( 620)						this3->__unsafe_set(2,1);
            					}
            				}
HXLINE( 621)				::Array< ::Dynamic> _hx_tmp1 = this->pdir2;
HXDLIN( 621)				::Array< Float > v11 = this->normals->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 621)				::Array< Float > v21 = this->pdir1->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 621)				Float _x4 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 621)				Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(v21,2)) ));
HXDLIN( 621)				Float _x6 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 621)				Float _x7 = (_x5 - (_x6 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN( 621)				Float _y4 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 621)				Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN( 621)				Float _y6 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 621)				Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(v21,2)) )));
HXDLIN( 621)				Float _z4 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 621)				Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(v21,1)) ));
HXDLIN( 621)				Float _z6 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 621)				Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(v21,0)) )));
HXDLIN( 621)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN( 621)				::Array< Float > this5 = this4;
HXDLIN( 621)				this5->__unsafe_set(0,_x7);
HXDLIN( 621)				this5->__unsafe_set(1,_y7);
HXDLIN( 621)				this5->__unsafe_set(2,_z7);
HXDLIN( 621)				_hx_tmp1[i] = this5;
            			}
            		}
HXLINE( 625)		{
HXLINE( 625)			int _g19 = 0;
HXDLIN( 625)			int _g20 = nf;
HXDLIN( 625)			while((_g19 < _g20)){
HXLINE( 625)				_g19 = (_g19 + 1);
HXDLIN( 625)				int i = (_g19 - 1);
HXLINE( 626)				::Array< int > f = this->faces->__get(i).StaticCast< ::Array< int > >();
HXLINE( 627)				::Array< ::Dynamic> e = this->getFaceEdges(f);
HXLINE( 630)				::Array< Float > this1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 630)				Float _x = ( (Float)(_hx_array_unsafe_get(this1,0)) );
HXDLIN( 630)				Float _y = ( (Float)(_hx_array_unsafe_get(this1,1)) );
HXDLIN( 630)				Float _z = ( (Float)(_hx_array_unsafe_get(this1,2)) );
HXDLIN( 630)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 630)				::Array< Float > this3 = this2;
HXDLIN( 630)				this3->__unsafe_set(0,_x);
HXDLIN( 630)				this3->__unsafe_set(1,_y);
HXDLIN( 630)				this3->__unsafe_set(2,_z);
HXDLIN( 630)				::Array< Float > t = this3;
HXLINE( 631)				{
HXLINE( 631)					Float l = ( (Float)(_hx_array_unsafe_get(t,0)) );
HXDLIN( 631)					Float l1 = (l * ( (Float)(_hx_array_unsafe_get(t,0)) ));
HXDLIN( 631)					Float l2 = ( (Float)(_hx_array_unsafe_get(t,1)) );
HXDLIN( 631)					Float l3 = (l1 + (l2 * ( (Float)(_hx_array_unsafe_get(t,1)) )));
HXDLIN( 631)					Float l4 = ( (Float)(_hx_array_unsafe_get(t,2)) );
HXDLIN( 631)					Float l5 = ::Math_obj::sqrt((l3 + (l4 * ( (Float)(_hx_array_unsafe_get(t,2)) ))));
HXDLIN( 631)					if ((l5 > 0)) {
HXLINE( 631)						l5 = (( (Float)(1) ) / l5);
HXDLIN( 631)						{
HXLINE( 631)							::Array< Float > _g = t;
HXDLIN( 631)							{
HXLINE( 631)								Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l5);
HXDLIN( 631)								_g->__unsafe_set(0,v);
            							}
            						}
HXDLIN( 631)						{
HXLINE( 631)							::Array< Float > _g1 = t;
HXDLIN( 631)							{
HXLINE( 631)								Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l5);
HXDLIN( 631)								_g1->__unsafe_set(1,v1);
            							}
            						}
HXDLIN( 631)						{
HXLINE( 631)							::Array< Float > _g2 = t;
HXDLIN( 631)							{
HXLINE( 631)								Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l5);
HXDLIN( 631)								_g2->__unsafe_set(2,v2);
            							}
            						}
            					}
            					else {
HXLINE( 631)						t->__unsafe_set(0,0);
HXDLIN( 631)						t->__unsafe_set(1,0);
HXDLIN( 631)						t->__unsafe_set(2,1);
            					}
            				}
HXLINE( 632)				::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,0)) );
HXDLIN( 632)				::Array< Float > v2 = ( (::Array< Float >)(_hx_array_unsafe_get(e,1)) );
HXDLIN( 632)				Float _x1 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 632)				Float _x2 = (_x1 * ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN( 632)				Float _x3 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 632)				Float _x4 = (_x2 - (_x3 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 632)				Float _y1 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 632)				Float _y2 = (_y1 * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 632)				Float _y3 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 632)				Float _y4 = (_y2 - (_y3 * ( (Float)(_hx_array_unsafe_get(v2,2)) )));
HXDLIN( 632)				Float _z1 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 632)				Float _z2 = (_z1 * ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN( 632)				Float _z3 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 632)				Float _z4 = (_z2 - (_z3 * ( (Float)(_hx_array_unsafe_get(v2,0)) )));
HXDLIN( 632)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN( 632)				::Array< Float > this5 = this4;
HXDLIN( 632)				this5->__unsafe_set(0,_x4);
HXDLIN( 632)				this5->__unsafe_set(1,_y4);
HXDLIN( 632)				this5->__unsafe_set(2,_z4);
HXDLIN( 632)				::Array< Float > n = this5;
HXLINE( 633)				Float _x5 = ( (Float)(_hx_array_unsafe_get(n,1)) );
HXDLIN( 633)				Float _x6 = (_x5 * ( (Float)(_hx_array_unsafe_get(t,2)) ));
HXDLIN( 633)				Float _x7 = ( (Float)(_hx_array_unsafe_get(n,2)) );
HXDLIN( 633)				Float _x8 = (_x6 - (_x7 * ( (Float)(_hx_array_unsafe_get(t,1)) )));
HXDLIN( 633)				Float _y5 = ( (Float)(_hx_array_unsafe_get(n,2)) );
HXDLIN( 633)				Float _y6 = (_y5 * ( (Float)(_hx_array_unsafe_get(t,0)) ));
HXDLIN( 633)				Float _y7 = ( (Float)(_hx_array_unsafe_get(n,0)) );
HXDLIN( 633)				Float _y8 = (_y6 - (_y7 * ( (Float)(_hx_array_unsafe_get(t,2)) )));
HXDLIN( 633)				Float _z5 = ( (Float)(_hx_array_unsafe_get(n,0)) );
HXDLIN( 633)				Float _z6 = (_z5 * ( (Float)(_hx_array_unsafe_get(t,1)) ));
HXDLIN( 633)				Float _z7 = ( (Float)(_hx_array_unsafe_get(n,1)) );
HXDLIN( 633)				Float _z8 = (_z6 - (_z7 * ( (Float)(_hx_array_unsafe_get(t,0)) )));
HXDLIN( 633)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 633)				::Array< Float > this7 = this6;
HXDLIN( 633)				this7->__unsafe_set(0,_x8);
HXDLIN( 633)				this7->__unsafe_set(1,_y8);
HXDLIN( 633)				this7->__unsafe_set(2,_z8);
HXDLIN( 633)				::Array< Float > b = this7;
HXLINE( 634)				{
HXLINE( 634)					Float l6 = ( (Float)(_hx_array_unsafe_get(b,0)) );
HXDLIN( 634)					Float l7 = (l6 * ( (Float)(_hx_array_unsafe_get(b,0)) ));
HXDLIN( 634)					Float l8 = ( (Float)(_hx_array_unsafe_get(b,1)) );
HXDLIN( 634)					Float l9 = (l7 + (l8 * ( (Float)(_hx_array_unsafe_get(b,1)) )));
HXDLIN( 634)					Float l10 = ( (Float)(_hx_array_unsafe_get(b,2)) );
HXDLIN( 634)					Float l11 = ::Math_obj::sqrt((l9 + (l10 * ( (Float)(_hx_array_unsafe_get(b,2)) ))));
HXDLIN( 634)					if ((l11 > 0)) {
HXLINE( 634)						l11 = (( (Float)(1) ) / l11);
HXDLIN( 634)						{
HXLINE( 634)							::Array< Float > _g = b;
HXDLIN( 634)							{
HXLINE( 634)								Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l11);
HXDLIN( 634)								_g->__unsafe_set(0,v);
            							}
            						}
HXDLIN( 634)						{
HXLINE( 634)							::Array< Float > _g1 = b;
HXDLIN( 634)							{
HXLINE( 634)								Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l11);
HXDLIN( 634)								_g1->__unsafe_set(1,v1);
            							}
            						}
HXDLIN( 634)						{
HXLINE( 634)							::Array< Float > _g2 = b;
HXDLIN( 634)							{
HXLINE( 634)								Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l11);
HXDLIN( 634)								_g2->__unsafe_set(2,v2);
            							}
            						}
            					}
            					else {
HXLINE( 634)						b->__unsafe_set(0,0);
HXDLIN( 634)						b->__unsafe_set(1,0);
HXDLIN( 634)						b->__unsafe_set(2,1);
            					}
            				}
HXLINE( 637)				::Array< Float > m = ::Array_obj< Float >::fromData( _hx_array_data_614e9f9a_33,3);
HXLINE( 638)				::Array< ::Dynamic> w = ::Array_obj< ::Dynamic>::__new(3)->init(0,::Array_obj< Float >::fromData( _hx_array_data_614e9f9a_34,3))->init(1,::Array_obj< Float >::fromData( _hx_array_data_614e9f9a_35,3))->init(2,::Array_obj< Float >::fromData( _hx_array_data_614e9f9a_36,3));
HXLINE( 639)				{
HXLINE( 639)					int _g = 0;
HXDLIN( 639)					while((_g < 3)){
HXLINE( 639)						_g = (_g + 1);
HXDLIN( 639)						int j = (_g - 1);
HXLINE( 640)						::Array< Float > v1 = ( (::Array< Float >)(_hx_array_unsafe_get(e,j)) );
HXDLIN( 640)						Float u = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 640)						Float u1 = (u * ( (Float)(_hx_array_unsafe_get(t,0)) ));
HXDLIN( 640)						Float u2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 640)						Float u3 = (u1 + (u2 * ( (Float)(_hx_array_unsafe_get(t,1)) )));
HXDLIN( 640)						Float u4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 640)						Float u5 = (u3 + (u4 * ( (Float)(_hx_array_unsafe_get(t,2)) )));
HXLINE( 641)						::Array< Float > v11 = ( (::Array< Float >)(_hx_array_unsafe_get(e,j)) );
HXDLIN( 641)						Float v = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 641)						Float v2 = (v * ( (Float)(_hx_array_unsafe_get(b,0)) ));
HXDLIN( 641)						Float v3 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 641)						Float v4 = (v2 + (v3 * ( (Float)(_hx_array_unsafe_get(b,1)) )));
HXDLIN( 641)						Float v5 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 641)						Float v6 = (v4 + (v5 * ( (Float)(_hx_array_unsafe_get(b,2)) )));
HXLINE( 642)						::Array< Float > w1 = w->__get(0).StaticCast< ::Array< Float > >();
HXDLIN( 642)						int _hx_tmp = 0;
HXDLIN( 642)						w1[_hx_tmp] = (w1->__get(_hx_tmp) + (u5 * u5));
HXLINE( 643)						::Array< Float > w2 = w->__get(0).StaticCast< ::Array< Float > >();
HXDLIN( 643)						int _hx_tmp1 = 1;
HXDLIN( 643)						w2[_hx_tmp1] = (w2->__get(_hx_tmp1) + (u5 * v6));
HXLINE( 644)						::Array< Float > w3 = w->__get(2).StaticCast< ::Array< Float > >();
HXDLIN( 644)						int _hx_tmp2 = 2;
HXDLIN( 644)						w3[_hx_tmp2] = (w3->__get(_hx_tmp2) + (v6 * v6));
HXLINE( 648)						int this1;
HXDLIN( 648)						if ((j > 0)) {
HXLINE( 648)							this1 = (j - 1);
            						}
            						else {
HXLINE( 648)							this1 = (j + 2);
            						}
HXDLIN( 648)						::Array< Float > this2 = this->normals->__get(( (int)(_hx_array_unsafe_get(f,this1)) )).StaticCast< ::Array< Float > >();
HXLINE( 649)						int rhs;
HXDLIN( 649)						if ((j < 2)) {
HXLINE( 649)							rhs = (j + 1);
            						}
            						else {
HXLINE( 649)							rhs = (j - 2);
            						}
HXLINE( 648)						::Array< Float > rhs1 = this->normals->__get(( (int)(_hx_array_unsafe_get(f,rhs)) )).StaticCast< ::Array< Float > >();
HXDLIN( 648)						Float _x = ( (Float)(_hx_array_unsafe_get(this2,0)) );
HXDLIN( 648)						Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(rhs1,0)) ));
HXDLIN( 648)						Float _y = ( (Float)(_hx_array_unsafe_get(this2,1)) );
HXDLIN( 648)						Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(rhs1,1)) ));
HXDLIN( 648)						Float _z = ( (Float)(_hx_array_unsafe_get(this2,2)) );
HXDLIN( 648)						Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(rhs1,2)) ));
HXDLIN( 648)						::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 648)						::Array< Float > this4 = this3;
HXDLIN( 648)						this4->__unsafe_set(0,_x1);
HXDLIN( 648)						this4->__unsafe_set(1,_y1);
HXDLIN( 648)						this4->__unsafe_set(2,_z1);
HXDLIN( 648)						::Array< Float > dn = this4;
HXLINE( 650)						Float dnu = ( (Float)(_hx_array_unsafe_get(dn,0)) );
HXDLIN( 650)						Float dnu1 = (dnu * ( (Float)(_hx_array_unsafe_get(t,0)) ));
HXDLIN( 650)						Float dnu2 = ( (Float)(_hx_array_unsafe_get(dn,1)) );
HXDLIN( 650)						Float dnu3 = (dnu1 + (dnu2 * ( (Float)(_hx_array_unsafe_get(t,1)) )));
HXDLIN( 650)						Float dnu4 = ( (Float)(_hx_array_unsafe_get(dn,2)) );
HXDLIN( 650)						Float dnu5 = (dnu3 + (dnu4 * ( (Float)(_hx_array_unsafe_get(t,2)) )));
HXLINE( 651)						Float dnv = ( (Float)(_hx_array_unsafe_get(dn,0)) );
HXDLIN( 651)						Float dnv1 = (dnv * ( (Float)(_hx_array_unsafe_get(b,0)) ));
HXDLIN( 651)						Float dnv2 = ( (Float)(_hx_array_unsafe_get(dn,1)) );
HXDLIN( 651)						Float dnv3 = (dnv1 + (dnv2 * ( (Float)(_hx_array_unsafe_get(b,1)) )));
HXDLIN( 651)						Float dnv4 = ( (Float)(_hx_array_unsafe_get(dn,2)) );
HXDLIN( 651)						Float dnv5 = (dnv3 + (dnv4 * ( (Float)(_hx_array_unsafe_get(b,2)) )));
HXLINE( 652)						::Array< Float > m1 = m;
HXDLIN( 652)						int _hx_tmp3 = 0;
HXDLIN( 652)						m1[_hx_tmp3] = (m1->__get(_hx_tmp3) + (dnu5 * u5));
HXLINE( 653)						::Array< Float > m2 = m;
HXDLIN( 653)						int _hx_tmp4 = 1;
HXDLIN( 653)						m2[_hx_tmp4] = (m2->__get(_hx_tmp4) + ((dnu5 * v6) + (dnv5 * u5)));
HXLINE( 654)						::Array< Float > m3 = m;
HXDLIN( 654)						int _hx_tmp5 = 2;
HXDLIN( 654)						m3[_hx_tmp5] = (m3->__get(_hx_tmp5) + (dnv5 * v6));
            					}
            				}
HXLINE( 656)				w->__get(1).StaticCast< ::Array< Float > >()[1] = (w->__get(0).StaticCast< ::Array< Float > >()->__get(0) + w->__get(2).StaticCast< ::Array< Float > >()->__get(2));
HXLINE( 657)				w->__get(1).StaticCast< ::Array< Float > >()[2] = w->__get(0).StaticCast< ::Array< Float > >()->__get(1);
HXLINE( 659)				::Array< Float > diag = ::Array_obj< Float >::fromData( _hx_array_data_614e9f9a_37,3);
HXLINE( 660)				if (!(::apparentridges::Util_obj::ldltdc(w,diag))) {
HXLINE( 661)					continue;
            				}
HXLINE( 663)				::apparentridges::Util_obj::ldltsl(w,diag,m,m);
HXLINE( 665)				{
HXLINE( 665)					{
HXLINE( 666)						int vj = ( (int)(_hx_array_unsafe_get(f,0)) );
HXLINE( 667)						::Array< Float > ccc = ::apparentridges::Mesh_obj::projCurv(t,b,m->__get(0),m->__get(1),m->__get(2),this->pdir1->__get(vj).StaticCast< ::Array< Float > >(),this->pdir2->__get(vj).StaticCast< ::Array< Float > >());
HXLINE( 668)						Float c1 = ( (Float)(_hx_array_unsafe_get(ccc,0)) );
HXLINE( 669)						Float c12 = ( (Float)(_hx_array_unsafe_get(ccc,1)) );
HXLINE( 670)						Float c2 = ( (Float)(_hx_array_unsafe_get(ccc,2)) );
HXLINE( 671)						Float wt = ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),0)) );
HXDLIN( 671)						Float wt1 = (wt / this->pointAreas->__get(vj));
HXLINE( 672)						::Array< Float > _hx_tmp = this->curv1;
HXDLIN( 672)						int vj1 = vj;
HXDLIN( 672)						_hx_tmp[vj1] = (_hx_tmp->__get(vj1) + (wt1 * c1));
HXLINE( 673)						::Array< Float > curv121 = curv12;
HXDLIN( 673)						int vj2 = vj;
HXDLIN( 673)						curv121[vj2] = (curv121->__get(vj2) + (wt1 * c12));
HXLINE( 674)						::Array< Float > _hx_tmp1 = this->curv2;
HXDLIN( 674)						int vj3 = vj;
HXDLIN( 674)						_hx_tmp1[vj3] = (_hx_tmp1->__get(vj3) + (wt1 * c2));
            					}
HXLINE( 665)					{
HXLINE( 666)						int vj4 = ( (int)(_hx_array_unsafe_get(f,1)) );
HXLINE( 667)						::Array< Float > ccc1 = ::apparentridges::Mesh_obj::projCurv(t,b,m->__get(0),m->__get(1),m->__get(2),this->pdir1->__get(vj4).StaticCast< ::Array< Float > >(),this->pdir2->__get(vj4).StaticCast< ::Array< Float > >());
HXLINE( 668)						Float c11 = ( (Float)(_hx_array_unsafe_get(ccc1,0)) );
HXLINE( 669)						Float c121 = ( (Float)(_hx_array_unsafe_get(ccc1,1)) );
HXLINE( 670)						Float c21 = ( (Float)(_hx_array_unsafe_get(ccc1,2)) );
HXLINE( 671)						Float wt2 = ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),1)) );
HXDLIN( 671)						Float wt3 = (wt2 / this->pointAreas->__get(vj4));
HXLINE( 672)						::Array< Float > _hx_tmp2 = this->curv1;
HXDLIN( 672)						int vj5 = vj4;
HXDLIN( 672)						_hx_tmp2[vj5] = (_hx_tmp2->__get(vj5) + (wt3 * c11));
HXLINE( 673)						::Array< Float > curv122 = curv12;
HXDLIN( 673)						int vj6 = vj4;
HXDLIN( 673)						curv122[vj6] = (curv122->__get(vj6) + (wt3 * c121));
HXLINE( 674)						::Array< Float > _hx_tmp3 = this->curv2;
HXDLIN( 674)						int vj7 = vj4;
HXDLIN( 674)						_hx_tmp3[vj7] = (_hx_tmp3->__get(vj7) + (wt3 * c21));
            					}
HXLINE( 665)					{
HXLINE( 666)						int vj8 = ( (int)(_hx_array_unsafe_get(f,2)) );
HXLINE( 667)						::Array< Float > ccc2 = ::apparentridges::Mesh_obj::projCurv(t,b,m->__get(0),m->__get(1),m->__get(2),this->pdir1->__get(vj8).StaticCast< ::Array< Float > >(),this->pdir2->__get(vj8).StaticCast< ::Array< Float > >());
HXLINE( 668)						Float c13 = ( (Float)(_hx_array_unsafe_get(ccc2,0)) );
HXLINE( 669)						Float c122 = ( (Float)(_hx_array_unsafe_get(ccc2,1)) );
HXLINE( 670)						Float c22 = ( (Float)(_hx_array_unsafe_get(ccc2,2)) );
HXLINE( 671)						Float wt4 = ( (Float)(_hx_array_unsafe_get(this->cornerAreas->__get(i).StaticCast< ::Array< Float > >(),2)) );
HXDLIN( 671)						Float wt5 = (wt4 / this->pointAreas->__get(vj8));
HXLINE( 672)						::Array< Float > _hx_tmp4 = this->curv1;
HXDLIN( 672)						int vj9 = vj8;
HXDLIN( 672)						_hx_tmp4[vj9] = (_hx_tmp4->__get(vj9) + (wt5 * c13));
HXLINE( 673)						::Array< Float > curv123 = curv12;
HXDLIN( 673)						int vj10 = vj8;
HXDLIN( 673)						curv123[vj10] = (curv123->__get(vj10) + (wt5 * c122));
HXLINE( 674)						::Array< Float > _hx_tmp5 = this->curv2;
HXDLIN( 674)						int vj11 = vj8;
HXDLIN( 674)						_hx_tmp5[vj11] = (_hx_tmp5->__get(vj11) + (wt5 * c22));
            					}
            				}
            			}
            		}
HXLINE( 678)		{
HXLINE( 678)			int _g21 = 0;
HXDLIN( 678)			int _g22 = nv;
HXDLIN( 678)			while((_g21 < _g22)){
HXLINE( 678)				_g21 = (_g21 + 1);
HXDLIN( 678)				int i = (_g21 - 1);
HXLINE( 679)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 679)				::Array< Float > this2 = this1;
HXDLIN( 679)				this2->__unsafe_set(0,0);
HXDLIN( 679)				this2->__unsafe_set(1,0);
HXDLIN( 679)				this2->__unsafe_set(2,0);
HXDLIN( 679)				::Array< Float > c1c2 = this2;
HXLINE( 680)				::apparentridges::Mesh_obj::diagonalizeCurv(this->pdir1->__get(i).StaticCast< ::Array< Float > >(),this->pdir2->__get(i).StaticCast< ::Array< Float > >(),this->curv1->__get(i),curv12->__get(i),this->curv2->__get(i),this->normals->__get(i).StaticCast< ::Array< Float > >(),this->pdir1->__get(i).StaticCast< ::Array< Float > >(),this->pdir2->__get(i).StaticCast< ::Array< Float > >(),c1c2);
HXLINE( 686)				this->curv1[i] = ( (Float)(_hx_array_unsafe_get(c1c2,0)) );
HXLINE( 687)				this->curv2[i] = ( (Float)(_hx_array_unsafe_get(c1c2,1)) );
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeCurvatures,(void))

::Array< Float > Mesh_obj::computeVertViewDepCurv(int i,Float ndotv,Float u2,Float uv,Float v2){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_694_computeVertViewDepCurv)
HXLINE( 697)		Float sectheta_minus1 = ((((Float)1.0) / ::Math_obj::abs(ndotv)) - ((Float)1.0));
HXLINE( 698)		Float Q11 = (this->curv1->__get(i) * (((Float)1.0) + (sectheta_minus1 * u2)));
HXLINE( 699)		Float Q12 = (this->curv1->__get(i) * (sectheta_minus1 * uv));
HXLINE( 700)		Float Q21 = (this->curv2->__get(i) * (sectheta_minus1 * uv));
HXLINE( 701)		Float Q22 = (this->curv2->__get(i) * (((Float)1.0) + (sectheta_minus1 * v2)));
HXLINE( 704)		Float QTQ1 = ((Q11 * Q11) + (Q21 * Q21));
HXLINE( 705)		Float QTQ12 = ((Q11 * Q12) + (Q21 * Q22));
HXLINE( 706)		Float QTQ2 = ((Q12 * Q12) + (Q22 * Q22));
HXLINE( 709)		return ::apparentridges::Util_obj::largestEig2x2(QTQ1,QTQ12,QTQ2);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Mesh_obj,computeVertViewDepCurv,return )

Float Mesh_obj::computeVertDt1q1(int i,Float ndotv,::Array< ::Dynamic> t1q1){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_715_computeVertDt1q1)
HXLINE( 716)		::Array< Float > v0 = this->vertices->__get(i).StaticCast< ::Array< Float > >();
HXLINE( 717)		Float this_viewdep_curv = ( (Float)(_hx_array_unsafe_get(t1q1->__get(i).StaticCast< ::Array< Float > >(),2)) );
HXLINE( 718)		::Array< Float > this1 = this->pdir1->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 718)		Float rhs = ( (Float)(_hx_array_unsafe_get(t1q1->__get(i).StaticCast< ::Array< Float > >(),0)) );
HXDLIN( 718)		Float _x = (( (Float)(_hx_array_unsafe_get(this1,0)) ) * rhs);
HXDLIN( 718)		Float _y = (( (Float)(_hx_array_unsafe_get(this1,1)) ) * rhs);
HXDLIN( 718)		Float _z = (( (Float)(_hx_array_unsafe_get(this1,2)) ) * rhs);
HXDLIN( 718)		::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 718)		::Array< Float > this3 = this2;
HXDLIN( 718)		this3->__unsafe_set(0,_x);
HXDLIN( 718)		this3->__unsafe_set(1,_y);
HXDLIN( 718)		this3->__unsafe_set(2,_z);
HXDLIN( 718)		::Array< Float > this4 = this3;
HXDLIN( 718)		::Array< Float > this5 = this->pdir2->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 718)		Float rhs1 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(i).StaticCast< ::Array< Float > >(),1)) );
HXDLIN( 718)		Float _x1 = (( (Float)(_hx_array_unsafe_get(this5,0)) ) * rhs1);
HXDLIN( 718)		Float _y1 = (( (Float)(_hx_array_unsafe_get(this5,1)) ) * rhs1);
HXDLIN( 718)		Float _z1 = (( (Float)(_hx_array_unsafe_get(this5,2)) ) * rhs1);
HXDLIN( 718)		::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 718)		::Array< Float > this7 = this6;
HXDLIN( 718)		this7->__unsafe_set(0,_x1);
HXDLIN( 718)		this7->__unsafe_set(1,_y1);
HXDLIN( 718)		this7->__unsafe_set(2,_z1);
HXDLIN( 718)		::Array< Float > rhs2 = this7;
HXDLIN( 718)		Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 718)		Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN( 718)		Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 718)		Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN( 718)		Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 718)		Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN( 718)		::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 718)		::Array< Float > this9 = this8;
HXDLIN( 718)		this9->__unsafe_set(0,_x3);
HXDLIN( 718)		this9->__unsafe_set(1,_y3);
HXDLIN( 718)		this9->__unsafe_set(2,_z3);
HXDLIN( 718)		::Array< Float > world_t1 = this9;
HXLINE( 719)		::Array< Float > v1 = this->normals->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 719)		Float _x4 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 719)		Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(world_t1,2)) ));
HXDLIN( 719)		Float _x6 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 719)		Float _x7 = (_x5 - (_x6 * ( (Float)(_hx_array_unsafe_get(world_t1,1)) )));
HXDLIN( 719)		Float _y4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 719)		Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(world_t1,0)) ));
HXDLIN( 719)		Float _y6 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 719)		Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(world_t1,2)) )));
HXDLIN( 719)		Float _z4 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 719)		Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(world_t1,1)) ));
HXDLIN( 719)		Float _z6 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 719)		Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(world_t1,0)) )));
HXDLIN( 719)		::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN( 719)		::Array< Float > this11 = this10;
HXDLIN( 719)		this11->__unsafe_set(0,_x7);
HXDLIN( 719)		this11->__unsafe_set(1,_y7);
HXDLIN( 719)		this11->__unsafe_set(2,_z7);
HXDLIN( 719)		::Array< Float > world_t2 = this11;
HXLINE( 720)		Float v0_dot_t2 = ( (Float)(_hx_array_unsafe_get(v0,0)) );
HXDLIN( 720)		Float v0_dot_t21 = (v0_dot_t2 * ( (Float)(_hx_array_unsafe_get(world_t2,0)) ));
HXDLIN( 720)		Float v0_dot_t22 = ( (Float)(_hx_array_unsafe_get(v0,1)) );
HXDLIN( 720)		Float v0_dot_t23 = (v0_dot_t21 + (v0_dot_t22 * ( (Float)(_hx_array_unsafe_get(world_t2,1)) )));
HXDLIN( 720)		Float v0_dot_t24 = ( (Float)(_hx_array_unsafe_get(v0,2)) );
HXDLIN( 720)		Float v0_dot_t25 = (v0_dot_t23 + (v0_dot_t24 * ( (Float)(_hx_array_unsafe_get(world_t2,2)) )));
HXLINE( 722)		Float Dt1q1 = ((Float)0.0);
HXLINE( 723)		int n = 0;
HXLINE( 725)		int naf = this->adjacentFaces->__get(i).StaticCast< ::Array< int > >()->length;
HXLINE( 727)		{
HXLINE( 727)			int _g = 0;
HXDLIN( 727)			int _g1 = naf;
HXDLIN( 727)			while((_g < _g1)){
HXLINE( 727)				_g = (_g + 1);
HXDLIN( 727)				int j = (_g - 1);
HXLINE( 730)				int f = this->adjacentFaces->__get(i).StaticCast< ::Array< int > >()->__get(j);
HXLINE( 731)				::Array< int > this1 = this->faces->__get(f).StaticCast< ::Array< int > >();
HXDLIN( 731)				int ind;
HXDLIN( 731)				if ((( (int)(_hx_array_unsafe_get(this1,0)) ) == i)) {
HXLINE( 731)					ind = 0;
            				}
            				else {
HXLINE( 731)					if ((( (int)(_hx_array_unsafe_get(this1,1)) ) == i)) {
HXLINE( 731)						ind = 1;
            					}
            					else {
HXLINE( 731)						if ((( (int)(_hx_array_unsafe_get(this1,2)) ) == i)) {
HXLINE( 731)							ind = 2;
            						}
            						else {
HXLINE( 731)							ind = -1;
            						}
            					}
            				}
HXLINE( 732)				int i1;
HXDLIN( 732)				if ((ind < 2)) {
HXLINE( 732)					i1 = (ind + 1);
            				}
            				else {
HXLINE( 732)					i1 = (ind - 2);
            				}
HXDLIN( 732)				int i11 = ( (int)(_hx_array_unsafe_get(this->faces->__get(f).StaticCast< ::Array< int > >(),i1)) );
HXLINE( 733)				int i2;
HXDLIN( 733)				if ((ind > 0)) {
HXLINE( 733)					i2 = (ind - 1);
            				}
            				else {
HXLINE( 733)					i2 = (ind + 2);
            				}
HXDLIN( 733)				int i21 = ( (int)(_hx_array_unsafe_get(this->faces->__get(f).StaticCast< ::Array< int > >(),i2)) );
HXLINE( 734)				::Array< Float > v1 = this->vertices->__get(i11).StaticCast< ::Array< Float > >();
HXLINE( 735)				::Array< Float > v2 = this->vertices->__get(i21).StaticCast< ::Array< Float > >();
HXLINE( 740)				Float v1_dot_t2 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 740)				Float v1_dot_t21 = (v1_dot_t2 * ( (Float)(_hx_array_unsafe_get(world_t2,0)) ));
HXDLIN( 740)				Float v1_dot_t22 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 740)				Float v1_dot_t23 = (v1_dot_t21 + (v1_dot_t22 * ( (Float)(_hx_array_unsafe_get(world_t2,1)) )));
HXDLIN( 740)				Float v1_dot_t24 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 740)				Float v1_dot_t25 = (v1_dot_t23 + (v1_dot_t24 * ( (Float)(_hx_array_unsafe_get(world_t2,2)) )));
HXLINE( 741)				Float v2_dot_t2 = ( (Float)(_hx_array_unsafe_get(v2,0)) );
HXDLIN( 741)				Float v2_dot_t21 = (v2_dot_t2 * ( (Float)(_hx_array_unsafe_get(world_t2,0)) ));
HXDLIN( 741)				Float v2_dot_t22 = ( (Float)(_hx_array_unsafe_get(v2,1)) );
HXDLIN( 741)				Float v2_dot_t23 = (v2_dot_t21 + (v2_dot_t22 * ( (Float)(_hx_array_unsafe_get(world_t2,1)) )));
HXDLIN( 741)				Float v2_dot_t24 = ( (Float)(_hx_array_unsafe_get(v2,2)) );
HXDLIN( 741)				Float v2_dot_t25 = (v2_dot_t23 + (v2_dot_t24 * ( (Float)(_hx_array_unsafe_get(world_t2,2)) )));
HXLINE( 742)				Float w1 = ((v2_dot_t25 - v0_dot_t25) / (v2_dot_t25 - v1_dot_t25));
HXLINE( 747)				bool _hx_tmp;
HXDLIN( 747)				if (!((w1 < ((Float)0.0)))) {
HXLINE( 747)					_hx_tmp = (w1 >= ((Float)1.0));
            				}
            				else {
HXLINE( 747)					_hx_tmp = true;
            				}
HXDLIN( 747)				if (_hx_tmp) {
HXLINE( 748)					continue;
            				}
HXLINE( 751)				Float w2 = (((Float)1.0) - w1);
HXLINE( 752)				Float _x = (( (Float)(_hx_array_unsafe_get(v1,0)) ) * w1);
HXDLIN( 752)				Float _y = (( (Float)(_hx_array_unsafe_get(v1,1)) ) * w1);
HXDLIN( 752)				Float _z = (( (Float)(_hx_array_unsafe_get(v1,2)) ) * w1);
HXDLIN( 752)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 752)				::Array< Float > this3 = this2;
HXDLIN( 752)				this3->__unsafe_set(0,_x);
HXDLIN( 752)				this3->__unsafe_set(1,_y);
HXDLIN( 752)				this3->__unsafe_set(2,_z);
HXDLIN( 752)				::Array< Float > this4 = this3;
HXDLIN( 752)				Float _x1 = (( (Float)(_hx_array_unsafe_get(v2,0)) ) * w2);
HXDLIN( 752)				Float _y1 = (( (Float)(_hx_array_unsafe_get(v2,1)) ) * w2);
HXDLIN( 752)				Float _z1 = (( (Float)(_hx_array_unsafe_get(v2,2)) ) * w2);
HXDLIN( 752)				::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 752)				::Array< Float > this6 = this5;
HXDLIN( 752)				this6->__unsafe_set(0,_x1);
HXDLIN( 752)				this6->__unsafe_set(1,_y1);
HXDLIN( 752)				this6->__unsafe_set(2,_z1);
HXDLIN( 752)				::Array< Float > rhs = this6;
HXDLIN( 752)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 752)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 752)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 752)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 752)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 752)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 752)				::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 752)				::Array< Float > this8 = this7;
HXDLIN( 752)				this8->__unsafe_set(0,_x3);
HXDLIN( 752)				this8->__unsafe_set(1,_y3);
HXDLIN( 752)				this8->__unsafe_set(2,_z3);
HXDLIN( 752)				::Array< Float > p = this8;
HXLINE( 755)				Float interp_viewdep_curv = (w1 * ( (Float)(_hx_array_unsafe_get(t1q1->__get(i11).StaticCast< ::Array< Float > >(),2)) ));
HXDLIN( 755)				Float interp_viewdep_curv1 = (interp_viewdep_curv + (w2 * ( (Float)(_hx_array_unsafe_get(t1q1->__get(i21).StaticCast< ::Array< Float > >(),2)) )));
HXLINE( 758)				Float _x4 = ( (Float)(_hx_array_unsafe_get(p,0)) );
HXDLIN( 758)				Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(v0,0)) ));
HXDLIN( 758)				Float _y4 = ( (Float)(_hx_array_unsafe_get(p,1)) );
HXDLIN( 758)				Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(v0,1)) ));
HXDLIN( 758)				Float _z4 = ( (Float)(_hx_array_unsafe_get(p,2)) );
HXDLIN( 758)				Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(v0,2)) ));
HXDLIN( 758)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN( 758)				::Array< Float > this10 = this9;
HXDLIN( 758)				this10->__unsafe_set(0,_x5);
HXDLIN( 758)				this10->__unsafe_set(1,_y5);
HXDLIN( 758)				this10->__unsafe_set(2,_z5);
HXDLIN( 758)				::Array< Float > v11 = this10;
HXDLIN( 758)				Float proj_dist = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 758)				Float proj_dist1 = (proj_dist * ( (Float)(_hx_array_unsafe_get(world_t1,0)) ));
HXDLIN( 758)				Float proj_dist2 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 758)				Float proj_dist3 = (proj_dist1 + (proj_dist2 * ( (Float)(_hx_array_unsafe_get(world_t1,1)) )));
HXDLIN( 758)				Float proj_dist4 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 758)				Float proj_dist5 = (proj_dist3 + (proj_dist4 * ( (Float)(_hx_array_unsafe_get(world_t1,2)) )));
HXLINE( 759)				proj_dist5 = (proj_dist5 * ::Math_obj::abs(ndotv));
HXLINE( 760)				Dt1q1 = (Dt1q1 + ((interp_viewdep_curv1 - this_viewdep_curv) / proj_dist5));
HXLINE( 761)				n = (n + 1);
HXLINE( 765)				if ((n == 2)) {
HXLINE( 766)					Dt1q1 = (Dt1q1 * ((Float)0.5));
HXLINE( 767)					return Dt1q1;
            				}
            			}
            		}
HXLINE( 770)		return Dt1q1;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mesh_obj,computeVertDt1q1,return )

 ::apparentridges::Ridge Mesh_obj::segmentApparentRidge(int v0,int v1,int v2,Float emax0,Float emax1,Float emax2,Float kmax0,Float kmax1,Float kmax2,::Array< Float > tmax0,::Array< Float > tmax1,::Array< Float > tmax2,Float thresh,bool to_center,bool do_test){
            	HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_783_segmentApparentRidge)
HXLINE( 787)		Float w10 = (::Math_obj::abs(emax0) / (::Math_obj::abs(emax0) + ::Math_obj::abs(emax1)));
HXLINE( 788)		Float w01 = (((Float)1.0) - w10);
HXLINE( 789)		::Array< Float > this1 = this->vertices->__get(v0).StaticCast< ::Array< Float > >();
HXDLIN( 789)		Float _x = (( (Float)(_hx_array_unsafe_get(this1,0)) ) * w01);
HXDLIN( 789)		Float _y = (( (Float)(_hx_array_unsafe_get(this1,1)) ) * w01);
HXDLIN( 789)		Float _z = (( (Float)(_hx_array_unsafe_get(this1,2)) ) * w01);
HXDLIN( 789)		::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 789)		::Array< Float > this3 = this2;
HXDLIN( 789)		this3->__unsafe_set(0,_x);
HXDLIN( 789)		this3->__unsafe_set(1,_y);
HXDLIN( 789)		this3->__unsafe_set(2,_z);
HXDLIN( 789)		::Array< Float > this4 = this3;
HXDLIN( 789)		::Array< Float > this5 = this->vertices->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 789)		Float _x1 = (( (Float)(_hx_array_unsafe_get(this5,0)) ) * w10);
HXDLIN( 789)		Float _y1 = (( (Float)(_hx_array_unsafe_get(this5,1)) ) * w10);
HXDLIN( 789)		Float _z1 = (( (Float)(_hx_array_unsafe_get(this5,2)) ) * w10);
HXDLIN( 789)		::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 789)		::Array< Float > this7 = this6;
HXDLIN( 789)		this7->__unsafe_set(0,_x1);
HXDLIN( 789)		this7->__unsafe_set(1,_y1);
HXDLIN( 789)		this7->__unsafe_set(2,_z1);
HXDLIN( 789)		::Array< Float > rhs = this7;
HXDLIN( 789)		Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 789)		Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 789)		Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 789)		Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 789)		Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 789)		Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 789)		::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 789)		::Array< Float > this9 = this8;
HXDLIN( 789)		this9->__unsafe_set(0,_x3);
HXDLIN( 789)		this9->__unsafe_set(1,_y3);
HXDLIN( 789)		this9->__unsafe_set(2,_z3);
HXDLIN( 789)		::Array< Float > p01 = this9;
HXLINE( 790)		Float k01 = ::Math_obj::abs(((w01 * kmax0) + (w10 * kmax1)));
HXLINE( 792)		::Array< Float > p12;
HXLINE( 793)		Float k12;
HXLINE( 794)		if (to_center) {
HXLINE( 796)			::Array< Float > this1 = this->vertices->__get(v0).StaticCast< ::Array< Float > >();
HXDLIN( 796)			::Array< Float > rhs = this->vertices->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 796)			Float _x = ( (Float)(_hx_array_unsafe_get(this1,0)) );
HXDLIN( 796)			Float _x1 = (_x + ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 796)			Float _y = ( (Float)(_hx_array_unsafe_get(this1,1)) );
HXDLIN( 796)			Float _y1 = (_y + ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 796)			Float _z = ( (Float)(_hx_array_unsafe_get(this1,2)) );
HXDLIN( 796)			Float _z1 = (_z + ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 796)			::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 796)			::Array< Float > this3 = this2;
HXDLIN( 796)			this3->__unsafe_set(0,_x1);
HXDLIN( 796)			this3->__unsafe_set(1,_y1);
HXDLIN( 796)			this3->__unsafe_set(2,_z1);
HXDLIN( 796)			::Array< Float > this4 = this3;
HXDLIN( 796)			::Array< Float > rhs1 = this->vertices->__get(v2).StaticCast< ::Array< Float > >();
HXDLIN( 796)			Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 796)			Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs1,0)) ));
HXDLIN( 796)			Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 796)			Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs1,1)) ));
HXDLIN( 796)			Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 796)			Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs1,2)) ));
HXDLIN( 796)			::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 796)			::Array< Float > this6 = this5;
HXDLIN( 796)			this6->__unsafe_set(0,_x3);
HXDLIN( 796)			this6->__unsafe_set(1,_y3);
HXDLIN( 796)			this6->__unsafe_set(2,_z3);
HXDLIN( 796)			::Array< Float > this7 = this6;
HXDLIN( 796)			Float _x4 = (( (Float)(_hx_array_unsafe_get(this7,0)) ) * ((Float)0.333333333333333315));
HXDLIN( 796)			Float _y4 = (( (Float)(_hx_array_unsafe_get(this7,1)) ) * ((Float)0.333333333333333315));
HXDLIN( 796)			Float _z4 = (( (Float)(_hx_array_unsafe_get(this7,2)) ) * ((Float)0.333333333333333315));
HXDLIN( 796)			::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 796)			::Array< Float > this9 = this8;
HXDLIN( 796)			this9->__unsafe_set(0,_x4);
HXDLIN( 796)			this9->__unsafe_set(1,_y4);
HXDLIN( 796)			this9->__unsafe_set(2,_z4);
HXDLIN( 796)			p12 = this9;
HXLINE( 799)			k12 = (::Math_obj::abs(((kmax0 + kmax1) + kmax2)) / ((Float)3.0));
            		}
            		else {
HXLINE( 802)			Float w21 = (::Math_obj::abs(emax1) / (::Math_obj::abs(emax1) + ::Math_obj::abs(emax2)));
HXLINE( 803)			Float w12 = (((Float)1.0) - w21);
HXLINE( 804)			::Array< Float > this1 = this->vertices->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 804)			Float _x = (( (Float)(_hx_array_unsafe_get(this1,0)) ) * w12);
HXDLIN( 804)			Float _y = (( (Float)(_hx_array_unsafe_get(this1,1)) ) * w12);
HXDLIN( 804)			Float _z = (( (Float)(_hx_array_unsafe_get(this1,2)) ) * w12);
HXDLIN( 804)			::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 804)			::Array< Float > this3 = this2;
HXDLIN( 804)			this3->__unsafe_set(0,_x);
HXDLIN( 804)			this3->__unsafe_set(1,_y);
HXDLIN( 804)			this3->__unsafe_set(2,_z);
HXDLIN( 804)			::Array< Float > this4 = this3;
HXDLIN( 804)			::Array< Float > this5 = this->vertices->__get(v2).StaticCast< ::Array< Float > >();
HXDLIN( 804)			Float _x1 = (( (Float)(_hx_array_unsafe_get(this5,0)) ) * w21);
HXDLIN( 804)			Float _y1 = (( (Float)(_hx_array_unsafe_get(this5,1)) ) * w21);
HXDLIN( 804)			Float _z1 = (( (Float)(_hx_array_unsafe_get(this5,2)) ) * w21);
HXDLIN( 804)			::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 804)			::Array< Float > this7 = this6;
HXDLIN( 804)			this7->__unsafe_set(0,_x1);
HXDLIN( 804)			this7->__unsafe_set(1,_y1);
HXDLIN( 804)			this7->__unsafe_set(2,_z1);
HXDLIN( 804)			::Array< Float > rhs = this7;
HXDLIN( 804)			Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 804)			Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 804)			Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 804)			Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 804)			Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 804)			Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 804)			::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 804)			::Array< Float > this9 = this8;
HXDLIN( 804)			this9->__unsafe_set(0,_x3);
HXDLIN( 804)			this9->__unsafe_set(1,_y3);
HXDLIN( 804)			this9->__unsafe_set(2,_z3);
HXDLIN( 804)			p12 = this9;
HXLINE( 805)			k12 = ::Math_obj::abs(((w12 * kmax1) + (w21 * kmax2)));
            		}
HXLINE( 808)		k01 = (k01 - thresh);
HXLINE( 809)		if ((k01 < ((Float)0.0))) {
HXLINE( 810)			k01 = ((Float)0.0);
            		}
HXLINE( 811)		k12 = (k12 - thresh);
HXLINE( 812)		if ((k12 < ((Float)0.0))) {
HXLINE( 813)			k12 = ((Float)0.0);
            		}
HXLINE( 816)		bool _hx_tmp;
HXDLIN( 816)		if ((k01 == ((Float)0.0))) {
HXLINE( 816)			_hx_tmp = (k12 == ((Float)0.0));
            		}
            		else {
HXLINE( 816)			_hx_tmp = false;
            		}
HXDLIN( 816)		if (_hx_tmp) {
HXLINE( 817)			return null();
            		}
HXLINE( 820)		if (do_test) {
HXLINE( 823)			::Array< Float > v01 = this->vertices->__get(v0).StaticCast< ::Array< Float > >();
HXDLIN( 823)			::Array< Float > v11 = this->vertices->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 823)			::Array< Float > v21 = this->vertices->__get(v2).StaticCast< ::Array< Float > >();
HXDLIN( 823)			Float _x = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 823)			Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(v01,0)) ));
HXDLIN( 823)			Float _y = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 823)			Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(v01,1)) ));
HXDLIN( 823)			Float _z = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 823)			Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(v01,2)) ));
HXDLIN( 823)			::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 823)			::Array< Float > this2 = this1;
HXDLIN( 823)			this2->__unsafe_set(0,_x1);
HXDLIN( 823)			this2->__unsafe_set(1,_y1);
HXDLIN( 823)			this2->__unsafe_set(2,_z1);
HXDLIN( 823)			::Array< Float > v12 = this2;
HXDLIN( 823)			Float _x2 = ( (Float)(_hx_array_unsafe_get(v21,0)) );
HXDLIN( 823)			Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(v01,0)) ));
HXDLIN( 823)			Float _y2 = ( (Float)(_hx_array_unsafe_get(v21,1)) );
HXDLIN( 823)			Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(v01,1)) ));
HXDLIN( 823)			Float _z2 = ( (Float)(_hx_array_unsafe_get(v21,2)) );
HXDLIN( 823)			Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(v01,2)) ));
HXDLIN( 823)			::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 823)			::Array< Float > this4 = this3;
HXDLIN( 823)			this4->__unsafe_set(0,_x3);
HXDLIN( 823)			this4->__unsafe_set(1,_y3);
HXDLIN( 823)			this4->__unsafe_set(2,_z3);
HXDLIN( 823)			::Array< Float > v22 = this4;
HXDLIN( 823)			Float _x4 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN( 823)			Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(v22,2)) ));
HXDLIN( 823)			Float _x6 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN( 823)			Float _x7 = (_x5 - (_x6 * ( (Float)(_hx_array_unsafe_get(v22,1)) )));
HXDLIN( 823)			Float _y4 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN( 823)			Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(v22,0)) ));
HXDLIN( 823)			Float _y6 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN( 823)			Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(v22,2)) )));
HXDLIN( 823)			Float _z4 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN( 823)			Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(v22,1)) ));
HXDLIN( 823)			Float _z6 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN( 823)			Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(v22,0)) )));
HXDLIN( 823)			::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 823)			::Array< Float > this6 = this5;
HXDLIN( 823)			this6->__unsafe_set(0,_x7);
HXDLIN( 823)			this6->__unsafe_set(1,_y7);
HXDLIN( 823)			this6->__unsafe_set(2,_z7);
HXDLIN( 823)			::Array< Float > this7 = this6;
HXDLIN( 823)			Float _x8 = (( (Float)(_hx_array_unsafe_get(this7,0)) ) * ((Float)0.5));
HXDLIN( 823)			Float _y8 = (( (Float)(_hx_array_unsafe_get(this7,1)) ) * ((Float)0.5));
HXDLIN( 823)			Float _z8 = (( (Float)(_hx_array_unsafe_get(this7,2)) ) * ((Float)0.5));
HXDLIN( 823)			::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 823)			::Array< Float > this9 = this8;
HXDLIN( 823)			this9->__unsafe_set(0,_x8);
HXDLIN( 823)			this9->__unsafe_set(1,_y8);
HXDLIN( 823)			this9->__unsafe_set(2,_z8);
HXLINE( 822)			::Array< Float > v13 = this9;
HXLINE( 824)			Float _x9 = ( (Float)(_hx_array_unsafe_get(p01,0)) );
HXDLIN( 824)			Float _x10 = (_x9 - ( (Float)(_hx_array_unsafe_get(p12,0)) ));
HXDLIN( 824)			Float _y9 = ( (Float)(_hx_array_unsafe_get(p01,1)) );
HXDLIN( 824)			Float _y10 = (_y9 - ( (Float)(_hx_array_unsafe_get(p12,1)) ));
HXDLIN( 824)			Float _z9 = ( (Float)(_hx_array_unsafe_get(p01,2)) );
HXDLIN( 824)			Float _z10 = (_z9 - ( (Float)(_hx_array_unsafe_get(p12,2)) ));
HXDLIN( 824)			::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN( 824)			::Array< Float > this11 = this10;
HXDLIN( 824)			this11->__unsafe_set(0,_x10);
HXDLIN( 824)			this11->__unsafe_set(1,_y10);
HXDLIN( 824)			this11->__unsafe_set(2,_z10);
HXLINE( 822)			::Array< Float > v23 = this11;
HXDLIN( 822)			Float _x11 = ( (Float)(_hx_array_unsafe_get(v13,1)) );
HXDLIN( 822)			Float _x12 = (_x11 * ( (Float)(_hx_array_unsafe_get(v23,2)) ));
HXDLIN( 822)			Float _x13 = ( (Float)(_hx_array_unsafe_get(v13,2)) );
HXDLIN( 822)			Float _x14 = (_x12 - (_x13 * ( (Float)(_hx_array_unsafe_get(v23,1)) )));
HXDLIN( 822)			Float _y11 = ( (Float)(_hx_array_unsafe_get(v13,2)) );
HXDLIN( 822)			Float _y12 = (_y11 * ( (Float)(_hx_array_unsafe_get(v23,0)) ));
HXDLIN( 822)			Float _y13 = ( (Float)(_hx_array_unsafe_get(v13,0)) );
HXDLIN( 822)			Float _y14 = (_y12 - (_y13 * ( (Float)(_hx_array_unsafe_get(v23,2)) )));
HXDLIN( 822)			Float _z11 = ( (Float)(_hx_array_unsafe_get(v13,0)) );
HXDLIN( 822)			Float _z12 = (_z11 * ( (Float)(_hx_array_unsafe_get(v23,1)) ));
HXDLIN( 822)			Float _z13 = ( (Float)(_hx_array_unsafe_get(v13,1)) );
HXDLIN( 822)			Float _z14 = (_z12 - (_z13 * ( (Float)(_hx_array_unsafe_get(v23,0)) )));
HXDLIN( 822)			::Array< Float > this12 = ::Array_obj< Float >::__new(3);
HXDLIN( 822)			::Array< Float > this13 = this12;
HXDLIN( 822)			this13->__unsafe_set(0,_x14);
HXDLIN( 822)			this13->__unsafe_set(1,_y14);
HXDLIN( 822)			this13->__unsafe_set(2,_z14);
HXDLIN( 822)			::Array< Float > perp = this13;
HXLINE( 828)			bool _hx_tmp;
HXDLIN( 828)			bool _hx_tmp1;
HXDLIN( 828)			Float _hx_tmp2 = ( (Float)(_hx_array_unsafe_get(tmax0,0)) );
HXDLIN( 828)			Float _hx_tmp3 = (_hx_tmp2 * ( (Float)(_hx_array_unsafe_get(perp,0)) ));
HXDLIN( 828)			Float _hx_tmp4 = ( (Float)(_hx_array_unsafe_get(tmax0,1)) );
HXDLIN( 828)			Float _hx_tmp5 = (_hx_tmp3 + (_hx_tmp4 * ( (Float)(_hx_array_unsafe_get(perp,1)) )));
HXDLIN( 828)			Float _hx_tmp6 = ( (Float)(_hx_array_unsafe_get(tmax0,2)) );
HXDLIN( 828)			if (!(((_hx_tmp5 + (_hx_tmp6 * ( (Float)(_hx_array_unsafe_get(perp,2)) ))) <= ((Float)0.0)))) {
HXLINE( 829)				Float _hx_tmp = ( (Float)(_hx_array_unsafe_get(tmax1,0)) );
HXDLIN( 829)				Float _hx_tmp2 = (_hx_tmp * ( (Float)(_hx_array_unsafe_get(perp,0)) ));
HXDLIN( 829)				Float _hx_tmp3 = ( (Float)(_hx_array_unsafe_get(tmax1,1)) );
HXDLIN( 829)				Float _hx_tmp4 = (_hx_tmp2 + (_hx_tmp3 * ( (Float)(_hx_array_unsafe_get(perp,1)) )));
HXDLIN( 829)				Float _hx_tmp5 = ( (Float)(_hx_array_unsafe_get(tmax1,2)) );
HXLINE( 828)				_hx_tmp1 = ((_hx_tmp4 + (_hx_tmp5 * ( (Float)(_hx_array_unsafe_get(perp,2)) ))) >= ((Float)0.0));
            			}
            			else {
HXLINE( 828)				_hx_tmp1 = true;
            			}
HXDLIN( 828)			if (!(_hx_tmp1)) {
HXLINE( 830)				Float _hx_tmp1 = ( (Float)(_hx_array_unsafe_get(tmax2,0)) );
HXDLIN( 830)				Float _hx_tmp2 = (_hx_tmp1 * ( (Float)(_hx_array_unsafe_get(perp,0)) ));
HXDLIN( 830)				Float _hx_tmp3 = ( (Float)(_hx_array_unsafe_get(tmax2,1)) );
HXDLIN( 830)				Float _hx_tmp4 = (_hx_tmp2 + (_hx_tmp3 * ( (Float)(_hx_array_unsafe_get(perp,1)) )));
HXDLIN( 830)				Float _hx_tmp5 = ( (Float)(_hx_array_unsafe_get(tmax2,2)) );
HXLINE( 828)				_hx_tmp = ((_hx_tmp4 + (_hx_tmp5 * ( (Float)(_hx_array_unsafe_get(perp,2)) ))) <= ((Float)0.0));
            			}
            			else {
HXLINE( 828)				_hx_tmp = true;
            			}
HXDLIN( 828)			if (_hx_tmp) {
HXLINE( 831)				return null();
            			}
            		}
HXLINE( 834)		k01 = (k01 / (k01 + thresh));
HXLINE( 835)		k12 = (k12 / (k12 + thresh));
HXLINE( 836)		return  ::apparentridges::Ridge_obj::__alloc( HX_CTX ,p01,k01,p12,k12);
            	}


HX_DEFINE_DYNAMIC_FUNC15(Mesh_obj,segmentApparentRidge,return )

::Array< ::Dynamic> Mesh_obj::facesApparentRidges(::Array< Float > ndotv,::Array< ::Dynamic> t1q1,::Array< Float > Dt1q1,bool do_bfcull,bool do_test,Float thresh){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_844_facesApparentRidges)
HXLINE( 845)		::Array< ::Dynamic> ridges = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 846)		{
HXLINE( 846)			int _g = 0;
HXDLIN( 846)			::Array< ::Dynamic> _g1 = this->faces;
HXDLIN( 846)			while((_g < _g1->length)){
HXLINE( 846)				::Array< int > f = _g1->__get(_g).StaticCast< ::Array< int > >();
HXDLIN( 846)				_g = (_g + 1);
HXLINE( 848)				int v0 = ( (int)(_hx_array_unsafe_get(f,0)) );
HXLINE( 849)				int v1 = ( (int)(_hx_array_unsafe_get(f,1)) );
HXLINE( 850)				int v2 = ( (int)(_hx_array_unsafe_get(f,2)) );
HXLINE( 854)				bool _hx_tmp;
HXDLIN( 854)				bool _hx_tmp1;
HXDLIN( 854)				bool _hx_tmp2;
HXDLIN( 854)				if (do_bfcull) {
HXLINE( 854)					_hx_tmp2 = (ndotv->__get(v0) <= 0);
            				}
            				else {
HXLINE( 854)					_hx_tmp2 = false;
            				}
HXDLIN( 854)				if (_hx_tmp2) {
HXLINE( 854)					_hx_tmp1 = (ndotv->__get(v1) <= 0);
            				}
            				else {
HXLINE( 854)					_hx_tmp1 = false;
            				}
HXDLIN( 854)				if (_hx_tmp1) {
HXLINE( 854)					_hx_tmp = (ndotv->__get(v2) <= 0);
            				}
            				else {
HXLINE( 854)					_hx_tmp = false;
            				}
HXDLIN( 854)				if (_hx_tmp) {
HXLINE( 856)					continue;
            				}
HXLINE( 860)				Float kmax0 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v0).StaticCast< ::Array< Float > >(),2)) );
HXLINE( 861)				Float kmax1 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v1).StaticCast< ::Array< Float > >(),2)) );
HXLINE( 862)				Float kmax2 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v2).StaticCast< ::Array< Float > >(),2)) );
HXLINE( 863)				bool _hx_tmp3;
HXDLIN( 863)				bool _hx_tmp4;
HXDLIN( 863)				if ((kmax0 <= thresh)) {
HXLINE( 863)					_hx_tmp4 = (kmax1 <= thresh);
            				}
            				else {
HXLINE( 863)					_hx_tmp4 = false;
            				}
HXDLIN( 863)				if (_hx_tmp4) {
HXLINE( 863)					_hx_tmp3 = (kmax2 <= thresh);
            				}
            				else {
HXLINE( 863)					_hx_tmp3 = false;
            				}
HXDLIN( 863)				if (_hx_tmp3) {
HXLINE( 864)					continue;
            				}
HXLINE( 869)				Float emax0 = Dt1q1->__get(v0);
HXLINE( 870)				Float emax1 = Dt1q1->__get(v1);
HXLINE( 871)				Float emax2 = Dt1q1->__get(v2);
HXLINE( 872)				::Array< Float > this1 = this->pdir1->__get(v0).StaticCast< ::Array< Float > >();
HXDLIN( 872)				Float rhs = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v0).StaticCast< ::Array< Float > >(),0)) );
HXDLIN( 872)				Float _x = (( (Float)(_hx_array_unsafe_get(this1,0)) ) * rhs);
HXDLIN( 872)				Float _y = (( (Float)(_hx_array_unsafe_get(this1,1)) ) * rhs);
HXDLIN( 872)				Float _z = (( (Float)(_hx_array_unsafe_get(this1,2)) ) * rhs);
HXDLIN( 872)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN( 872)				::Array< Float > this3 = this2;
HXDLIN( 872)				this3->__unsafe_set(0,_x);
HXDLIN( 872)				this3->__unsafe_set(1,_y);
HXDLIN( 872)				this3->__unsafe_set(2,_z);
HXDLIN( 872)				::Array< Float > this4 = this3;
HXDLIN( 872)				::Array< Float > this5 = this->pdir2->__get(v0).StaticCast< ::Array< Float > >();
HXDLIN( 872)				Float rhs1 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v0).StaticCast< ::Array< Float > >(),1)) );
HXDLIN( 872)				Float _x1 = (( (Float)(_hx_array_unsafe_get(this5,0)) ) * rhs1);
HXDLIN( 872)				Float _y1 = (( (Float)(_hx_array_unsafe_get(this5,1)) ) * rhs1);
HXDLIN( 872)				Float _z1 = (( (Float)(_hx_array_unsafe_get(this5,2)) ) * rhs1);
HXDLIN( 872)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 872)				::Array< Float > this7 = this6;
HXDLIN( 872)				this7->__unsafe_set(0,_x1);
HXDLIN( 872)				this7->__unsafe_set(1,_y1);
HXDLIN( 872)				this7->__unsafe_set(2,_z1);
HXDLIN( 872)				::Array< Float > rhs2 = this7;
HXDLIN( 872)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this4,0)) );
HXDLIN( 872)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN( 872)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this4,1)) );
HXDLIN( 872)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN( 872)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this4,2)) );
HXDLIN( 872)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN( 872)				::Array< Float > this8 = ::Array_obj< Float >::__new(3);
HXDLIN( 872)				::Array< Float > this9 = this8;
HXDLIN( 872)				this9->__unsafe_set(0,_x3);
HXDLIN( 872)				this9->__unsafe_set(1,_y3);
HXDLIN( 872)				this9->__unsafe_set(2,_z3);
HXDLIN( 872)				::Array< Float > world_t1_0 = this9;
HXLINE( 873)				::Array< Float > this10 = this->pdir1->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 873)				Float rhs3 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v1).StaticCast< ::Array< Float > >(),0)) );
HXDLIN( 873)				Float _x4 = (( (Float)(_hx_array_unsafe_get(this10,0)) ) * rhs3);
HXDLIN( 873)				Float _y4 = (( (Float)(_hx_array_unsafe_get(this10,1)) ) * rhs3);
HXDLIN( 873)				Float _z4 = (( (Float)(_hx_array_unsafe_get(this10,2)) ) * rhs3);
HXDLIN( 873)				::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN( 873)				::Array< Float > this12 = this11;
HXDLIN( 873)				this12->__unsafe_set(0,_x4);
HXDLIN( 873)				this12->__unsafe_set(1,_y4);
HXDLIN( 873)				this12->__unsafe_set(2,_z4);
HXDLIN( 873)				::Array< Float > this13 = this12;
HXDLIN( 873)				::Array< Float > this14 = this->pdir2->__get(v1).StaticCast< ::Array< Float > >();
HXDLIN( 873)				Float rhs4 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v1).StaticCast< ::Array< Float > >(),1)) );
HXDLIN( 873)				Float _x5 = (( (Float)(_hx_array_unsafe_get(this14,0)) ) * rhs4);
HXDLIN( 873)				Float _y5 = (( (Float)(_hx_array_unsafe_get(this14,1)) ) * rhs4);
HXDLIN( 873)				Float _z5 = (( (Float)(_hx_array_unsafe_get(this14,2)) ) * rhs4);
HXDLIN( 873)				::Array< Float > this15 = ::Array_obj< Float >::__new(3);
HXDLIN( 873)				::Array< Float > this16 = this15;
HXDLIN( 873)				this16->__unsafe_set(0,_x5);
HXDLIN( 873)				this16->__unsafe_set(1,_y5);
HXDLIN( 873)				this16->__unsafe_set(2,_z5);
HXDLIN( 873)				::Array< Float > rhs5 = this16;
HXDLIN( 873)				Float _x6 = ( (Float)(_hx_array_unsafe_get(this13,0)) );
HXDLIN( 873)				Float _x7 = (_x6 + ( (Float)(_hx_array_unsafe_get(rhs5,0)) ));
HXDLIN( 873)				Float _y6 = ( (Float)(_hx_array_unsafe_get(this13,1)) );
HXDLIN( 873)				Float _y7 = (_y6 + ( (Float)(_hx_array_unsafe_get(rhs5,1)) ));
HXDLIN( 873)				Float _z6 = ( (Float)(_hx_array_unsafe_get(this13,2)) );
HXDLIN( 873)				Float _z7 = (_z6 + ( (Float)(_hx_array_unsafe_get(rhs5,2)) ));
HXDLIN( 873)				::Array< Float > this17 = ::Array_obj< Float >::__new(3);
HXDLIN( 873)				::Array< Float > this18 = this17;
HXDLIN( 873)				this18->__unsafe_set(0,_x7);
HXDLIN( 873)				this18->__unsafe_set(1,_y7);
HXDLIN( 873)				this18->__unsafe_set(2,_z7);
HXDLIN( 873)				::Array< Float > world_t1_1 = this18;
HXLINE( 874)				::Array< Float > this19 = this->pdir1->__get(v2).StaticCast< ::Array< Float > >();
HXDLIN( 874)				Float rhs6 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v2).StaticCast< ::Array< Float > >(),0)) );
HXDLIN( 874)				Float _x8 = (( (Float)(_hx_array_unsafe_get(this19,0)) ) * rhs6);
HXDLIN( 874)				Float _y8 = (( (Float)(_hx_array_unsafe_get(this19,1)) ) * rhs6);
HXDLIN( 874)				Float _z8 = (( (Float)(_hx_array_unsafe_get(this19,2)) ) * rhs6);
HXDLIN( 874)				::Array< Float > this20 = ::Array_obj< Float >::__new(3);
HXDLIN( 874)				::Array< Float > this21 = this20;
HXDLIN( 874)				this21->__unsafe_set(0,_x8);
HXDLIN( 874)				this21->__unsafe_set(1,_y8);
HXDLIN( 874)				this21->__unsafe_set(2,_z8);
HXDLIN( 874)				::Array< Float > this22 = this21;
HXDLIN( 874)				::Array< Float > this23 = this->pdir2->__get(v2).StaticCast< ::Array< Float > >();
HXDLIN( 874)				Float rhs7 = ( (Float)(_hx_array_unsafe_get(t1q1->__get(v2).StaticCast< ::Array< Float > >(),1)) );
HXDLIN( 874)				Float _x9 = (( (Float)(_hx_array_unsafe_get(this23,0)) ) * rhs7);
HXDLIN( 874)				Float _y9 = (( (Float)(_hx_array_unsafe_get(this23,1)) ) * rhs7);
HXDLIN( 874)				Float _z9 = (( (Float)(_hx_array_unsafe_get(this23,2)) ) * rhs7);
HXDLIN( 874)				::Array< Float > this24 = ::Array_obj< Float >::__new(3);
HXDLIN( 874)				::Array< Float > this25 = this24;
HXDLIN( 874)				this25->__unsafe_set(0,_x9);
HXDLIN( 874)				this25->__unsafe_set(1,_y9);
HXDLIN( 874)				this25->__unsafe_set(2,_z9);
HXDLIN( 874)				::Array< Float > rhs8 = this25;
HXDLIN( 874)				Float _x10 = ( (Float)(_hx_array_unsafe_get(this22,0)) );
HXDLIN( 874)				Float _x11 = (_x10 + ( (Float)(_hx_array_unsafe_get(rhs8,0)) ));
HXDLIN( 874)				Float _y10 = ( (Float)(_hx_array_unsafe_get(this22,1)) );
HXDLIN( 874)				Float _y11 = (_y10 + ( (Float)(_hx_array_unsafe_get(rhs8,1)) ));
HXDLIN( 874)				Float _z10 = ( (Float)(_hx_array_unsafe_get(this22,2)) );
HXDLIN( 874)				Float _z11 = (_z10 + ( (Float)(_hx_array_unsafe_get(rhs8,2)) ));
HXDLIN( 874)				::Array< Float > this26 = ::Array_obj< Float >::__new(3);
HXDLIN( 874)				::Array< Float > this27 = this26;
HXDLIN( 874)				this27->__unsafe_set(0,_x11);
HXDLIN( 874)				this27->__unsafe_set(1,_y11);
HXDLIN( 874)				this27->__unsafe_set(2,_z11);
HXDLIN( 874)				::Array< Float > world_t1_2 = this27;
HXLINE( 876)				Float rhs9 = Dt1q1->__get(v0);
HXDLIN( 876)				Float _x12 = (( (Float)(_hx_array_unsafe_get(world_t1_0,0)) ) * rhs9);
HXDLIN( 876)				Float _y12 = (( (Float)(_hx_array_unsafe_get(world_t1_0,1)) ) * rhs9);
HXDLIN( 876)				Float _z12 = (( (Float)(_hx_array_unsafe_get(world_t1_0,2)) ) * rhs9);
HXDLIN( 876)				::Array< Float > this28 = ::Array_obj< Float >::__new(3);
HXDLIN( 876)				::Array< Float > this29 = this28;
HXDLIN( 876)				this29->__unsafe_set(0,_x12);
HXDLIN( 876)				this29->__unsafe_set(1,_y12);
HXDLIN( 876)				this29->__unsafe_set(2,_z12);
HXDLIN( 876)				::Array< Float > tmax0 = this29;
HXLINE( 877)				Float rhs10 = Dt1q1->__get(v1);
HXDLIN( 877)				Float _x13 = (( (Float)(_hx_array_unsafe_get(world_t1_1,0)) ) * rhs10);
HXDLIN( 877)				Float _y13 = (( (Float)(_hx_array_unsafe_get(world_t1_1,1)) ) * rhs10);
HXDLIN( 877)				Float _z13 = (( (Float)(_hx_array_unsafe_get(world_t1_1,2)) ) * rhs10);
HXDLIN( 877)				::Array< Float > this30 = ::Array_obj< Float >::__new(3);
HXDLIN( 877)				::Array< Float > this31 = this30;
HXDLIN( 877)				this31->__unsafe_set(0,_x13);
HXDLIN( 877)				this31->__unsafe_set(1,_y13);
HXDLIN( 877)				this31->__unsafe_set(2,_z13);
HXDLIN( 877)				::Array< Float > tmax1 = this31;
HXLINE( 878)				Float rhs11 = Dt1q1->__get(v2);
HXDLIN( 878)				Float _x14 = (( (Float)(_hx_array_unsafe_get(world_t1_2,0)) ) * rhs11);
HXDLIN( 878)				Float _y14 = (( (Float)(_hx_array_unsafe_get(world_t1_2,1)) ) * rhs11);
HXDLIN( 878)				Float _z14 = (( (Float)(_hx_array_unsafe_get(world_t1_2,2)) ) * rhs11);
HXDLIN( 878)				::Array< Float > this32 = ::Array_obj< Float >::__new(3);
HXDLIN( 878)				::Array< Float > this33 = this32;
HXDLIN( 878)				this33->__unsafe_set(0,_x14);
HXDLIN( 878)				this33->__unsafe_set(1,_y14);
HXDLIN( 878)				this33->__unsafe_set(2,_z14);
HXDLIN( 878)				::Array< Float > tmax2 = this33;
HXLINE( 882)				Float z01 = ( (Float)(_hx_array_unsafe_get(tmax0,0)) );
HXDLIN( 882)				Float z011 = (z01 * ( (Float)(_hx_array_unsafe_get(tmax1,0)) ));
HXDLIN( 882)				Float z012 = ( (Float)(_hx_array_unsafe_get(tmax0,1)) );
HXDLIN( 882)				Float z013 = (z011 + (z012 * ( (Float)(_hx_array_unsafe_get(tmax1,1)) )));
HXDLIN( 882)				Float z014 = ( (Float)(_hx_array_unsafe_get(tmax0,2)) );
HXDLIN( 882)				bool z015 = ((z013 + (z014 * ( (Float)(_hx_array_unsafe_get(tmax1,2)) ))) <= ((Float)0.0));
HXLINE( 883)				Float z12 = ( (Float)(_hx_array_unsafe_get(tmax1,0)) );
HXDLIN( 883)				Float z121 = (z12 * ( (Float)(_hx_array_unsafe_get(tmax2,0)) ));
HXDLIN( 883)				Float z122 = ( (Float)(_hx_array_unsafe_get(tmax1,1)) );
HXDLIN( 883)				Float z123 = (z121 + (z122 * ( (Float)(_hx_array_unsafe_get(tmax2,1)) )));
HXDLIN( 883)				Float z124 = ( (Float)(_hx_array_unsafe_get(tmax1,2)) );
HXDLIN( 883)				bool z125 = ((z123 + (z124 * ( (Float)(_hx_array_unsafe_get(tmax2,2)) ))) <= ((Float)0.0));
HXLINE( 884)				Float z20 = ( (Float)(_hx_array_unsafe_get(tmax2,0)) );
HXDLIN( 884)				Float z201 = (z20 * ( (Float)(_hx_array_unsafe_get(tmax0,0)) ));
HXDLIN( 884)				Float z202 = ( (Float)(_hx_array_unsafe_get(tmax2,1)) );
HXDLIN( 884)				Float z203 = (z201 + (z202 * ( (Float)(_hx_array_unsafe_get(tmax0,1)) )));
HXDLIN( 884)				Float z204 = ( (Float)(_hx_array_unsafe_get(tmax2,2)) );
HXDLIN( 884)				bool z205 = ((z203 + (z204 * ( (Float)(_hx_array_unsafe_get(tmax0,2)) ))) <= ((Float)0.0));
HXLINE( 886)				int _hx_tmp5;
HXDLIN( 886)				if (z015) {
HXLINE( 886)					_hx_tmp5 = 1;
            				}
            				else {
HXLINE( 886)					_hx_tmp5 = 0;
            				}
HXDLIN( 886)				int _hx_tmp6;
HXDLIN( 886)				if (z125) {
HXLINE( 886)					_hx_tmp6 = 1;
            				}
            				else {
HXLINE( 886)					_hx_tmp6 = 0;
            				}
HXDLIN( 886)				int _hx_tmp7;
HXDLIN( 886)				if (z205) {
HXLINE( 886)					_hx_tmp7 = 1;
            				}
            				else {
HXLINE( 886)					_hx_tmp7 = 0;
            				}
HXDLIN( 886)				if ((((_hx_tmp5 + _hx_tmp6) + _hx_tmp7) < 2)) {
HXLINE( 887)					continue;
            				}
HXLINE( 890)				if (!(z015)) {
HXLINE( 891)					 ::apparentridges::Ridge r = this->segmentApparentRidge(v1,v2,v0,emax1,emax2,emax0,kmax1,kmax2,kmax0,tmax1,tmax2,tmax0,thresh,false,do_test);
HXLINE( 896)					if (::hx::IsNotNull( r )) {
HXLINE( 896)						ridges->push(r);
            					}
            				}
            				else {
HXLINE( 897)					if (!(z125)) {
HXLINE( 898)						 ::apparentridges::Ridge r = this->segmentApparentRidge(v2,v0,v1,emax2,emax0,emax1,kmax2,kmax0,kmax1,tmax2,tmax0,tmax1,thresh,false,do_test);
HXLINE( 903)						if (::hx::IsNotNull( r )) {
HXLINE( 903)							ridges->push(r);
            						}
            					}
            					else {
HXLINE( 904)						if (!(z205)) {
HXLINE( 905)							 ::apparentridges::Ridge r = this->segmentApparentRidge(v0,v1,v2,emax0,emax1,emax2,kmax0,kmax1,kmax2,tmax0,tmax1,tmax2,thresh,false,do_test);
HXLINE( 910)							if (::hx::IsNotNull( r )) {
HXLINE( 910)								ridges->push(r);
            							}
            						}
            						else {
HXLINE( 913)							 ::apparentridges::Ridge r0 = this->segmentApparentRidge(v1,v2,v0,emax1,emax2,emax0,kmax1,kmax2,kmax0,tmax1,tmax2,tmax0,thresh,true,do_test);
HXLINE( 918)							 ::apparentridges::Ridge r1 = this->segmentApparentRidge(v2,v0,v1,emax2,emax0,emax1,kmax2,kmax0,kmax1,tmax2,tmax0,tmax1,thresh,true,do_test);
HXLINE( 923)							 ::apparentridges::Ridge r2 = this->segmentApparentRidge(v0,v1,v2,emax0,emax1,emax2,kmax0,kmax1,kmax2,tmax0,tmax1,tmax2,thresh,true,do_test);
HXLINE( 928)							if (::hx::IsNotNull( r0 )) {
HXLINE( 928)								ridges->push(r0);
            							}
HXLINE( 929)							if (::hx::IsNotNull( r1 )) {
HXLINE( 929)								ridges->push(r1);
            							}
HXLINE( 930)							if (::hx::IsNotNull( r2 )) {
HXLINE( 930)								ridges->push(r2);
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 933)		return ridges;
            	}


HX_DEFINE_DYNAMIC_FUNC6(Mesh_obj,facesApparentRidges,return )

::Array< ::Dynamic> Mesh_obj::apparentRidges(::Array< Float > eye,Float thresh){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_939_apparentRidges)
HXLINE( 940)		int nv = this->vertices->length;
HXLINE( 942)		{
HXLINE( 942)			int _g = 0;
HXDLIN( 942)			int _g1 = nv;
HXDLIN( 942)			while((_g < _g1)){
HXLINE( 942)				_g = (_g + 1);
HXDLIN( 942)				int i = (_g - 1);
HXLINE( 944)				::Array< Float > rhs = this->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 944)				Float _x = ( (Float)(_hx_array_unsafe_get(eye,0)) );
HXDLIN( 944)				Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 944)				Float _y = ( (Float)(_hx_array_unsafe_get(eye,1)) );
HXDLIN( 944)				Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 944)				Float _z = ( (Float)(_hx_array_unsafe_get(eye,2)) );
HXDLIN( 944)				Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 944)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 944)				::Array< Float > this2 = this1;
HXDLIN( 944)				this2->__unsafe_set(0,_x1);
HXDLIN( 944)				this2->__unsafe_set(1,_y1);
HXDLIN( 944)				this2->__unsafe_set(2,_z1);
HXDLIN( 944)				::Array< Float > viewdir = this2;
HXLINE( 945)				Float rlv = ( (Float)(_hx_array_unsafe_get(viewdir,0)) );
HXDLIN( 945)				Float rlv1 = (rlv * ( (Float)(_hx_array_unsafe_get(viewdir,0)) ));
HXDLIN( 945)				Float rlv2 = ( (Float)(_hx_array_unsafe_get(viewdir,1)) );
HXDLIN( 945)				Float rlv3 = (rlv1 + (rlv2 * ( (Float)(_hx_array_unsafe_get(viewdir,1)) )));
HXDLIN( 945)				Float rlv4 = ( (Float)(_hx_array_unsafe_get(viewdir,2)) );
HXDLIN( 945)				Float rlv5 = (((Float)1.0) / ::Math_obj::sqrt((rlv3 + (rlv4 * ( (Float)(_hx_array_unsafe_get(viewdir,2)) )))));
HXLINE( 946)				Float _x2 = (( (Float)(_hx_array_unsafe_get(viewdir,0)) ) * rlv5);
HXDLIN( 946)				Float _y2 = (( (Float)(_hx_array_unsafe_get(viewdir,1)) ) * rlv5);
HXDLIN( 946)				Float _z2 = (( (Float)(_hx_array_unsafe_get(viewdir,2)) ) * rlv5);
HXDLIN( 946)				::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 946)				::Array< Float > this4 = this3;
HXDLIN( 946)				this4->__unsafe_set(0,_x2);
HXDLIN( 946)				this4->__unsafe_set(1,_y2);
HXDLIN( 946)				this4->__unsafe_set(2,_z2);
HXDLIN( 946)				viewdir = this4;
HXLINE( 947)				::Array< Float > _hx_tmp = this->ndotv;
HXDLIN( 947)				::Array< Float > v2 = this->normals->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 947)				Float _hx_tmp1 = ( (Float)(_hx_array_unsafe_get(viewdir,0)) );
HXDLIN( 947)				Float _hx_tmp2 = (_hx_tmp1 * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN( 947)				Float _hx_tmp3 = ( (Float)(_hx_array_unsafe_get(viewdir,1)) );
HXDLIN( 947)				Float _hx_tmp4 = (_hx_tmp2 + (_hx_tmp3 * ( (Float)(_hx_array_unsafe_get(v2,1)) )));
HXDLIN( 947)				Float _hx_tmp5 = ( (Float)(_hx_array_unsafe_get(viewdir,2)) );
HXDLIN( 947)				_hx_tmp[i] = (_hx_tmp4 + (_hx_tmp5 * ( (Float)(_hx_array_unsafe_get(v2,2)) )));
HXLINE( 949)				::Array< Float > v21 = this->pdir1->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 949)				Float u = ( (Float)(_hx_array_unsafe_get(viewdir,0)) );
HXDLIN( 949)				Float u1 = (u * ( (Float)(_hx_array_unsafe_get(v21,0)) ));
HXDLIN( 949)				Float u2 = ( (Float)(_hx_array_unsafe_get(viewdir,1)) );
HXDLIN( 949)				Float u3 = (u1 + (u2 * ( (Float)(_hx_array_unsafe_get(v21,1)) )));
HXDLIN( 949)				Float u4 = ( (Float)(_hx_array_unsafe_get(viewdir,2)) );
HXDLIN( 949)				Float u5 = (u3 + (u4 * ( (Float)(_hx_array_unsafe_get(v21,2)) )));
HXLINE( 950)				Float u21 = (u5 * u5);
HXLINE( 951)				::Array< Float > v22 = this->pdir2->__get(i).StaticCast< ::Array< Float > >();
HXDLIN( 951)				Float v = ( (Float)(_hx_array_unsafe_get(viewdir,0)) );
HXDLIN( 951)				Float v1 = (v * ( (Float)(_hx_array_unsafe_get(v22,0)) ));
HXDLIN( 951)				Float v3 = ( (Float)(_hx_array_unsafe_get(viewdir,1)) );
HXDLIN( 951)				Float v4 = (v1 + (v3 * ( (Float)(_hx_array_unsafe_get(v22,1)) )));
HXDLIN( 951)				Float v5 = ( (Float)(_hx_array_unsafe_get(viewdir,2)) );
HXDLIN( 951)				Float v6 = (v4 + (v5 * ( (Float)(_hx_array_unsafe_get(v22,2)) )));
HXLINE( 952)				Float v23 = (v6 * v6);
HXLINE( 954)				Float csc2theta = (((Float)1.0) / (u21 + v23));
HXLINE( 955)				this->t1q1[i] = this->computeVertViewDepCurv(i,this->ndotv->__get(i),(u21 * csc2theta),((u5 * v6) * csc2theta),(v23 * csc2theta));
            			}
            		}
HXLINE( 959)		{
HXLINE( 959)			int _g2 = 0;
HXDLIN( 959)			int _g3 = nv;
HXDLIN( 959)			while((_g2 < _g3)){
HXLINE( 959)				_g2 = (_g2 + 1);
HXDLIN( 959)				int i = (_g2 - 1);
HXLINE( 960)				this->Dt1q1[i] = this->computeVertDt1q1(i,this->ndotv->__get(i),this->t1q1);
            			}
            		}
HXLINE( 964)		Float x = this->featureSize;
HXLINE( 962)		return this->facesApparentRidges(this->ndotv,this->t1q1,this->Dt1q1,false,true,(thresh / (x * x)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,apparentRidges,return )

void Mesh_obj::computeBVHTrivial(){
            	HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_968_computeBVHTrivial)
HXLINE( 969)		this->bvh =  ::apparentridges::BVHTree_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this),this->faces->length,null());
HXLINE( 970)		this->bvh->build();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeBVHTrivial,(void))

void Mesh_obj::computeBVH(){
            	HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_972_computeBVH)
HXLINE( 973)		this->bvh =  ::apparentridges::BVHTree_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this),null(),null());
HXLINE( 974)		this->bvh->build();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,computeBVH,(void))

bool Mesh_obj::visible(::Array< Float > eye,::Array< Float > p,::hx::Null< Float >  __o_tolerance){
            		HX_BEGIN_LOCAL_FUNC_S6(::hx::LocalFunc,_hx_Closure_0, ::apparentridges::BVHTree,bvh,::Array< Float >,r_o,::Array< ::Dynamic>,hitNode,Float,r_tmax,Float,r_tmin,::Array< Float >,r_d) HXARGC(1)
            		 ::apparentridges::RayHit _hx_run( ::apparentridges::BVHNode node){
            			HX_GC_STACKFRAME(&_hx_pos_0d00699988983bd6_986_visible)
HXLINE( 986)			bool _hx_tmp;
HXDLIN( 986)			if (::hx::IsNull( node->left )) {
HXLINE( 986)				_hx_tmp = ::hx::IsNull( node->right );
            			}
            			else {
HXLINE( 986)				_hx_tmp = false;
            			}
HXDLIN( 986)			if (_hx_tmp) {
HXLINE( 986)				Float tmin = ::Math_obj::POSITIVE_INFINITY;
HXDLIN( 986)				 ::apparentridges::RayHit closest = null();
HXDLIN( 986)				{
HXLINE( 986)					int _g = node->begin;
HXDLIN( 986)					int _g1 = node->end;
HXDLIN( 986)					while((_g < _g1)){
HXLINE( 986)						_g = (_g + 1);
HXDLIN( 986)						int i = (_g - 1);
HXDLIN( 986)						::Array< Float > p0 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN( 986)						::Array< Float > p1 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN( 986)						::Array< Float > p2 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN( 986)						Float _x = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN( 986)						Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN( 986)						Float _y = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN( 986)						Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN( 986)						Float _z = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN( 986)						Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN( 986)						::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)						::Array< Float > this2 = this1;
HXDLIN( 986)						this2->__unsafe_set(0,_x1);
HXDLIN( 986)						this2->__unsafe_set(1,_y1);
HXDLIN( 986)						this2->__unsafe_set(2,_z1);
HXDLIN( 986)						::Array< Float > e1 = this2;
HXDLIN( 986)						Float _x2 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN( 986)						Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN( 986)						Float _y2 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN( 986)						Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN( 986)						Float _z2 = ( (Float)(_hx_array_unsafe_get(p2,2)) );
HXDLIN( 986)						Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN( 986)						::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)						::Array< Float > this4 = this3;
HXDLIN( 986)						this4->__unsafe_set(0,_x3);
HXDLIN( 986)						this4->__unsafe_set(1,_y3);
HXDLIN( 986)						this4->__unsafe_set(2,_z3);
HXDLIN( 986)						::Array< Float > e2 = this4;
HXDLIN( 986)						::Array< Float > this5 = r_o;
HXDLIN( 986)						Float _x4 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN( 986)						Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN( 986)						Float _y4 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN( 986)						Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN( 986)						Float _z4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN( 986)						Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN( 986)						::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)						::Array< Float > this7 = this6;
HXDLIN( 986)						this7->__unsafe_set(0,_x5);
HXDLIN( 986)						this7->__unsafe_set(1,_y5);
HXDLIN( 986)						this7->__unsafe_set(2,_z5);
HXDLIN( 986)						::Array< Float > s = this7;
HXDLIN( 986)						::Array< Float > this8 = r_d;
HXDLIN( 986)						Float _x6 = (( (Float)(_hx_array_unsafe_get(this8,0)) ) * ((Float)-1.0));
HXDLIN( 986)						Float _y6 = (( (Float)(_hx_array_unsafe_get(this8,1)) ) * ((Float)-1.0));
HXDLIN( 986)						Float _z6 = (( (Float)(_hx_array_unsafe_get(this8,2)) ) * ((Float)-1.0));
HXDLIN( 986)						::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)						::Array< Float > this10 = this9;
HXDLIN( 986)						this10->__unsafe_set(0,_x6);
HXDLIN( 986)						this10->__unsafe_set(1,_y6);
HXDLIN( 986)						this10->__unsafe_set(2,_z6);
HXDLIN( 986)						::Array< Float > _d = this10;
HXDLIN( 986)						Float _x7 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)						Float _x8 = (_x7 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN( 986)						Float _x9 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)						Float _x10 = (_x8 - (_x9 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN( 986)						Float _y7 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)						Float _y8 = (_y7 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN( 986)						Float _y9 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)						Float _y10 = (_y8 - (_y9 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN( 986)						Float _z7 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)						Float _z8 = (_z7 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN( 986)						Float _z9 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)						Float _z10 = (_z8 - (_z9 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN( 986)						::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)						::Array< Float > this12 = this11;
HXDLIN( 986)						this12->__unsafe_set(0,_x10);
HXDLIN( 986)						this12->__unsafe_set(1,_y10);
HXDLIN( 986)						this12->__unsafe_set(2,_z10);
HXDLIN( 986)						::Array< Float > v1 = this12;
HXDLIN( 986)						Float denom = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 986)						Float denom1 = (denom * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN( 986)						Float denom2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 986)						Float denom3 = (denom1 + (denom2 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN( 986)						Float denom4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 986)						Float denom5 = (denom3 + (denom4 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN( 986)						 ::apparentridges::RayHit h;
HXDLIN( 986)						if ((denom5 == 0)) {
HXLINE( 986)							h = null();
            						}
            						else {
HXLINE( 986)							Float _x = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN( 986)							Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN( 986)							Float _x2 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN( 986)							Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN( 986)							Float _y = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN( 986)							Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN( 986)							Float _y2 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN( 986)							Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN( 986)							Float _z = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN( 986)							Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN( 986)							Float _z2 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN( 986)							Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN( 986)							::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)							::Array< Float > this2 = this1;
HXDLIN( 986)							this2->__unsafe_set(0,_x3);
HXDLIN( 986)							this2->__unsafe_set(1,_y3);
HXDLIN( 986)							this2->__unsafe_set(2,_z3);
HXDLIN( 986)							::Array< Float > v1 = this2;
HXDLIN( 986)							Float _x4 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN( 986)							Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN( 986)							Float _x6 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN( 986)							Float _x7 = (_x5 + (_x6 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN( 986)							Float _x8 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN( 986)							Float _x9 = (_x7 + (_x8 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN( 986)							Float _x10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)							Float _x11 = (_x10 * ( (Float)(_hx_array_unsafe_get(s,2)) ));
HXDLIN( 986)							Float _x12 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)							Float _x13 = (_x11 - (_x12 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN( 986)							Float _y4 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)							Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN( 986)							Float _y6 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)							Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN( 986)							Float _z4 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)							Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(s,1)) ));
HXDLIN( 986)							Float _z6 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)							Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(s,0)) )));
HXDLIN( 986)							::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)							::Array< Float > this4 = this3;
HXDLIN( 986)							this4->__unsafe_set(0,_x13);
HXDLIN( 986)							this4->__unsafe_set(1,_y7);
HXDLIN( 986)							this4->__unsafe_set(2,_z7);
HXDLIN( 986)							::Array< Float > v11 = this4;
HXDLIN( 986)							Float _y8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN( 986)							Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN( 986)							Float _y10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN( 986)							Float _y11 = (_y9 + (_y10 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN( 986)							Float _y12 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN( 986)							Float _y13 = (_y11 + (_y12 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN( 986)							Float _x14 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)							Float _x15 = (_x14 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN( 986)							Float _x16 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)							Float _x17 = (_x15 - (_x16 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN( 986)							Float _y14 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN( 986)							Float _y15 = (_y14 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN( 986)							Float _y16 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)							Float _y17 = (_y15 - (_y16 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN( 986)							Float _z8 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN( 986)							Float _z9 = (_z8 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN( 986)							Float _z10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN( 986)							Float _z11 = (_z9 - (_z10 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN( 986)							::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)							::Array< Float > this6 = this5;
HXDLIN( 986)							this6->__unsafe_set(0,_x17);
HXDLIN( 986)							this6->__unsafe_set(1,_y17);
HXDLIN( 986)							this6->__unsafe_set(2,_z11);
HXDLIN( 986)							::Array< Float > v12 = this6;
HXDLIN( 986)							Float _z12 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN( 986)							Float _z13 = (_z12 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN( 986)							Float _z14 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN( 986)							Float _z15 = (_z13 + (_z14 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN( 986)							Float _z16 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN( 986)							Float _z17 = (_z15 + (_z16 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN( 986)							::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)							::Array< Float > this8 = this7;
HXDLIN( 986)							this8->__unsafe_set(0,_x9);
HXDLIN( 986)							this8->__unsafe_set(1,_y13);
HXDLIN( 986)							this8->__unsafe_set(2,_z17);
HXDLIN( 986)							::Array< Float > this9 = this8;
HXDLIN( 986)							Float rhs = (( (Float)(1) ) / denom5);
HXDLIN( 986)							Float _x18 = (( (Float)(_hx_array_unsafe_get(this9,0)) ) * rhs);
HXDLIN( 986)							Float _y18 = (( (Float)(_hx_array_unsafe_get(this9,1)) ) * rhs);
HXDLIN( 986)							Float _z18 = (( (Float)(_hx_array_unsafe_get(this9,2)) ) * rhs);
HXDLIN( 986)							::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN( 986)							::Array< Float > this11 = this10;
HXDLIN( 986)							this11->__unsafe_set(0,_x18);
HXDLIN( 986)							this11->__unsafe_set(1,_y18);
HXDLIN( 986)							this11->__unsafe_set(2,_z18);
HXDLIN( 986)							::Array< Float > uvt = this11;
HXDLIN( 986)							Float u = ( (Float)(_hx_array_unsafe_get(uvt,0)) );
HXDLIN( 986)							Float v = ( (Float)(_hx_array_unsafe_get(uvt,1)) );
HXDLIN( 986)							Float t = ( (Float)(_hx_array_unsafe_get(uvt,2)) );
HXDLIN( 986)							bool h1;
HXDLIN( 986)							bool h2;
HXDLIN( 986)							bool h3;
HXDLIN( 986)							bool h4;
HXDLIN( 986)							if (!((u < 0))) {
HXLINE( 986)								h4 = (v < 0);
            							}
            							else {
HXLINE( 986)								h4 = true;
            							}
HXDLIN( 986)							if (!(h4)) {
HXLINE( 986)								h3 = (((( (Float)(1) ) - u) - v) < 0);
            							}
            							else {
HXLINE( 986)								h3 = true;
            							}
HXDLIN( 986)							if (!(h3)) {
HXLINE( 986)								h2 = (t < r_tmin);
            							}
            							else {
HXLINE( 986)								h2 = true;
            							}
HXDLIN( 986)							if (!(h2)) {
HXLINE( 986)								h1 = (t > r_tmax);
            							}
            							else {
HXLINE( 986)								h1 = true;
            							}
HXDLIN( 986)							if (h1) {
HXLINE( 986)								h = null();
            							}
            							else {
HXLINE( 986)								 ::apparentridges::RayHit h1 =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t);
HXDLIN( 986)								h1->u = u;
HXDLIN( 986)								h1->v = v;
HXDLIN( 986)								h = h1;
            							}
            						}
HXDLIN( 986)						if (::hx::IsNotNull( h )) {
HXLINE( 986)							h->face = bvh->faces->__get(i).StaticCast< ::Array< int > >();
HXDLIN( 986)							if ((tmin > h->t)) {
HXLINE(1060)								tmin = h->t;
HXLINE(1061)								closest = h;
            							}
            						}
            					}
            				}
HXLINE( 986)				return closest;
            			}
HXDLIN( 986)			 ::apparentridges::BBox bb = node->left->bbox;
HXDLIN( 986)			Float tx1 = ( (Float)(_hx_array_unsafe_get(bb->min,0)) );
HXDLIN( 986)			Float tx11 = (tx1 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN( 986)			Float tx12 = (tx11 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN( 986)			Float tx2 = ( (Float)(_hx_array_unsafe_get(bb->max,0)) );
HXDLIN( 986)			Float tx21 = (tx2 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN( 986)			Float tx22 = (tx21 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN( 986)			Float ty1 = ( (Float)(_hx_array_unsafe_get(bb->min,1)) );
HXDLIN( 986)			Float ty11 = (ty1 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN( 986)			Float ty12 = (ty11 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN( 986)			Float ty2 = ( (Float)(_hx_array_unsafe_get(bb->max,1)) );
HXDLIN( 986)			Float ty21 = (ty2 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN( 986)			Float ty22 = (ty21 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN( 986)			Float tz1 = ( (Float)(_hx_array_unsafe_get(bb->min,2)) );
HXDLIN( 986)			Float tz11 = (tz1 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN( 986)			Float tz12 = (tz11 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN( 986)			Float tz2 = ( (Float)(_hx_array_unsafe_get(bb->max,2)) );
HXDLIN( 986)			Float tz21 = (tz2 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN( 986)			Float tz22 = (tz21 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN( 986)			Float t1 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx12,tx22),::Math_obj::min(ty12,ty22)),::Math_obj::min(tz12,tz22));
HXDLIN( 986)			Float t2 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx12,tx22),::Math_obj::max(ty12,ty22)),::Math_obj::max(tz12,tz22));
HXDLIN( 986)			 ::apparentridges::RayHit hitL;
HXDLIN( 986)			if (((t2 - t1) < 0)) {
HXLINE( 986)				hitL = null();
            			}
            			else {
HXLINE( 986)				bool hitL1;
HXDLIN( 986)				if (!((t1 > r_tmax))) {
HXLINE( 986)					hitL1 = (t2 < r_tmin);
            				}
            				else {
HXLINE( 986)					hitL1 = true;
            				}
HXDLIN( 986)				if (hitL1) {
HXLINE( 986)					hitL = null();
            				}
            				else {
HXLINE( 986)					 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t1);
HXDLIN( 986)					h->t2 = t2;
HXDLIN( 986)					hitL = h;
            				}
            			}
HXDLIN( 986)			 ::apparentridges::BBox bb1 = node->right->bbox;
HXDLIN( 986)			Float tx13 = ( (Float)(_hx_array_unsafe_get(bb1->min,0)) );
HXDLIN( 986)			Float tx14 = (tx13 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN( 986)			Float tx15 = (tx14 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN( 986)			Float tx23 = ( (Float)(_hx_array_unsafe_get(bb1->max,0)) );
HXDLIN( 986)			Float tx24 = (tx23 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN( 986)			Float tx25 = (tx24 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN( 986)			Float ty13 = ( (Float)(_hx_array_unsafe_get(bb1->min,1)) );
HXDLIN( 986)			Float ty14 = (ty13 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN( 986)			Float ty15 = (ty14 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN( 986)			Float ty23 = ( (Float)(_hx_array_unsafe_get(bb1->max,1)) );
HXDLIN( 986)			Float ty24 = (ty23 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN( 986)			Float ty25 = (ty24 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN( 986)			Float tz13 = ( (Float)(_hx_array_unsafe_get(bb1->min,2)) );
HXDLIN( 986)			Float tz14 = (tz13 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN( 986)			Float tz15 = (tz14 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN( 986)			Float tz23 = ( (Float)(_hx_array_unsafe_get(bb1->max,2)) );
HXDLIN( 986)			Float tz24 = (tz23 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN( 986)			Float tz25 = (tz24 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN( 986)			Float t11 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx15,tx25),::Math_obj::min(ty15,ty25)),::Math_obj::min(tz15,tz25));
HXDLIN( 986)			Float t21 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx15,tx25),::Math_obj::max(ty15,ty25)),::Math_obj::max(tz15,tz25));
HXDLIN( 986)			 ::apparentridges::RayHit hitR;
HXDLIN( 986)			if (((t21 - t11) < 0)) {
HXLINE( 986)				hitR = null();
            			}
            			else {
HXLINE( 986)				bool hitR1;
HXDLIN( 986)				if (!((t11 > r_tmax))) {
HXLINE( 986)					hitR1 = (t21 < r_tmin);
            				}
            				else {
HXLINE( 986)					hitR1 = true;
            				}
HXDLIN( 986)				if (hitR1) {
HXLINE( 986)					hitR = null();
            				}
            				else {
HXLINE( 986)					 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t11);
HXDLIN( 986)					h->t2 = t21;
HXDLIN( 986)					hitR = h;
            				}
            			}
HXDLIN( 986)			bool _hx_tmp1;
HXDLIN( 986)			if (::hx::IsNotNull( hitL )) {
HXLINE( 986)				_hx_tmp1 = ::hx::IsNull( hitR );
            			}
            			else {
HXLINE( 986)				_hx_tmp1 = false;
            			}
HXDLIN( 986)			if (_hx_tmp1) {
HXLINE( 986)				return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->left)) );
            			}
            			else {
HXLINE( 986)				bool _hx_tmp;
HXDLIN( 986)				if (::hx::IsNull( hitL )) {
HXLINE( 986)					_hx_tmp = ::hx::IsNotNull( hitR );
            				}
            				else {
HXLINE( 986)					_hx_tmp = false;
            				}
HXDLIN( 986)				if (_hx_tmp) {
HXLINE( 986)					return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->right)) );
            				}
            				else {
HXLINE( 986)					bool _hx_tmp;
HXDLIN( 986)					if (::hx::IsNull( hitL )) {
HXLINE( 986)						_hx_tmp = ::hx::IsNull( hitR );
            					}
            					else {
HXLINE( 986)						_hx_tmp = false;
            					}
HXDLIN( 986)					if (_hx_tmp) {
HXLINE( 986)						return null();
            					}
            				}
            			}
HXDLIN( 986)			 ::apparentridges::BVHNode first;
HXDLIN( 986)			 ::apparentridges::BVHNode second;
HXDLIN( 986)			if ((hitL->t < hitR->t)) {
HXLINE(1079)				first = node->left;
HXLINE(1080)				second = node->right;
            			}
            			else {
HXLINE(1082)				first = node->right;
HXLINE(1083)				second = node->left;
            			}
HXLINE( 986)			 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(first)) );
HXDLIN( 986)			bool _hx_tmp2;
HXDLIN( 986)			if (::hx::IsNotNull( h )) {
HXLINE( 986)				_hx_tmp2 = (h->t >= ::Math_obj::max(hitL->t,hitR->t));
            			}
            			else {
HXLINE( 986)				_hx_tmp2 = true;
            			}
HXDLIN( 986)			if (_hx_tmp2) {
HXLINE( 986)				 ::apparentridges::RayHit h2 = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(second)) );
HXDLIN( 986)				if (::hx::IsNotNull( h2 )) {
HXLINE( 986)					bool _hx_tmp;
HXDLIN( 986)					if (::hx::IsNotNull( h )) {
HXLINE( 986)						_hx_tmp = (h2->t < h->t);
            					}
            					else {
HXLINE( 986)						_hx_tmp = true;
            					}
HXDLIN( 986)					if (_hx_tmp) {
HXLINE( 986)						return h2;
            					}
            				}
            			}
HXDLIN( 986)			return h;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		Float tolerance = __o_tolerance.Default(2);
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_977_visible)
HXLINE( 978)		Float epsilon = ((this->bsphere->r / ::Math_obj::sqrt(( (Float)(this->faces->length) ))) * tolerance);
HXLINE( 979)		Float r_tmin;
HXDLIN( 979)		Float r_tmax;
HXDLIN( 979)		::Array< Float > r_o;
HXDLIN( 979)		::Array< Float > r_d;
HXLINE( 980)		Float _x = ( (Float)(_hx_array_unsafe_get(p,0)) );
HXDLIN( 980)		Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(eye,0)) ));
HXDLIN( 980)		Float _y = ( (Float)(_hx_array_unsafe_get(p,1)) );
HXDLIN( 980)		Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(eye,1)) ));
HXDLIN( 980)		Float _z = ( (Float)(_hx_array_unsafe_get(p,2)) );
HXDLIN( 980)		Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(eye,2)) ));
HXDLIN( 980)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 980)		::Array< Float > this2 = this1;
HXDLIN( 980)		this2->__unsafe_set(0,_x1);
HXDLIN( 980)		this2->__unsafe_set(1,_y1);
HXDLIN( 980)		this2->__unsafe_set(2,_z1);
HXDLIN( 980)		::Array< Float > x = this2;
HXLINE( 981)		Float _x2 = ( (Float)(_hx_array_unsafe_get(x,0)) );
HXDLIN( 981)		Float _y2 = ( (Float)(_hx_array_unsafe_get(x,1)) );
HXDLIN( 981)		Float _z2 = ( (Float)(_hx_array_unsafe_get(x,2)) );
HXDLIN( 981)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 981)		::Array< Float > this4 = this3;
HXDLIN( 981)		this4->__unsafe_set(0,_x2);
HXDLIN( 981)		this4->__unsafe_set(1,_y2);
HXDLIN( 981)		this4->__unsafe_set(2,_z2);
HXDLIN( 981)		r_d = this4;
HXLINE( 982)		{
HXLINE( 982)			::Array< Float > this5 = r_d;
HXDLIN( 982)			Float l = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN( 982)			Float l1 = (l * ( (Float)(_hx_array_unsafe_get(this5,0)) ));
HXDLIN( 982)			Float l2 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN( 982)			Float l3 = (l1 + (l2 * ( (Float)(_hx_array_unsafe_get(this5,1)) )));
HXDLIN( 982)			Float l4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN( 982)			Float l5 = ::Math_obj::sqrt((l3 + (l4 * ( (Float)(_hx_array_unsafe_get(this5,2)) ))));
HXDLIN( 982)			if ((l5 > 0)) {
HXLINE( 221)				l5 = (( (Float)(1) ) / l5);
HXLINE( 982)				{
HXLINE( 982)					::Array< Float > _g = this5;
HXDLIN( 982)					{
HXLINE( 982)						Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l5);
HXDLIN( 982)						_g->__unsafe_set(0,v);
            					}
            				}
HXDLIN( 982)				{
HXLINE( 982)					::Array< Float > _g1 = this5;
HXDLIN( 982)					{
HXLINE( 982)						Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l5);
HXDLIN( 982)						_g1->__unsafe_set(1,v1);
            					}
            				}
HXDLIN( 982)				{
HXLINE( 982)					::Array< Float > _g2 = this5;
HXDLIN( 982)					{
HXLINE( 982)						Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l5);
HXDLIN( 982)						_g2->__unsafe_set(2,v2);
            					}
            				}
            			}
            			else {
HXLINE( 982)				this5->__unsafe_set(0,0);
HXDLIN( 982)				this5->__unsafe_set(1,0);
HXDLIN( 982)				this5->__unsafe_set(2,1);
            			}
            		}
HXLINE( 983)		r_o = eye;
HXLINE( 984)		r_tmin = ( (Float)(0) );
HXLINE( 985)		Float r_tmax1 = ( (Float)(_hx_array_unsafe_get(x,0)) );
HXDLIN( 985)		Float r_tmax2 = (r_tmax1 * ( (Float)(_hx_array_unsafe_get(x,0)) ));
HXDLIN( 985)		Float r_tmax3 = ( (Float)(_hx_array_unsafe_get(x,1)) );
HXDLIN( 985)		Float r_tmax4 = (r_tmax2 + (r_tmax3 * ( (Float)(_hx_array_unsafe_get(x,1)) )));
HXDLIN( 985)		Float r_tmax5 = ( (Float)(_hx_array_unsafe_get(x,2)) );
HXDLIN( 985)		r_tmax = (::Math_obj::sqrt((r_tmax4 + (r_tmax5 * ( (Float)(_hx_array_unsafe_get(x,2)) )))) - epsilon);
HXLINE( 986)		 ::apparentridges::BVHTree bvh = this->bvh;
HXDLIN( 986)		::Array< ::Dynamic> hitNode = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE(1046)		hitNode[0] =  ::Dynamic(new _hx_Closure_0(bvh,r_o,hitNode,r_tmax,r_tmin,r_d));
HXLINE( 986)		 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(bvh->root)) );
HXLINE( 987)		return ::hx::IsNull( h );
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mesh_obj,visible,return )

void Mesh_obj::rotCoordSys(::Array< Float > old_u,::Array< Float > old_v,::Array< Float > new_norm,::Array< Float > new_u,::Array< Float > new_v){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_515_rotCoordSys)
HXLINE( 516)		{
HXLINE( 516)			{
HXLINE( 516)				Float v = ( (Float)(_hx_array_unsafe_get(old_u,0)) );
HXDLIN( 516)				new_u->__unsafe_set(0,v);
            			}
HXDLIN( 516)			{
HXLINE( 516)				Float v1 = ( (Float)(_hx_array_unsafe_get(old_u,1)) );
HXDLIN( 516)				new_u->__unsafe_set(1,v1);
            			}
HXDLIN( 516)			{
HXLINE( 516)				Float v2 = ( (Float)(_hx_array_unsafe_get(old_u,2)) );
HXDLIN( 516)				new_u->__unsafe_set(2,v2);
            			}
            		}
HXLINE( 517)		{
HXLINE( 517)			{
HXLINE( 517)				Float v3 = ( (Float)(_hx_array_unsafe_get(old_v,0)) );
HXDLIN( 517)				new_v->__unsafe_set(0,v3);
            			}
HXDLIN( 517)			{
HXLINE( 517)				Float v4 = ( (Float)(_hx_array_unsafe_get(old_v,1)) );
HXDLIN( 517)				new_v->__unsafe_set(1,v4);
            			}
HXDLIN( 517)			{
HXLINE( 517)				Float v5 = ( (Float)(_hx_array_unsafe_get(old_v,2)) );
HXDLIN( 517)				new_v->__unsafe_set(2,v5);
            			}
            		}
HXLINE( 518)		Float _x = ( (Float)(_hx_array_unsafe_get(old_u,1)) );
HXDLIN( 518)		Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(old_v,2)) ));
HXDLIN( 518)		Float _x2 = ( (Float)(_hx_array_unsafe_get(old_u,2)) );
HXDLIN( 518)		Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(old_v,1)) )));
HXDLIN( 518)		Float _y = ( (Float)(_hx_array_unsafe_get(old_u,2)) );
HXDLIN( 518)		Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(old_v,0)) ));
HXDLIN( 518)		Float _y2 = ( (Float)(_hx_array_unsafe_get(old_u,0)) );
HXDLIN( 518)		Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(old_v,2)) )));
HXDLIN( 518)		Float _z = ( (Float)(_hx_array_unsafe_get(old_u,0)) );
HXDLIN( 518)		Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(old_v,1)) ));
HXDLIN( 518)		Float _z2 = ( (Float)(_hx_array_unsafe_get(old_u,1)) );
HXDLIN( 518)		Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(old_v,0)) )));
HXDLIN( 518)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 518)		::Array< Float > this2 = this1;
HXDLIN( 518)		this2->__unsafe_set(0,_x3);
HXDLIN( 518)		this2->__unsafe_set(1,_y3);
HXDLIN( 518)		this2->__unsafe_set(2,_z3);
HXDLIN( 518)		::Array< Float > old_norm = this2;
HXLINE( 519)		Float ndot = ( (Float)(_hx_array_unsafe_get(old_norm,0)) );
HXDLIN( 519)		Float ndot1 = (ndot * ( (Float)(_hx_array_unsafe_get(new_norm,0)) ));
HXDLIN( 519)		Float ndot2 = ( (Float)(_hx_array_unsafe_get(old_norm,1)) );
HXDLIN( 519)		Float ndot3 = (ndot1 + (ndot2 * ( (Float)(_hx_array_unsafe_get(new_norm,1)) )));
HXDLIN( 519)		Float ndot4 = ( (Float)(_hx_array_unsafe_get(old_norm,2)) );
HXDLIN( 519)		Float ndot5 = (ndot3 + (ndot4 * ( (Float)(_hx_array_unsafe_get(new_norm,2)) )));
HXLINE( 520)		if ((ndot5 <= -1)) {
HXLINE( 521)			{
HXLINE( 521)				{
HXLINE( 521)					::Array< Float > _g = new_u;
HXDLIN( 521)					{
HXLINE( 521)						Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * ( (Float)(-1) ));
HXDLIN( 521)						_g->__unsafe_set(0,v);
            					}
            				}
HXDLIN( 521)				{
HXLINE( 521)					::Array< Float > _g1 = new_u;
HXDLIN( 521)					{
HXLINE( 521)						Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * ( (Float)(-1) ));
HXDLIN( 521)						_g1->__unsafe_set(1,v1);
            					}
            				}
HXDLIN( 521)				{
HXLINE( 521)					::Array< Float > _g2 = new_u;
HXDLIN( 521)					{
HXLINE( 521)						Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * ( (Float)(-1) ));
HXDLIN( 521)						_g2->__unsafe_set(2,v2);
            					}
            				}
            			}
HXLINE( 522)			{
HXLINE( 522)				{
HXLINE( 522)					::Array< Float > _g3 = new_v;
HXDLIN( 522)					{
HXLINE( 522)						Float v3 = (( (Float)(_hx_array_unsafe_get(_g3,0)) ) * ( (Float)(-1) ));
HXDLIN( 522)						_g3->__unsafe_set(0,v3);
            					}
            				}
HXDLIN( 522)				{
HXLINE( 522)					::Array< Float > _g4 = new_v;
HXDLIN( 522)					{
HXLINE( 522)						Float v4 = (( (Float)(_hx_array_unsafe_get(_g4,1)) ) * ( (Float)(-1) ));
HXDLIN( 522)						_g4->__unsafe_set(1,v4);
            					}
            				}
HXDLIN( 522)				{
HXLINE( 522)					::Array< Float > _g5 = new_v;
HXDLIN( 522)					{
HXLINE( 522)						Float v5 = (( (Float)(_hx_array_unsafe_get(_g5,2)) ) * ( (Float)(-1) ));
HXDLIN( 522)						_g5->__unsafe_set(2,v5);
            					}
            				}
            			}
HXLINE( 523)			return;
            		}
HXLINE( 526)		Float _x4 = (( (Float)(_hx_array_unsafe_get(old_norm,0)) ) * ndot5);
HXDLIN( 526)		Float _y4 = (( (Float)(_hx_array_unsafe_get(old_norm,1)) ) * ndot5);
HXDLIN( 526)		Float _z4 = (( (Float)(_hx_array_unsafe_get(old_norm,2)) ) * ndot5);
HXDLIN( 526)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 526)		::Array< Float > this4 = this3;
HXDLIN( 526)		this4->__unsafe_set(0,_x4);
HXDLIN( 526)		this4->__unsafe_set(1,_y4);
HXDLIN( 526)		this4->__unsafe_set(2,_z4);
HXDLIN( 526)		::Array< Float > rhs = this4;
HXDLIN( 526)		Float _x5 = ( (Float)(_hx_array_unsafe_get(new_norm,0)) );
HXDLIN( 526)		Float _x6 = (_x5 - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 526)		Float _y5 = ( (Float)(_hx_array_unsafe_get(new_norm,1)) );
HXDLIN( 526)		Float _y6 = (_y5 - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 526)		Float _z5 = ( (Float)(_hx_array_unsafe_get(new_norm,2)) );
HXDLIN( 526)		Float _z6 = (_z5 - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 526)		::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 526)		::Array< Float > this6 = this5;
HXDLIN( 526)		this6->__unsafe_set(0,_x6);
HXDLIN( 526)		this6->__unsafe_set(1,_y6);
HXDLIN( 526)		this6->__unsafe_set(2,_z6);
HXDLIN( 526)		::Array< Float > perp_old = this6;
HXLINE( 532)		Float _x7 = ( (Float)(_hx_array_unsafe_get(old_norm,0)) );
HXDLIN( 532)		Float _x8 = (_x7 + ( (Float)(_hx_array_unsafe_get(new_norm,0)) ));
HXDLIN( 532)		Float _y7 = ( (Float)(_hx_array_unsafe_get(old_norm,1)) );
HXDLIN( 532)		Float _y8 = (_y7 + ( (Float)(_hx_array_unsafe_get(new_norm,1)) ));
HXDLIN( 532)		Float _z7 = ( (Float)(_hx_array_unsafe_get(old_norm,2)) );
HXDLIN( 532)		Float _z8 = (_z7 + ( (Float)(_hx_array_unsafe_get(new_norm,2)) ));
HXDLIN( 532)		::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 532)		::Array< Float > this8 = this7;
HXDLIN( 532)		this8->__unsafe_set(0,_x8);
HXDLIN( 532)		this8->__unsafe_set(1,_y8);
HXDLIN( 532)		this8->__unsafe_set(2,_z8);
HXDLIN( 532)		::Array< Float > this9 = this8;
HXDLIN( 532)		Float rhs1 = (( (Float)(1) ) / (1 + ndot5));
HXDLIN( 532)		Float _x9 = (( (Float)(_hx_array_unsafe_get(this9,0)) ) * rhs1);
HXDLIN( 532)		Float _y9 = (( (Float)(_hx_array_unsafe_get(this9,1)) ) * rhs1);
HXDLIN( 532)		Float _z9 = (( (Float)(_hx_array_unsafe_get(this9,2)) ) * rhs1);
HXDLIN( 532)		::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN( 532)		::Array< Float > this11 = this10;
HXDLIN( 532)		this11->__unsafe_set(0,_x9);
HXDLIN( 532)		this11->__unsafe_set(1,_y9);
HXDLIN( 532)		this11->__unsafe_set(2,_z9);
HXDLIN( 532)		::Array< Float > dperp = this11;
HXLINE( 537)		Float rhs2 = ( (Float)(_hx_array_unsafe_get(new_u,0)) );
HXDLIN( 537)		Float rhs3 = (rhs2 * ( (Float)(_hx_array_unsafe_get(perp_old,0)) ));
HXDLIN( 537)		Float rhs4 = ( (Float)(_hx_array_unsafe_get(new_u,1)) );
HXDLIN( 537)		Float rhs5 = (rhs3 + (rhs4 * ( (Float)(_hx_array_unsafe_get(perp_old,1)) )));
HXDLIN( 537)		Float rhs6 = ( (Float)(_hx_array_unsafe_get(new_u,2)) );
HXDLIN( 537)		Float rhs7 = (rhs5 + (rhs6 * ( (Float)(_hx_array_unsafe_get(perp_old,2)) )));
HXDLIN( 537)		Float _x10 = (( (Float)(_hx_array_unsafe_get(dperp,0)) ) * rhs7);
HXDLIN( 537)		Float _y10 = (( (Float)(_hx_array_unsafe_get(dperp,1)) ) * rhs7);
HXDLIN( 537)		Float _z10 = (( (Float)(_hx_array_unsafe_get(dperp,2)) ) * rhs7);
HXDLIN( 537)		::Array< Float > this12 = ::Array_obj< Float >::__new(3);
HXDLIN( 537)		::Array< Float > this13 = this12;
HXDLIN( 537)		this13->__unsafe_set(0,_x10);
HXDLIN( 537)		this13->__unsafe_set(1,_y10);
HXDLIN( 537)		this13->__unsafe_set(2,_z10);
HXDLIN( 537)		::Array< Float > rhs8 = this13;
HXDLIN( 537)		Float _x11 = ( (Float)(_hx_array_unsafe_get(new_u,0)) );
HXDLIN( 537)		Float _x12 = (_x11 - ( (Float)(_hx_array_unsafe_get(rhs8,0)) ));
HXDLIN( 537)		Float _y11 = ( (Float)(_hx_array_unsafe_get(new_u,1)) );
HXDLIN( 537)		Float _y12 = (_y11 - ( (Float)(_hx_array_unsafe_get(rhs8,1)) ));
HXDLIN( 537)		Float _z11 = ( (Float)(_hx_array_unsafe_get(new_u,2)) );
HXDLIN( 537)		Float _z12 = (_z11 - ( (Float)(_hx_array_unsafe_get(rhs8,2)) ));
HXDLIN( 537)		::Array< Float > this14 = ::Array_obj< Float >::__new(3);
HXDLIN( 537)		::Array< Float > this15 = this14;
HXDLIN( 537)		this15->__unsafe_set(0,_x12);
HXDLIN( 537)		this15->__unsafe_set(1,_y12);
HXDLIN( 537)		this15->__unsafe_set(2,_z12);
HXDLIN( 537)		new_u = this15;
HXLINE( 538)		Float rhs9 = ( (Float)(_hx_array_unsafe_get(new_v,0)) );
HXDLIN( 538)		Float rhs10 = (rhs9 * ( (Float)(_hx_array_unsafe_get(perp_old,0)) ));
HXDLIN( 538)		Float rhs11 = ( (Float)(_hx_array_unsafe_get(new_v,1)) );
HXDLIN( 538)		Float rhs12 = (rhs10 + (rhs11 * ( (Float)(_hx_array_unsafe_get(perp_old,1)) )));
HXDLIN( 538)		Float rhs13 = ( (Float)(_hx_array_unsafe_get(new_v,2)) );
HXDLIN( 538)		Float rhs14 = (rhs12 + (rhs13 * ( (Float)(_hx_array_unsafe_get(perp_old,2)) )));
HXDLIN( 538)		Float _x13 = (( (Float)(_hx_array_unsafe_get(dperp,0)) ) * rhs14);
HXDLIN( 538)		Float _y13 = (( (Float)(_hx_array_unsafe_get(dperp,1)) ) * rhs14);
HXDLIN( 538)		Float _z13 = (( (Float)(_hx_array_unsafe_get(dperp,2)) ) * rhs14);
HXDLIN( 538)		::Array< Float > this16 = ::Array_obj< Float >::__new(3);
HXDLIN( 538)		::Array< Float > this17 = this16;
HXDLIN( 538)		this17->__unsafe_set(0,_x13);
HXDLIN( 538)		this17->__unsafe_set(1,_y13);
HXDLIN( 538)		this17->__unsafe_set(2,_z13);
HXDLIN( 538)		::Array< Float > rhs15 = this17;
HXDLIN( 538)		Float _x14 = ( (Float)(_hx_array_unsafe_get(new_v,0)) );
HXDLIN( 538)		Float _x15 = (_x14 - ( (Float)(_hx_array_unsafe_get(rhs15,0)) ));
HXDLIN( 538)		Float _y14 = ( (Float)(_hx_array_unsafe_get(new_v,1)) );
HXDLIN( 538)		Float _y15 = (_y14 - ( (Float)(_hx_array_unsafe_get(rhs15,1)) ));
HXDLIN( 538)		Float _z14 = ( (Float)(_hx_array_unsafe_get(new_v,2)) );
HXDLIN( 538)		Float _z15 = (_z14 - ( (Float)(_hx_array_unsafe_get(rhs15,2)) ));
HXDLIN( 538)		::Array< Float > this18 = ::Array_obj< Float >::__new(3);
HXDLIN( 538)		::Array< Float > this19 = this18;
HXDLIN( 538)		this19->__unsafe_set(0,_x15);
HXDLIN( 538)		this19->__unsafe_set(1,_y15);
HXDLIN( 538)		this19->__unsafe_set(2,_z15);
HXDLIN( 538)		new_v = this19;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Mesh_obj,rotCoordSys,(void))

::Array< Float > Mesh_obj::projCurv(::Array< Float > old_u,::Array< Float > old_v,Float old_ku,Float old_kuv,Float old_kv,::Array< Float > new_u,::Array< Float > new_v){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_546_projCurv)
HXLINE( 547)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 547)		::Array< Float > this2 = this1;
HXDLIN( 547)		this2->__unsafe_set(0,0);
HXDLIN( 547)		this2->__unsafe_set(1,0);
HXDLIN( 547)		this2->__unsafe_set(2,0);
HXDLIN( 547)		::Array< Float > r_new_u = this2;
HXLINE( 548)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 548)		::Array< Float > this4 = this3;
HXDLIN( 548)		this4->__unsafe_set(0,0);
HXDLIN( 548)		this4->__unsafe_set(1,0);
HXDLIN( 548)		this4->__unsafe_set(2,0);
HXDLIN( 548)		::Array< Float > r_new_v = this4;
HXLINE( 549)		Float _x = ( (Float)(_hx_array_unsafe_get(old_u,1)) );
HXDLIN( 549)		Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(old_v,2)) ));
HXDLIN( 549)		Float _x2 = ( (Float)(_hx_array_unsafe_get(old_u,2)) );
HXDLIN( 549)		Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(old_v,1)) )));
HXDLIN( 549)		Float _y = ( (Float)(_hx_array_unsafe_get(old_u,2)) );
HXDLIN( 549)		Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(old_v,0)) ));
HXDLIN( 549)		Float _y2 = ( (Float)(_hx_array_unsafe_get(old_u,0)) );
HXDLIN( 549)		Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(old_v,2)) )));
HXDLIN( 549)		Float _z = ( (Float)(_hx_array_unsafe_get(old_u,0)) );
HXDLIN( 549)		Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(old_v,1)) ));
HXDLIN( 549)		Float _z2 = ( (Float)(_hx_array_unsafe_get(old_u,1)) );
HXDLIN( 549)		Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(old_v,0)) )));
HXDLIN( 549)		::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 549)		::Array< Float > this6 = this5;
HXDLIN( 549)		this6->__unsafe_set(0,_x3);
HXDLIN( 549)		this6->__unsafe_set(1,_y3);
HXDLIN( 549)		this6->__unsafe_set(2,_z3);
HXDLIN( 549)		::apparentridges::Mesh_obj::rotCoordSys(new_u,new_v,this6,r_new_u,r_new_v);
HXLINE( 550)		Float u1 = ( (Float)(_hx_array_unsafe_get(r_new_u,0)) );
HXDLIN( 550)		Float u11 = (u1 * ( (Float)(_hx_array_unsafe_get(old_u,0)) ));
HXDLIN( 550)		Float u12 = ( (Float)(_hx_array_unsafe_get(r_new_u,1)) );
HXDLIN( 550)		Float u13 = (u11 + (u12 * ( (Float)(_hx_array_unsafe_get(old_u,1)) )));
HXDLIN( 550)		Float u14 = ( (Float)(_hx_array_unsafe_get(r_new_u,2)) );
HXDLIN( 550)		Float u15 = (u13 + (u14 * ( (Float)(_hx_array_unsafe_get(old_u,2)) )));
HXLINE( 551)		Float v1 = ( (Float)(_hx_array_unsafe_get(r_new_u,0)) );
HXDLIN( 551)		Float v11 = (v1 * ( (Float)(_hx_array_unsafe_get(old_v,0)) ));
HXDLIN( 551)		Float v12 = ( (Float)(_hx_array_unsafe_get(r_new_u,1)) );
HXDLIN( 551)		Float v13 = (v11 + (v12 * ( (Float)(_hx_array_unsafe_get(old_v,1)) )));
HXDLIN( 551)		Float v14 = ( (Float)(_hx_array_unsafe_get(r_new_u,2)) );
HXDLIN( 551)		Float v15 = (v13 + (v14 * ( (Float)(_hx_array_unsafe_get(old_v,2)) )));
HXLINE( 552)		Float u2 = ( (Float)(_hx_array_unsafe_get(r_new_v,0)) );
HXDLIN( 552)		Float u21 = (u2 * ( (Float)(_hx_array_unsafe_get(old_u,0)) ));
HXDLIN( 552)		Float u22 = ( (Float)(_hx_array_unsafe_get(r_new_v,1)) );
HXDLIN( 552)		Float u23 = (u21 + (u22 * ( (Float)(_hx_array_unsafe_get(old_u,1)) )));
HXDLIN( 552)		Float u24 = ( (Float)(_hx_array_unsafe_get(r_new_v,2)) );
HXDLIN( 552)		Float u25 = (u23 + (u24 * ( (Float)(_hx_array_unsafe_get(old_u,2)) )));
HXLINE( 553)		Float v2 = ( (Float)(_hx_array_unsafe_get(r_new_v,0)) );
HXDLIN( 553)		Float v21 = (v2 * ( (Float)(_hx_array_unsafe_get(old_v,0)) ));
HXDLIN( 553)		Float v22 = ( (Float)(_hx_array_unsafe_get(r_new_v,1)) );
HXDLIN( 553)		Float v23 = (v21 + (v22 * ( (Float)(_hx_array_unsafe_get(old_v,1)) )));
HXDLIN( 553)		Float v24 = ( (Float)(_hx_array_unsafe_get(r_new_v,2)) );
HXDLIN( 553)		Float v25 = (v23 + (v24 * ( (Float)(_hx_array_unsafe_get(old_v,2)) )));
HXLINE( 554)		Float new_ku = ((((old_ku * u15) * u15) + (old_kuv * ((( (Float)(2) ) * u15) * v15))) + ((old_kv * v15) * v15));
HXLINE( 555)		Float new_kuv = ((((old_ku * u15) * u25) + (old_kuv * ((u15 * v25) + (u25 * v15)))) + ((old_kv * v15) * v25));
HXLINE( 556)		Float new_kv = ((((old_ku * u25) * u25) + (old_kuv * ((( (Float)(2) ) * u25) * v25))) + ((old_kv * v25) * v25));
HXLINE( 557)		::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN( 557)		::Array< Float > this8 = this7;
HXDLIN( 557)		this8->__unsafe_set(0,new_ku);
HXDLIN( 557)		this8->__unsafe_set(1,new_kuv);
HXDLIN( 557)		this8->__unsafe_set(2,new_kv);
HXDLIN( 557)		return this8;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(Mesh_obj,projCurv,return )

void Mesh_obj::diagonalizeCurv(::Array< Float > old_u,::Array< Float > old_v,Float ku,Float kuv,Float kv,::Array< Float > new_norm,::Array< Float > pd1,::Array< Float > pd2,::Array< Float > k1k2){
            	HX_STACKFRAME(&_hx_pos_0d00699988983bd6_565_diagonalizeCurv)
HXLINE( 566)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 566)		::Array< Float > this2 = this1;
HXDLIN( 566)		this2->__unsafe_set(0,0);
HXDLIN( 566)		this2->__unsafe_set(1,0);
HXDLIN( 566)		this2->__unsafe_set(2,0);
HXDLIN( 566)		::Array< Float > r_old_u = this2;
HXLINE( 567)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN( 567)		::Array< Float > this4 = this3;
HXDLIN( 567)		this4->__unsafe_set(0,0);
HXDLIN( 567)		this4->__unsafe_set(1,0);
HXDLIN( 567)		this4->__unsafe_set(2,0);
HXDLIN( 567)		::Array< Float > r_old_v = this4;
HXLINE( 568)		::apparentridges::Mesh_obj::rotCoordSys(old_u,old_v,new_norm,r_old_u,r_old_v);
HXLINE( 570)		Float c = ( (Float)(1) );
HXDLIN( 570)		Float s = ( (Float)(0) );
HXDLIN( 570)		Float tt = ( (Float)(0) );
HXLINE( 571)		if ((kuv != ((Float)0.0))) {
HXLINE( 573)			Float h = ((((Float)0.5) * (kv - ku)) / kuv);
HXLINE( 574)			if ((h < ((Float)0.0))) {
HXLINE( 575)				tt = (((Float)1.0) / (h - ::Math_obj::sqrt((((Float)1.0) + (h * h)))));
            			}
            			else {
HXLINE( 576)				tt = (((Float)1.0) / (h + ::Math_obj::sqrt((((Float)1.0) + (h * h)))));
            			}
HXLINE( 577)			c = (((Float)1.0) / ::Math_obj::sqrt((((Float)1.0) + (tt * tt))));
HXLINE( 578)			s = (tt * c);
            		}
HXLINE( 581)		Float k1 = (ku - (tt * kuv));
HXLINE( 582)		Float k2 = (kv + (tt * kuv));
HXLINE( 584)		if ((::Math_obj::abs(k1) >= ::Math_obj::abs(k2))) {
HXLINE( 585)			k1k2->__unsafe_set(0,k1);
HXLINE( 586)			k1k2->__unsafe_set(1,k2);
HXLINE( 587)			{
HXLINE( 587)				Float _x = (( (Float)(_hx_array_unsafe_get(r_old_u,0)) ) * c);
HXDLIN( 587)				Float _y = (( (Float)(_hx_array_unsafe_get(r_old_u,1)) ) * c);
HXDLIN( 587)				Float _z = (( (Float)(_hx_array_unsafe_get(r_old_u,2)) ) * c);
HXDLIN( 587)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 587)				::Array< Float > this2 = this1;
HXDLIN( 587)				this2->__unsafe_set(0,_x);
HXDLIN( 587)				this2->__unsafe_set(1,_y);
HXDLIN( 587)				this2->__unsafe_set(2,_z);
HXDLIN( 587)				::Array< Float > this3 = this2;
HXDLIN( 587)				Float _x1 = (( (Float)(_hx_array_unsafe_get(r_old_v,0)) ) * s);
HXDLIN( 587)				Float _y1 = (( (Float)(_hx_array_unsafe_get(r_old_v,1)) ) * s);
HXDLIN( 587)				Float _z1 = (( (Float)(_hx_array_unsafe_get(r_old_v,2)) ) * s);
HXDLIN( 587)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN( 587)				::Array< Float > this5 = this4;
HXDLIN( 587)				this5->__unsafe_set(0,_x1);
HXDLIN( 587)				this5->__unsafe_set(1,_y1);
HXDLIN( 587)				this5->__unsafe_set(2,_z1);
HXDLIN( 587)				::Array< Float > rhs = this5;
HXDLIN( 587)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN( 587)				Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 587)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN( 587)				Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 587)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN( 587)				Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 587)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 587)				::Array< Float > this7 = this6;
HXDLIN( 587)				this7->__unsafe_set(0,_x3);
HXDLIN( 587)				this7->__unsafe_set(1,_y3);
HXDLIN( 587)				this7->__unsafe_set(2,_z3);
HXDLIN( 587)				::Array< Float > v = this7;
HXDLIN( 587)				{
HXLINE( 587)					Float v1 = ( (Float)(_hx_array_unsafe_get(v,0)) );
HXDLIN( 587)					pd1->__unsafe_set(0,v1);
            				}
HXDLIN( 587)				{
HXLINE( 587)					Float v2 = ( (Float)(_hx_array_unsafe_get(v,1)) );
HXDLIN( 587)					pd1->__unsafe_set(1,v2);
            				}
HXDLIN( 587)				{
HXLINE( 587)					Float v3 = ( (Float)(_hx_array_unsafe_get(v,2)) );
HXDLIN( 587)					pd1->__unsafe_set(2,v3);
            				}
            			}
            		}
            		else {
HXLINE( 589)			k1k2->__unsafe_set(0,k2);
HXLINE( 590)			k1k2->__unsafe_set(1,k1);
HXLINE( 591)			{
HXLINE( 591)				Float _x = (( (Float)(_hx_array_unsafe_get(r_old_u,0)) ) * s);
HXDLIN( 591)				Float _y = (( (Float)(_hx_array_unsafe_get(r_old_u,1)) ) * s);
HXDLIN( 591)				Float _z = (( (Float)(_hx_array_unsafe_get(r_old_u,2)) ) * s);
HXDLIN( 591)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN( 591)				::Array< Float > this2 = this1;
HXDLIN( 591)				this2->__unsafe_set(0,_x);
HXDLIN( 591)				this2->__unsafe_set(1,_y);
HXDLIN( 591)				this2->__unsafe_set(2,_z);
HXDLIN( 591)				::Array< Float > this3 = this2;
HXDLIN( 591)				Float _x1 = (( (Float)(_hx_array_unsafe_get(r_old_v,0)) ) * c);
HXDLIN( 591)				Float _y1 = (( (Float)(_hx_array_unsafe_get(r_old_v,1)) ) * c);
HXDLIN( 591)				Float _z1 = (( (Float)(_hx_array_unsafe_get(r_old_v,2)) ) * c);
HXDLIN( 591)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN( 591)				::Array< Float > this5 = this4;
HXDLIN( 591)				this5->__unsafe_set(0,_x1);
HXDLIN( 591)				this5->__unsafe_set(1,_y1);
HXDLIN( 591)				this5->__unsafe_set(2,_z1);
HXDLIN( 591)				::Array< Float > rhs = this5;
HXDLIN( 591)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN( 591)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs,0)) ));
HXDLIN( 591)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN( 591)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs,1)) ));
HXDLIN( 591)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN( 591)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs,2)) ));
HXDLIN( 591)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN( 591)				::Array< Float > this7 = this6;
HXDLIN( 591)				this7->__unsafe_set(0,_x3);
HXDLIN( 591)				this7->__unsafe_set(1,_y3);
HXDLIN( 591)				this7->__unsafe_set(2,_z3);
HXDLIN( 591)				::Array< Float > v = this7;
HXDLIN( 591)				{
HXLINE( 591)					Float v1 = ( (Float)(_hx_array_unsafe_get(v,0)) );
HXDLIN( 591)					pd1->__unsafe_set(0,v1);
            				}
HXDLIN( 591)				{
HXLINE( 591)					Float v2 = ( (Float)(_hx_array_unsafe_get(v,1)) );
HXDLIN( 591)					pd1->__unsafe_set(1,v2);
            				}
HXDLIN( 591)				{
HXLINE( 591)					Float v3 = ( (Float)(_hx_array_unsafe_get(v,2)) );
HXDLIN( 591)					pd1->__unsafe_set(2,v3);
            				}
            			}
            		}
HXLINE( 593)		{
HXLINE( 593)			Float _x = ( (Float)(_hx_array_unsafe_get(new_norm,1)) );
HXDLIN( 593)			Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(pd1,2)) ));
HXDLIN( 593)			Float _x2 = ( (Float)(_hx_array_unsafe_get(new_norm,2)) );
HXDLIN( 593)			Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(pd1,1)) )));
HXDLIN( 593)			Float _y = ( (Float)(_hx_array_unsafe_get(new_norm,2)) );
HXDLIN( 593)			Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(pd1,0)) ));
HXDLIN( 593)			Float _y2 = ( (Float)(_hx_array_unsafe_get(new_norm,0)) );
HXDLIN( 593)			Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(pd1,2)) )));
HXDLIN( 593)			Float _z = ( (Float)(_hx_array_unsafe_get(new_norm,0)) );
HXDLIN( 593)			Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(pd1,1)) ));
HXDLIN( 593)			Float _z2 = ( (Float)(_hx_array_unsafe_get(new_norm,1)) );
HXDLIN( 593)			Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(pd1,0)) )));
HXDLIN( 593)			::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN( 593)			::Array< Float > this6 = this5;
HXDLIN( 593)			this6->__unsafe_set(0,_x3);
HXDLIN( 593)			this6->__unsafe_set(1,_y3);
HXDLIN( 593)			this6->__unsafe_set(2,_z3);
HXDLIN( 593)			::Array< Float > v = this6;
HXDLIN( 593)			{
HXLINE( 593)				Float v1 = ( (Float)(_hx_array_unsafe_get(v,0)) );
HXDLIN( 593)				pd2->__unsafe_set(0,v1);
            			}
HXDLIN( 593)			{
HXLINE( 593)				Float v2 = ( (Float)(_hx_array_unsafe_get(v,1)) );
HXDLIN( 593)				pd2->__unsafe_set(1,v2);
            			}
HXDLIN( 593)			{
HXLINE( 593)				Float v3 = ( (Float)(_hx_array_unsafe_get(v,2)) );
HXDLIN( 593)				pd2->__unsafe_set(2,v3);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(Mesh_obj,diagonalizeCurv,(void))


::hx::ObjectPtr< Mesh_obj > Mesh_obj::__new() {
	::hx::ObjectPtr< Mesh_obj > __this = new Mesh_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Mesh_obj > Mesh_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Mesh_obj *__this = (Mesh_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Mesh_obj), true, "apparentridges.Mesh"));
	*(void **)__this = Mesh_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Mesh_obj::Mesh_obj()
{
}

void Mesh_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Mesh);
	HX_MARK_MEMBER_NAME(vertices,"vertices");
	HX_MARK_MEMBER_NAME(faces,"faces");
	HX_MARK_MEMBER_NAME(normals,"normals");
	HX_MARK_MEMBER_NAME(curv1,"curv1");
	HX_MARK_MEMBER_NAME(curv2,"curv2");
	HX_MARK_MEMBER_NAME(pdir1,"pdir1");
	HX_MARK_MEMBER_NAME(pdir2,"pdir2");
	HX_MARK_MEMBER_NAME(pointAreas,"pointAreas");
	HX_MARK_MEMBER_NAME(cornerAreas,"cornerAreas");
	HX_MARK_MEMBER_NAME(adjacentFaces,"adjacentFaces");
	HX_MARK_MEMBER_NAME(ndotv,"ndotv");
	HX_MARK_MEMBER_NAME(t1q1,"t1q1");
	HX_MARK_MEMBER_NAME(Dt1q1,"Dt1q1");
	HX_MARK_MEMBER_NAME(bsphere,"bsphere");
	HX_MARK_MEMBER_NAME(featureSize,"featureSize");
	HX_MARK_MEMBER_NAME(bvh,"bvh");
	HX_MARK_END_CLASS();
}

void Mesh_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(vertices,"vertices");
	HX_VISIT_MEMBER_NAME(faces,"faces");
	HX_VISIT_MEMBER_NAME(normals,"normals");
	HX_VISIT_MEMBER_NAME(curv1,"curv1");
	HX_VISIT_MEMBER_NAME(curv2,"curv2");
	HX_VISIT_MEMBER_NAME(pdir1,"pdir1");
	HX_VISIT_MEMBER_NAME(pdir2,"pdir2");
	HX_VISIT_MEMBER_NAME(pointAreas,"pointAreas");
	HX_VISIT_MEMBER_NAME(cornerAreas,"cornerAreas");
	HX_VISIT_MEMBER_NAME(adjacentFaces,"adjacentFaces");
	HX_VISIT_MEMBER_NAME(ndotv,"ndotv");
	HX_VISIT_MEMBER_NAME(t1q1,"t1q1");
	HX_VISIT_MEMBER_NAME(Dt1q1,"Dt1q1");
	HX_VISIT_MEMBER_NAME(bsphere,"bsphere");
	HX_VISIT_MEMBER_NAME(featureSize,"featureSize");
	HX_VISIT_MEMBER_NAME(bvh,"bvh");
}

::hx::Val Mesh_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bvh") ) { return ::hx::Val( bvh ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"t1q1") ) { return ::hx::Val( t1q1 ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"faces") ) { return ::hx::Val( faces ); }
		if (HX_FIELD_EQ(inName,"curv1") ) { return ::hx::Val( curv1 ); }
		if (HX_FIELD_EQ(inName,"curv2") ) { return ::hx::Val( curv2 ); }
		if (HX_FIELD_EQ(inName,"pdir1") ) { return ::hx::Val( pdir1 ); }
		if (HX_FIELD_EQ(inName,"pdir2") ) { return ::hx::Val( pdir2 ); }
		if (HX_FIELD_EQ(inName,"ndotv") ) { return ::hx::Val( ndotv ); }
		if (HX_FIELD_EQ(inName,"Dt1q1") ) { return ::hx::Val( Dt1q1 ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"normals") ) { return ::hx::Val( normals ); }
		if (HX_FIELD_EQ(inName,"bsphere") ) { return ::hx::Val( bsphere ); }
		if (HX_FIELD_EQ(inName,"visible") ) { return ::hx::Val( visible_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"vertices") ) { return ::hx::Val( vertices ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pointAreas") ) { return ::hx::Val( pointAreas ); }
		if (HX_FIELD_EQ(inName,"precompute") ) { return ::hx::Val( precompute_dyn() ); }
		if (HX_FIELD_EQ(inName,"computeBVH") ) { return ::hx::Val( computeBVH_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"cornerAreas") ) { return ::hx::Val( cornerAreas ); }
		if (HX_FIELD_EQ(inName,"featureSize") ) { return ::hx::Val( featureSize ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getFaceEdges") ) { return ::hx::Val( getFaceEdges_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"adjacentFaces") ) { return ::hx::Val( adjacentFaces ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"computeNormals") ) { return ::hx::Val( computeNormals_dyn() ); }
		if (HX_FIELD_EQ(inName,"computeBSphere") ) { return ::hx::Val( computeBSphere_dyn() ); }
		if (HX_FIELD_EQ(inName,"apparentRidges") ) { return ::hx::Val( apparentRidges_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"computeVertDt1q1") ) { return ::hx::Val( computeVertDt1q1_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"computePointAreas") ) { return ::hx::Val( computePointAreas_dyn() ); }
		if (HX_FIELD_EQ(inName,"computeCurvatures") ) { return ::hx::Val( computeCurvatures_dyn() ); }
		if (HX_FIELD_EQ(inName,"computeBVHTrivial") ) { return ::hx::Val( computeBVHTrivial_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"computeFeatureSize") ) { return ::hx::Val( computeFeatureSize_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"facesApparentRidges") ) { return ::hx::Val( facesApparentRidges_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"computeAdjacentFaces") ) { return ::hx::Val( computeAdjacentFaces_dyn() ); }
		if (HX_FIELD_EQ(inName,"segmentApparentRidge") ) { return ::hx::Val( segmentApparentRidge_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"computeVertViewDepCurv") ) { return ::hx::Val( computeVertViewDepCurv_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Mesh_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"projCurv") ) { outValue = projCurv_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"rotCoordSys") ) { outValue = rotCoordSys_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"diagonalizeCurv") ) { outValue = diagonalizeCurv_dyn(); return true; }
	}
	return false;
}

::hx::Val Mesh_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bvh") ) { bvh=inValue.Cast<  ::apparentridges::BVHTree >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"t1q1") ) { t1q1=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"faces") ) { faces=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curv1") ) { curv1=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curv2") ) { curv2=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pdir1") ) { pdir1=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pdir2") ) { pdir2=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ndotv") ) { ndotv=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"Dt1q1") ) { Dt1q1=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"normals") ) { normals=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bsphere") ) { bsphere=inValue.Cast<  ::apparentridges::BSphere >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"vertices") ) { vertices=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pointAreas") ) { pointAreas=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"cornerAreas") ) { cornerAreas=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"featureSize") ) { featureSize=inValue.Cast< Float >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"adjacentFaces") ) { adjacentFaces=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Mesh_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("vertices",f9,bf,15,6a));
	outFields->push(HX_("faces",36,55,48,fb));
	outFields->push(HX_("normals",6c,70,da,2b));
	outFields->push(HX_("curv1",7b,4c,58,4e));
	outFields->push(HX_("curv2",7c,4c,58,4e));
	outFields->push(HX_("pdir1",b4,5e,4a,bf));
	outFields->push(HX_("pdir2",b5,5e,4a,bf));
	outFields->push(HX_("pointAreas",d6,a9,43,05));
	outFields->push(HX_("cornerAreas",31,3c,d5,6e));
	outFields->push(HX_("adjacentFaces",14,7d,5d,47));
	outFields->push(HX_("ndotv",3b,c5,81,98));
	outFields->push(HX_("t1q1",1d,51,d2,4c));
	outFields->push(HX_("Dt1q1",61,c3,11,74));
	outFields->push(HX_("bsphere",ef,24,2e,a8));
	outFields->push(HX_("featureSize",97,52,f8,02));
	outFields->push(HX_("bvh",14,c4,4a,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Mesh_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,vertices),HX_("vertices",f9,bf,15,6a)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,faces),HX_("faces",36,55,48,fb)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,normals),HX_("normals",6c,70,da,2b)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Mesh_obj,curv1),HX_("curv1",7b,4c,58,4e)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Mesh_obj,curv2),HX_("curv2",7c,4c,58,4e)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,pdir1),HX_("pdir1",b4,5e,4a,bf)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,pdir2),HX_("pdir2",b5,5e,4a,bf)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Mesh_obj,pointAreas),HX_("pointAreas",d6,a9,43,05)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,cornerAreas),HX_("cornerAreas",31,3c,d5,6e)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,adjacentFaces),HX_("adjacentFaces",14,7d,5d,47)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Mesh_obj,ndotv),HX_("ndotv",3b,c5,81,98)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Mesh_obj,t1q1),HX_("t1q1",1d,51,d2,4c)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Mesh_obj,Dt1q1),HX_("Dt1q1",61,c3,11,74)},
	{::hx::fsObject /*  ::apparentridges::BSphere */ ,(int)offsetof(Mesh_obj,bsphere),HX_("bsphere",ef,24,2e,a8)},
	{::hx::fsFloat,(int)offsetof(Mesh_obj,featureSize),HX_("featureSize",97,52,f8,02)},
	{::hx::fsObject /*  ::apparentridges::BVHTree */ ,(int)offsetof(Mesh_obj,bvh),HX_("bvh",14,c4,4a,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Mesh_obj_sStaticStorageInfo = 0;
#endif

static ::String Mesh_obj_sMemberFields[] = {
	HX_("vertices",f9,bf,15,6a),
	HX_("faces",36,55,48,fb),
	HX_("normals",6c,70,da,2b),
	HX_("curv1",7b,4c,58,4e),
	HX_("curv2",7c,4c,58,4e),
	HX_("pdir1",b4,5e,4a,bf),
	HX_("pdir2",b5,5e,4a,bf),
	HX_("pointAreas",d6,a9,43,05),
	HX_("cornerAreas",31,3c,d5,6e),
	HX_("adjacentFaces",14,7d,5d,47),
	HX_("ndotv",3b,c5,81,98),
	HX_("t1q1",1d,51,d2,4c),
	HX_("Dt1q1",61,c3,11,74),
	HX_("bsphere",ef,24,2e,a8),
	HX_("featureSize",97,52,f8,02),
	HX_("bvh",14,c4,4a,00),
	HX_("precompute",b4,81,74,24),
	HX_("computeNormals",b5,3d,cd,e8),
	HX_("computeBSphere",58,66,b5,99),
	HX_("computeFeatureSize",60,f8,15,4e),
	HX_("computeAdjacentFaces",1d,e7,86,d1),
	HX_("getFaceEdges",43,ec,89,3b),
	HX_("computePointAreas",2d,90,8f,1c),
	HX_("computeCurvatures",4b,e8,8e,60),
	HX_("computeVertViewDepCurv",98,ed,e8,db),
	HX_("computeVertDt1q1",99,5e,6b,1f),
	HX_("segmentApparentRidge",5f,26,c9,e9),
	HX_("facesApparentRidges",f7,71,33,73),
	HX_("apparentRidges",21,16,77,a6),
	HX_("computeBVHTrivial",2c,5a,33,a4),
	HX_("computeBVH",dd,dc,88,34),
	HX_("visible",72,78,24,a3),
	::String(null()) };

::hx::Class Mesh_obj::__mClass;

static ::String Mesh_obj_sStaticFields[] = {
	HX_("rotCoordSys",8f,96,5f,a0),
	HX_("projCurv",33,d1,59,21),
	HX_("diagonalizeCurv",15,fc,79,a6),
	::String(null())
};

void Mesh_obj::__register()
{
	Mesh_obj _hx_dummy;
	Mesh_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.Mesh",9a,9f,4e,61);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Mesh_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Mesh_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Mesh_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Mesh_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mesh_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mesh_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
