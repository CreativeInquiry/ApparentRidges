// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_apparentridges_BBox
#include <apparentridges/BBox.h>
#endif
#ifndef INCLUDED_apparentridges_BVHNode
#include <apparentridges/BVHNode.h>
#endif
#ifndef INCLUDED_apparentridges_BVHTree
#include <apparentridges/BVHTree.h>
#endif
#ifndef INCLUDED_apparentridges_Mesh
#include <apparentridges/Mesh.h>
#endif
#ifndef INCLUDED_apparentridges_Ray
#include <apparentridges/Ray.h>
#endif
#ifndef INCLUDED_apparentridges_RayHit
#include <apparentridges/RayHit.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d3dd37605249d1ef_998_new,"apparentridges.Ray","new",0xe70c684f,"apparentridges.Ray.new","apparentridges/ApparentRidges.hx",998,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_d3dd37605249d1ef_1000_hitBBox,"apparentridges.Ray","hitBBox",0x9793b22b,"apparentridges.Ray.hitBBox","apparentridges/ApparentRidges.hx",1000,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_d3dd37605249d1ef_1021_hitTriangle,"apparentridges.Ray","hitTriangle",0xe8ca6b2a,"apparentridges.Ray.hitTriangle","apparentridges/ApparentRidges.hx",1021,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_d3dd37605249d1ef_1046_hitBVH,"apparentridges.Ray","hitBVH",0xe08956f2,"apparentridges.Ray.hitBVH","apparentridges/ApparentRidges.hx",1046,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_d3dd37605249d1ef_1045_hitBVH,"apparentridges.Ray","hitBVH",0xe08956f2,"apparentridges.Ray.hitBVH","apparentridges/ApparentRidges.hx",1045,0xfeacc84f)
namespace apparentridges{

void Ray_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d3dd37605249d1ef_998_new)
            	}

Dynamic Ray_obj::__CreateEmpty() { return new Ray_obj; }

void *Ray_obj::_hx_vtable = 0;

Dynamic Ray_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Ray_obj > _hx_result = new Ray_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Ray_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5fb79fc5;
}

 ::apparentridges::RayHit Ray_obj::hitBBox( ::apparentridges::BBox bb){
            	HX_GC_STACKFRAME(&_hx_pos_d3dd37605249d1ef_1000_hitBBox)
HXLINE(1001)		Float tx1 = ( (Float)(_hx_array_unsafe_get(bb->min,0)) );
HXDLIN(1001)		Float tx11 = (tx1 - ( (Float)(_hx_array_unsafe_get(this->o,0)) ));
HXDLIN(1001)		Float tx12 = (tx11 / ( (Float)(_hx_array_unsafe_get(this->d,0)) ));
HXLINE(1002)		Float tx2 = ( (Float)(_hx_array_unsafe_get(bb->max,0)) );
HXDLIN(1002)		Float tx21 = (tx2 - ( (Float)(_hx_array_unsafe_get(this->o,0)) ));
HXDLIN(1002)		Float tx22 = (tx21 / ( (Float)(_hx_array_unsafe_get(this->d,0)) ));
HXLINE(1003)		Float ty1 = ( (Float)(_hx_array_unsafe_get(bb->min,1)) );
HXDLIN(1003)		Float ty11 = (ty1 - ( (Float)(_hx_array_unsafe_get(this->o,1)) ));
HXDLIN(1003)		Float ty12 = (ty11 / ( (Float)(_hx_array_unsafe_get(this->d,1)) ));
HXLINE(1004)		Float ty2 = ( (Float)(_hx_array_unsafe_get(bb->max,1)) );
HXDLIN(1004)		Float ty21 = (ty2 - ( (Float)(_hx_array_unsafe_get(this->o,1)) ));
HXDLIN(1004)		Float ty22 = (ty21 / ( (Float)(_hx_array_unsafe_get(this->d,1)) ));
HXLINE(1005)		Float tz1 = ( (Float)(_hx_array_unsafe_get(bb->min,2)) );
HXDLIN(1005)		Float tz11 = (tz1 - ( (Float)(_hx_array_unsafe_get(this->o,2)) ));
HXDLIN(1005)		Float tz12 = (tz11 / ( (Float)(_hx_array_unsafe_get(this->d,2)) ));
HXLINE(1006)		Float tz2 = ( (Float)(_hx_array_unsafe_get(bb->max,2)) );
HXDLIN(1006)		Float tz21 = (tz2 - ( (Float)(_hx_array_unsafe_get(this->o,2)) ));
HXDLIN(1006)		Float tz22 = (tz21 / ( (Float)(_hx_array_unsafe_get(this->d,2)) ));
HXLINE(1008)		Float t1 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx12,tx22),::Math_obj::min(ty12,ty22)),::Math_obj::min(tz12,tz22));
HXLINE(1009)		Float t2 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx12,tx22),::Math_obj::max(ty12,ty22)),::Math_obj::max(tz12,tz22));
HXLINE(1010)		if (((t2 - t1) < 0)) {
HXLINE(1011)			return null();
            		}
HXLINE(1013)		bool _hx_tmp;
HXDLIN(1013)		if (!((t1 > this->tmax))) {
HXLINE(1013)			_hx_tmp = (t2 < this->tmin);
            		}
            		else {
HXLINE(1013)			_hx_tmp = true;
            		}
HXDLIN(1013)		if (_hx_tmp) {
HXLINE(1014)			return null();
            		}
HXLINE(1016)		 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t1);
HXLINE(1017)		h->t2 = t2;
HXLINE(1018)		return h;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Ray_obj,hitBBox,return )

 ::apparentridges::RayHit Ray_obj::hitTriangle(::Array< Float > p0,::Array< Float > p1,::Array< Float > p2){
            	HX_GC_STACKFRAME(&_hx_pos_d3dd37605249d1ef_1021_hitTriangle)
HXLINE(1022)		Float _x = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1022)		Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1022)		Float _y = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN(1022)		Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1022)		Float _z = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN(1022)		Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1022)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1022)		::Array< Float > this2 = this1;
HXDLIN(1022)		this2->__unsafe_set(0,_x1);
HXDLIN(1022)		this2->__unsafe_set(1,_y1);
HXDLIN(1022)		this2->__unsafe_set(2,_z1);
HXDLIN(1022)		::Array< Float > e1 = this2;
HXLINE(1023)		Float _x2 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1023)		Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1023)		Float _y2 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN(1023)		Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1023)		Float _z2 = ( (Float)(_hx_array_unsafe_get(p2,2)) );
HXDLIN(1023)		Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1023)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1023)		::Array< Float > this4 = this3;
HXDLIN(1023)		this4->__unsafe_set(0,_x3);
HXDLIN(1023)		this4->__unsafe_set(1,_y3);
HXDLIN(1023)		this4->__unsafe_set(2,_z3);
HXDLIN(1023)		::Array< Float > e2 = this4;
HXLINE(1024)		::Array< Float > this5 = this->o;
HXDLIN(1024)		Float _x4 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN(1024)		Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1024)		Float _y4 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN(1024)		Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1024)		Float _z4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN(1024)		Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1024)		::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1024)		::Array< Float > this7 = this6;
HXDLIN(1024)		this7->__unsafe_set(0,_x5);
HXDLIN(1024)		this7->__unsafe_set(1,_y5);
HXDLIN(1024)		this7->__unsafe_set(2,_z5);
HXDLIN(1024)		::Array< Float > s = this7;
HXLINE(1028)		::Array< Float > this8 = this->d;
HXDLIN(1028)		Float _x6 = (( (Float)(_hx_array_unsafe_get(this8,0)) ) * ((Float)-1.0));
HXDLIN(1028)		Float _y6 = (( (Float)(_hx_array_unsafe_get(this8,1)) ) * ((Float)-1.0));
HXDLIN(1028)		Float _z6 = (( (Float)(_hx_array_unsafe_get(this8,2)) ) * ((Float)-1.0));
HXDLIN(1028)		::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1028)		::Array< Float > this10 = this9;
HXDLIN(1028)		this10->__unsafe_set(0,_x6);
HXDLIN(1028)		this10->__unsafe_set(1,_y6);
HXDLIN(1028)		this10->__unsafe_set(2,_z6);
HXDLIN(1028)		::Array< Float > _d = this10;
HXLINE(1029)		Float _x7 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1029)		Float _x8 = (_x7 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1029)		Float _x9 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1029)		Float _x10 = (_x8 - (_x9 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1029)		Float _y7 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1029)		Float _y8 = (_y7 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1029)		Float _y9 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1029)		Float _y10 = (_y8 - (_y9 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1029)		Float _z7 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1029)		Float _z8 = (_z7 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1029)		Float _z9 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1029)		Float _z10 = (_z8 - (_z9 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1029)		::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1029)		::Array< Float > this12 = this11;
HXDLIN(1029)		this12->__unsafe_set(0,_x10);
HXDLIN(1029)		this12->__unsafe_set(1,_y10);
HXDLIN(1029)		this12->__unsafe_set(2,_z10);
HXDLIN(1029)		::Array< Float > v1 = this12;
HXDLIN(1029)		Float denom = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1029)		Float denom1 = (denom * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1029)		Float denom2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1029)		Float denom3 = (denom1 + (denom2 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1029)		Float denom4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1029)		Float denom5 = (denom3 + (denom4 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXLINE(1030)		if ((denom5 == 0)) {
HXLINE(1031)			return null();
            		}
HXLINE(1033)		Float _x11 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1033)		Float _x12 = (_x11 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1033)		Float _x13 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1033)		Float _x14 = (_x12 - (_x13 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1033)		Float _y11 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1033)		Float _y12 = (_y11 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1033)		Float _y13 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1033)		Float _y14 = (_y12 - (_y13 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1033)		Float _z11 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1033)		Float _z12 = (_z11 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1033)		Float _z13 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1033)		Float _z14 = (_z12 - (_z13 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1033)		::Array< Float > this13 = ::Array_obj< Float >::__new(3);
HXDLIN(1033)		::Array< Float > this14 = this13;
HXDLIN(1033)		this14->__unsafe_set(0,_x14);
HXDLIN(1033)		this14->__unsafe_set(1,_y14);
HXDLIN(1033)		this14->__unsafe_set(2,_z14);
HXDLIN(1033)		::Array< Float > v11 = this14;
HXDLIN(1033)		Float _x15 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(1033)		Float _x16 = (_x15 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1033)		Float _x17 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(1033)		Float _x18 = (_x16 + (_x17 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1033)		Float _x19 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(1033)		Float _x20 = (_x18 + (_x19 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1033)		Float _x21 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1033)		Float _x22 = (_x21 * ( (Float)(_hx_array_unsafe_get(s,2)) ));
HXDLIN(1033)		Float _x23 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1033)		Float _x24 = (_x22 - (_x23 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1033)		Float _y15 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1033)		Float _y16 = (_y15 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1033)		Float _y17 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1033)		Float _y18 = (_y16 - (_y17 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1033)		Float _z15 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1033)		Float _z16 = (_z15 * ( (Float)(_hx_array_unsafe_get(s,1)) ));
HXDLIN(1033)		Float _z17 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1033)		Float _z18 = (_z16 - (_z17 * ( (Float)(_hx_array_unsafe_get(s,0)) )));
HXDLIN(1033)		::Array< Float > this15 = ::Array_obj< Float >::__new(3);
HXDLIN(1033)		::Array< Float > this16 = this15;
HXDLIN(1033)		this16->__unsafe_set(0,_x24);
HXDLIN(1033)		this16->__unsafe_set(1,_y18);
HXDLIN(1033)		this16->__unsafe_set(2,_z18);
HXDLIN(1033)		::Array< Float > v12 = this16;
HXDLIN(1033)		Float _y19 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN(1033)		Float _y20 = (_y19 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1033)		Float _y21 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN(1033)		Float _y22 = (_y20 + (_y21 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1033)		Float _y23 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN(1033)		Float _y24 = (_y22 + (_y23 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1033)		Float _x25 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1033)		Float _x26 = (_x25 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1033)		Float _x27 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1033)		Float _x28 = (_x26 - (_x27 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1033)		Float _y25 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1033)		Float _y26 = (_y25 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1033)		Float _y27 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1033)		Float _y28 = (_y26 - (_y27 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1033)		Float _z19 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1033)		Float _z20 = (_z19 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1033)		Float _z21 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1033)		Float _z22 = (_z20 - (_z21 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1033)		::Array< Float > this17 = ::Array_obj< Float >::__new(3);
HXDLIN(1033)		::Array< Float > this18 = this17;
HXDLIN(1033)		this18->__unsafe_set(0,_x28);
HXDLIN(1033)		this18->__unsafe_set(1,_y28);
HXDLIN(1033)		this18->__unsafe_set(2,_z22);
HXDLIN(1033)		::Array< Float > v13 = this18;
HXDLIN(1033)		Float _z23 = ( (Float)(_hx_array_unsafe_get(v13,0)) );
HXDLIN(1033)		Float _z24 = (_z23 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1033)		Float _z25 = ( (Float)(_hx_array_unsafe_get(v13,1)) );
HXDLIN(1033)		Float _z26 = (_z24 + (_z25 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1033)		Float _z27 = ( (Float)(_hx_array_unsafe_get(v13,2)) );
HXDLIN(1033)		Float _z28 = (_z26 + (_z27 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1033)		::Array< Float > this19 = ::Array_obj< Float >::__new(3);
HXDLIN(1033)		::Array< Float > this20 = this19;
HXDLIN(1033)		this20->__unsafe_set(0,_x20);
HXDLIN(1033)		this20->__unsafe_set(1,_y24);
HXDLIN(1033)		this20->__unsafe_set(2,_z28);
HXDLIN(1033)		::Array< Float > this21 = this20;
HXDLIN(1033)		Float rhs = (( (Float)(1) ) / denom5);
HXDLIN(1033)		Float _x29 = (( (Float)(_hx_array_unsafe_get(this21,0)) ) * rhs);
HXDLIN(1033)		Float _y29 = (( (Float)(_hx_array_unsafe_get(this21,1)) ) * rhs);
HXDLIN(1033)		Float _z29 = (( (Float)(_hx_array_unsafe_get(this21,2)) ) * rhs);
HXDLIN(1033)		::Array< Float > this22 = ::Array_obj< Float >::__new(3);
HXDLIN(1033)		::Array< Float > this23 = this22;
HXDLIN(1033)		this23->__unsafe_set(0,_x29);
HXDLIN(1033)		this23->__unsafe_set(1,_y29);
HXDLIN(1033)		this23->__unsafe_set(2,_z29);
HXDLIN(1033)		::Array< Float > uvt = this23;
HXLINE(1034)		Float u = ( (Float)(_hx_array_unsafe_get(uvt,0)) );
HXLINE(1035)		Float v = ( (Float)(_hx_array_unsafe_get(uvt,1)) );
HXLINE(1036)		Float t = ( (Float)(_hx_array_unsafe_get(uvt,2)) );
HXLINE(1037)		bool _hx_tmp;
HXDLIN(1037)		bool _hx_tmp1;
HXDLIN(1037)		bool _hx_tmp2;
HXDLIN(1037)		bool _hx_tmp3;
HXDLIN(1037)		if (!((u < 0))) {
HXLINE(1037)			_hx_tmp3 = (v < 0);
            		}
            		else {
HXLINE(1037)			_hx_tmp3 = true;
            		}
HXDLIN(1037)		if (!(_hx_tmp3)) {
HXLINE(1037)			_hx_tmp2 = (((( (Float)(1) ) - u) - v) < 0);
            		}
            		else {
HXLINE(1037)			_hx_tmp2 = true;
            		}
HXDLIN(1037)		if (!(_hx_tmp2)) {
HXLINE(1037)			_hx_tmp1 = (t < this->tmin);
            		}
            		else {
HXLINE(1037)			_hx_tmp1 = true;
            		}
HXDLIN(1037)		if (!(_hx_tmp1)) {
HXLINE(1037)			_hx_tmp = (t > this->tmax);
            		}
            		else {
HXLINE(1037)			_hx_tmp = true;
            		}
HXDLIN(1037)		if (_hx_tmp) {
HXLINE(1038)			return null();
            		}
HXLINE(1040)		 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t);
HXLINE(1041)		h->u = u;
HXLINE(1042)		h->v = v;
HXLINE(1043)		return h;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Ray_obj,hitTriangle,return )

 ::apparentridges::RayHit Ray_obj::hitBVH( ::apparentridges::BVHTree bvh){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0, ::apparentridges::Ray,_gthis, ::apparentridges::BVHTree,bvh,::Array< ::Dynamic>,hitNode) HXARGC(1)
            		 ::apparentridges::RayHit _hx_run( ::apparentridges::BVHNode node){
            			HX_GC_STACKFRAME(&_hx_pos_d3dd37605249d1ef_1046_hitBVH)
HXLINE(1047)			bool _hx_tmp;
HXDLIN(1047)			if (::hx::IsNull( node->left )) {
HXLINE(1047)				_hx_tmp = ::hx::IsNull( node->right );
            			}
            			else {
HXLINE(1047)				_hx_tmp = false;
            			}
HXDLIN(1047)			if (_hx_tmp) {
HXLINE(1049)				Float tmin = ::Math_obj::POSITIVE_INFINITY;
HXLINE(1050)				 ::apparentridges::RayHit closest = null();
HXLINE(1051)				{
HXLINE(1051)					int _g = node->begin;
HXDLIN(1051)					int _g1 = node->end;
HXDLIN(1051)					while((_g < _g1)){
HXLINE(1051)						_g = (_g + 1);
HXDLIN(1051)						int i = (_g - 1);
HXLINE(1052)						::Array< Float > p0 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN(1052)						::Array< Float > p1 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN(1052)						::Array< Float > p2 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN(1052)						Float _x = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1052)						Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1052)						Float _y = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN(1052)						Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1052)						Float _z = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN(1052)						Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1052)						::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)						::Array< Float > this2 = this1;
HXDLIN(1052)						this2->__unsafe_set(0,_x1);
HXDLIN(1052)						this2->__unsafe_set(1,_y1);
HXDLIN(1052)						this2->__unsafe_set(2,_z1);
HXDLIN(1052)						::Array< Float > e1 = this2;
HXDLIN(1052)						Float _x2 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1052)						Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1052)						Float _y2 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN(1052)						Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1052)						Float _z2 = ( (Float)(_hx_array_unsafe_get(p2,2)) );
HXDLIN(1052)						Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1052)						::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)						::Array< Float > this4 = this3;
HXDLIN(1052)						this4->__unsafe_set(0,_x3);
HXDLIN(1052)						this4->__unsafe_set(1,_y3);
HXDLIN(1052)						this4->__unsafe_set(2,_z3);
HXDLIN(1052)						::Array< Float > e2 = this4;
HXDLIN(1052)						::Array< Float > this5 = _gthis->o;
HXDLIN(1052)						Float _x4 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN(1052)						Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1052)						Float _y4 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN(1052)						Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1052)						Float _z4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN(1052)						Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1052)						::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)						::Array< Float > this7 = this6;
HXDLIN(1052)						this7->__unsafe_set(0,_x5);
HXDLIN(1052)						this7->__unsafe_set(1,_y5);
HXDLIN(1052)						this7->__unsafe_set(2,_z5);
HXDLIN(1052)						::Array< Float > s = this7;
HXDLIN(1052)						::Array< Float > this8 = _gthis->d;
HXDLIN(1052)						Float _x6 = (( (Float)(_hx_array_unsafe_get(this8,0)) ) * ((Float)-1.0));
HXDLIN(1052)						Float _y6 = (( (Float)(_hx_array_unsafe_get(this8,1)) ) * ((Float)-1.0));
HXDLIN(1052)						Float _z6 = (( (Float)(_hx_array_unsafe_get(this8,2)) ) * ((Float)-1.0));
HXDLIN(1052)						::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)						::Array< Float > this10 = this9;
HXDLIN(1052)						this10->__unsafe_set(0,_x6);
HXDLIN(1052)						this10->__unsafe_set(1,_y6);
HXDLIN(1052)						this10->__unsafe_set(2,_z6);
HXDLIN(1052)						::Array< Float > _d = this10;
HXDLIN(1052)						Float _x7 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)						Float _x8 = (_x7 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1052)						Float _x9 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)						Float _x10 = (_x8 - (_x9 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1052)						Float _y7 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)						Float _y8 = (_y7 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1052)						Float _y9 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)						Float _y10 = (_y8 - (_y9 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1052)						Float _z7 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)						Float _z8 = (_z7 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1052)						Float _z9 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)						Float _z10 = (_z8 - (_z9 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1052)						::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)						::Array< Float > this12 = this11;
HXDLIN(1052)						this12->__unsafe_set(0,_x10);
HXDLIN(1052)						this12->__unsafe_set(1,_y10);
HXDLIN(1052)						this12->__unsafe_set(2,_z10);
HXDLIN(1052)						::Array< Float > v1 = this12;
HXDLIN(1052)						Float denom = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1052)						Float denom1 = (denom * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1052)						Float denom2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1052)						Float denom3 = (denom1 + (denom2 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1052)						Float denom4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1052)						Float denom5 = (denom3 + (denom4 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1052)						 ::apparentridges::RayHit h;
HXDLIN(1052)						if ((denom5 == 0)) {
HXLINE(1052)							h = null();
            						}
            						else {
HXLINE(1052)							Float _x = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1052)							Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1052)							Float _x2 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1052)							Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1052)							Float _y = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1052)							Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1052)							Float _y2 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1052)							Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1052)							Float _z = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1052)							Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1052)							Float _z2 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1052)							Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1052)							::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)							::Array< Float > this2 = this1;
HXDLIN(1052)							this2->__unsafe_set(0,_x3);
HXDLIN(1052)							this2->__unsafe_set(1,_y3);
HXDLIN(1052)							this2->__unsafe_set(2,_z3);
HXDLIN(1052)							::Array< Float > v1 = this2;
HXDLIN(1052)							Float _x4 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1052)							Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1052)							Float _x6 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1052)							Float _x7 = (_x5 + (_x6 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1052)							Float _x8 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1052)							Float _x9 = (_x7 + (_x8 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1052)							Float _x10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)							Float _x11 = (_x10 * ( (Float)(_hx_array_unsafe_get(s,2)) ));
HXDLIN(1052)							Float _x12 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)							Float _x13 = (_x11 - (_x12 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1052)							Float _y4 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)							Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1052)							Float _y6 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)							Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1052)							Float _z4 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)							Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(s,1)) ));
HXDLIN(1052)							Float _z6 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)							Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(s,0)) )));
HXDLIN(1052)							::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)							::Array< Float > this4 = this3;
HXDLIN(1052)							this4->__unsafe_set(0,_x13);
HXDLIN(1052)							this4->__unsafe_set(1,_y7);
HXDLIN(1052)							this4->__unsafe_set(2,_z7);
HXDLIN(1052)							::Array< Float > v11 = this4;
HXDLIN(1052)							Float _y8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(1052)							Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1052)							Float _y10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(1052)							Float _y11 = (_y9 + (_y10 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1052)							Float _y12 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(1052)							Float _y13 = (_y11 + (_y12 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1052)							Float _x14 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)							Float _x15 = (_x14 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1052)							Float _x16 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)							Float _x17 = (_x15 - (_x16 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1052)							Float _y14 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1052)							Float _y15 = (_y14 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1052)							Float _y16 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)							Float _y17 = (_y15 - (_y16 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1052)							Float _z8 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1052)							Float _z9 = (_z8 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1052)							Float _z10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1052)							Float _z11 = (_z9 - (_z10 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1052)							::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)							::Array< Float > this6 = this5;
HXDLIN(1052)							this6->__unsafe_set(0,_x17);
HXDLIN(1052)							this6->__unsafe_set(1,_y17);
HXDLIN(1052)							this6->__unsafe_set(2,_z11);
HXDLIN(1052)							::Array< Float > v12 = this6;
HXDLIN(1052)							Float _z12 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN(1052)							Float _z13 = (_z12 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1052)							Float _z14 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN(1052)							Float _z15 = (_z13 + (_z14 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1052)							Float _z16 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN(1052)							Float _z17 = (_z15 + (_z16 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1052)							::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)							::Array< Float > this8 = this7;
HXDLIN(1052)							this8->__unsafe_set(0,_x9);
HXDLIN(1052)							this8->__unsafe_set(1,_y13);
HXDLIN(1052)							this8->__unsafe_set(2,_z17);
HXDLIN(1052)							::Array< Float > this9 = this8;
HXDLIN(1052)							Float rhs = (( (Float)(1) ) / denom5);
HXDLIN(1052)							Float _x18 = (( (Float)(_hx_array_unsafe_get(this9,0)) ) * rhs);
HXDLIN(1052)							Float _y18 = (( (Float)(_hx_array_unsafe_get(this9,1)) ) * rhs);
HXDLIN(1052)							Float _z18 = (( (Float)(_hx_array_unsafe_get(this9,2)) ) * rhs);
HXDLIN(1052)							::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN(1052)							::Array< Float > this11 = this10;
HXDLIN(1052)							this11->__unsafe_set(0,_x18);
HXDLIN(1052)							this11->__unsafe_set(1,_y18);
HXDLIN(1052)							this11->__unsafe_set(2,_z18);
HXDLIN(1052)							::Array< Float > uvt = this11;
HXDLIN(1052)							Float u = ( (Float)(_hx_array_unsafe_get(uvt,0)) );
HXDLIN(1052)							Float v = ( (Float)(_hx_array_unsafe_get(uvt,1)) );
HXDLIN(1052)							Float t = ( (Float)(_hx_array_unsafe_get(uvt,2)) );
HXDLIN(1052)							bool h1;
HXDLIN(1052)							bool h2;
HXDLIN(1052)							bool h3;
HXDLIN(1052)							bool h4;
HXDLIN(1052)							if (!((u < 0))) {
HXLINE(1052)								h4 = (v < 0);
            							}
            							else {
HXLINE(1052)								h4 = true;
            							}
HXDLIN(1052)							if (!(h4)) {
HXLINE(1052)								h3 = (((( (Float)(1) ) - u) - v) < 0);
            							}
            							else {
HXLINE(1052)								h3 = true;
            							}
HXDLIN(1052)							if (!(h3)) {
HXLINE(1052)								h2 = (t < _gthis->tmin);
            							}
            							else {
HXLINE(1052)								h2 = true;
            							}
HXDLIN(1052)							if (!(h2)) {
HXLINE(1052)								h1 = (t > _gthis->tmax);
            							}
            							else {
HXLINE(1052)								h1 = true;
            							}
HXDLIN(1052)							if (h1) {
HXLINE(1052)								h = null();
            							}
            							else {
HXLINE(1052)								 ::apparentridges::RayHit h1 =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t);
HXDLIN(1052)								h1->u = u;
HXDLIN(1052)								h1->v = v;
HXDLIN(1052)								h = h1;
            							}
            						}
HXLINE(1057)						if (::hx::IsNotNull( h )) {
HXLINE(1058)							h->face = bvh->faces->__get(i).StaticCast< ::Array< int > >();
HXLINE(1059)							if ((tmin > h->t)) {
HXLINE(1060)								tmin = h->t;
HXLINE(1061)								closest = h;
            							}
            						}
            					}
            				}
HXLINE(1065)				return closest;
            			}
HXLINE(1067)			 ::apparentridges::BBox bb = node->left->bbox;
HXDLIN(1067)			Float tx1 = ( (Float)(_hx_array_unsafe_get(bb->min,0)) );
HXDLIN(1067)			Float tx11 = (tx1 - ( (Float)(_hx_array_unsafe_get(_gthis->o,0)) ));
HXDLIN(1067)			Float tx12 = (tx11 / ( (Float)(_hx_array_unsafe_get(_gthis->d,0)) ));
HXDLIN(1067)			Float tx2 = ( (Float)(_hx_array_unsafe_get(bb->max,0)) );
HXDLIN(1067)			Float tx21 = (tx2 - ( (Float)(_hx_array_unsafe_get(_gthis->o,0)) ));
HXDLIN(1067)			Float tx22 = (tx21 / ( (Float)(_hx_array_unsafe_get(_gthis->d,0)) ));
HXDLIN(1067)			Float ty1 = ( (Float)(_hx_array_unsafe_get(bb->min,1)) );
HXDLIN(1067)			Float ty11 = (ty1 - ( (Float)(_hx_array_unsafe_get(_gthis->o,1)) ));
HXDLIN(1067)			Float ty12 = (ty11 / ( (Float)(_hx_array_unsafe_get(_gthis->d,1)) ));
HXDLIN(1067)			Float ty2 = ( (Float)(_hx_array_unsafe_get(bb->max,1)) );
HXDLIN(1067)			Float ty21 = (ty2 - ( (Float)(_hx_array_unsafe_get(_gthis->o,1)) ));
HXDLIN(1067)			Float ty22 = (ty21 / ( (Float)(_hx_array_unsafe_get(_gthis->d,1)) ));
HXDLIN(1067)			Float tz1 = ( (Float)(_hx_array_unsafe_get(bb->min,2)) );
HXDLIN(1067)			Float tz11 = (tz1 - ( (Float)(_hx_array_unsafe_get(_gthis->o,2)) ));
HXDLIN(1067)			Float tz12 = (tz11 / ( (Float)(_hx_array_unsafe_get(_gthis->d,2)) ));
HXDLIN(1067)			Float tz2 = ( (Float)(_hx_array_unsafe_get(bb->max,2)) );
HXDLIN(1067)			Float tz21 = (tz2 - ( (Float)(_hx_array_unsafe_get(_gthis->o,2)) ));
HXDLIN(1067)			Float tz22 = (tz21 / ( (Float)(_hx_array_unsafe_get(_gthis->d,2)) ));
HXDLIN(1067)			Float t1 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx12,tx22),::Math_obj::min(ty12,ty22)),::Math_obj::min(tz12,tz22));
HXDLIN(1067)			Float t2 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx12,tx22),::Math_obj::max(ty12,ty22)),::Math_obj::max(tz12,tz22));
HXDLIN(1067)			 ::apparentridges::RayHit hitL;
HXDLIN(1067)			if (((t2 - t1) < 0)) {
HXLINE(1067)				hitL = null();
            			}
            			else {
HXLINE(1067)				bool hitL1;
HXDLIN(1067)				if (!((t1 > _gthis->tmax))) {
HXLINE(1067)					hitL1 = (t2 < _gthis->tmin);
            				}
            				else {
HXLINE(1067)					hitL1 = true;
            				}
HXDLIN(1067)				if (hitL1) {
HXLINE(1067)					hitL = null();
            				}
            				else {
HXLINE(1067)					 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t1);
HXDLIN(1067)					h->t2 = t2;
HXDLIN(1067)					hitL = h;
            				}
            			}
HXLINE(1068)			 ::apparentridges::BBox bb1 = node->right->bbox;
HXDLIN(1068)			Float tx13 = ( (Float)(_hx_array_unsafe_get(bb1->min,0)) );
HXDLIN(1068)			Float tx14 = (tx13 - ( (Float)(_hx_array_unsafe_get(_gthis->o,0)) ));
HXDLIN(1068)			Float tx15 = (tx14 / ( (Float)(_hx_array_unsafe_get(_gthis->d,0)) ));
HXDLIN(1068)			Float tx23 = ( (Float)(_hx_array_unsafe_get(bb1->max,0)) );
HXDLIN(1068)			Float tx24 = (tx23 - ( (Float)(_hx_array_unsafe_get(_gthis->o,0)) ));
HXDLIN(1068)			Float tx25 = (tx24 / ( (Float)(_hx_array_unsafe_get(_gthis->d,0)) ));
HXDLIN(1068)			Float ty13 = ( (Float)(_hx_array_unsafe_get(bb1->min,1)) );
HXDLIN(1068)			Float ty14 = (ty13 - ( (Float)(_hx_array_unsafe_get(_gthis->o,1)) ));
HXDLIN(1068)			Float ty15 = (ty14 / ( (Float)(_hx_array_unsafe_get(_gthis->d,1)) ));
HXDLIN(1068)			Float ty23 = ( (Float)(_hx_array_unsafe_get(bb1->max,1)) );
HXDLIN(1068)			Float ty24 = (ty23 - ( (Float)(_hx_array_unsafe_get(_gthis->o,1)) ));
HXDLIN(1068)			Float ty25 = (ty24 / ( (Float)(_hx_array_unsafe_get(_gthis->d,1)) ));
HXDLIN(1068)			Float tz13 = ( (Float)(_hx_array_unsafe_get(bb1->min,2)) );
HXDLIN(1068)			Float tz14 = (tz13 - ( (Float)(_hx_array_unsafe_get(_gthis->o,2)) ));
HXDLIN(1068)			Float tz15 = (tz14 / ( (Float)(_hx_array_unsafe_get(_gthis->d,2)) ));
HXDLIN(1068)			Float tz23 = ( (Float)(_hx_array_unsafe_get(bb1->max,2)) );
HXDLIN(1068)			Float tz24 = (tz23 - ( (Float)(_hx_array_unsafe_get(_gthis->o,2)) ));
HXDLIN(1068)			Float tz25 = (tz24 / ( (Float)(_hx_array_unsafe_get(_gthis->d,2)) ));
HXDLIN(1068)			Float t11 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx15,tx25),::Math_obj::min(ty15,ty25)),::Math_obj::min(tz15,tz25));
HXDLIN(1068)			Float t21 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx15,tx25),::Math_obj::max(ty15,ty25)),::Math_obj::max(tz15,tz25));
HXDLIN(1068)			 ::apparentridges::RayHit hitR;
HXDLIN(1068)			if (((t21 - t11) < 0)) {
HXLINE(1068)				hitR = null();
            			}
            			else {
HXLINE(1068)				bool hitR1;
HXDLIN(1068)				if (!((t11 > _gthis->tmax))) {
HXLINE(1068)					hitR1 = (t21 < _gthis->tmin);
            				}
            				else {
HXLINE(1068)					hitR1 = true;
            				}
HXDLIN(1068)				if (hitR1) {
HXLINE(1068)					hitR = null();
            				}
            				else {
HXLINE(1068)					 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t11);
HXDLIN(1068)					h->t2 = t21;
HXDLIN(1068)					hitR = h;
            				}
            			}
HXLINE(1069)			bool _hx_tmp1;
HXDLIN(1069)			if (::hx::IsNotNull( hitL )) {
HXLINE(1069)				_hx_tmp1 = ::hx::IsNull( hitR );
            			}
            			else {
HXLINE(1069)				_hx_tmp1 = false;
            			}
HXDLIN(1069)			if (_hx_tmp1) {
HXLINE(1070)				return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->left)) );
            			}
            			else {
HXLINE(1071)				bool _hx_tmp;
HXDLIN(1071)				if (::hx::IsNull( hitL )) {
HXLINE(1071)					_hx_tmp = ::hx::IsNotNull( hitR );
            				}
            				else {
HXLINE(1071)					_hx_tmp = false;
            				}
HXDLIN(1071)				if (_hx_tmp) {
HXLINE(1072)					return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->right)) );
            				}
            				else {
HXLINE(1073)					bool _hx_tmp;
HXDLIN(1073)					if (::hx::IsNull( hitL )) {
HXLINE(1073)						_hx_tmp = ::hx::IsNull( hitR );
            					}
            					else {
HXLINE(1073)						_hx_tmp = false;
            					}
HXDLIN(1073)					if (_hx_tmp) {
HXLINE(1074)						return null();
            					}
            				}
            			}
HXLINE(1076)			 ::apparentridges::BVHNode first;
HXLINE(1077)			 ::apparentridges::BVHNode second;
HXLINE(1078)			if ((hitL->t < hitR->t)) {
HXLINE(1079)				first = node->left;
HXLINE(1080)				second = node->right;
            			}
            			else {
HXLINE(1082)				first = node->right;
HXLINE(1083)				second = node->left;
            			}
HXLINE(1085)			 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(first)) );
HXLINE(1086)			bool _hx_tmp2;
HXDLIN(1086)			if (::hx::IsNotNull( h )) {
HXLINE(1086)				_hx_tmp2 = (h->t >= ::Math_obj::max(hitL->t,hitR->t));
            			}
            			else {
HXLINE(1086)				_hx_tmp2 = true;
            			}
HXDLIN(1086)			if (_hx_tmp2) {
HXLINE(1087)				 ::apparentridges::RayHit h2 = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(second)) );
HXLINE(1088)				if (::hx::IsNotNull( h2 )) {
HXLINE(1089)					bool _hx_tmp;
HXDLIN(1089)					if (::hx::IsNotNull( h )) {
HXLINE(1089)						_hx_tmp = (h2->t < h->t);
            					}
            					else {
HXLINE(1089)						_hx_tmp = true;
            					}
HXDLIN(1089)					if (_hx_tmp) {
HXLINE(1090)						return h2;
            					}
            				}
            			}
HXLINE(1094)			return h;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_d3dd37605249d1ef_1045_hitBVH)
HXDLIN(1045)		 ::apparentridges::Ray _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1046)		::Array< ::Dynamic> hitNode = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN(1046)		hitNode[0] =  ::Dynamic(new _hx_Closure_0(_gthis,bvh,hitNode));
HXLINE(1096)		return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(bvh->root)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(Ray_obj,hitBVH,return )


::hx::ObjectPtr< Ray_obj > Ray_obj::__new() {
	::hx::ObjectPtr< Ray_obj > __this = new Ray_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Ray_obj > Ray_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Ray_obj *__this = (Ray_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Ray_obj), true, "apparentridges.Ray"));
	*(void **)__this = Ray_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Ray_obj::Ray_obj()
{
}

void Ray_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Ray);
	HX_MARK_MEMBER_NAME(o,"o");
	HX_MARK_MEMBER_NAME(d,"d");
	HX_MARK_MEMBER_NAME(tmin,"tmin");
	HX_MARK_MEMBER_NAME(tmax,"tmax");
	HX_MARK_END_CLASS();
}

void Ray_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(o,"o");
	HX_VISIT_MEMBER_NAME(d,"d");
	HX_VISIT_MEMBER_NAME(tmin,"tmin");
	HX_VISIT_MEMBER_NAME(tmax,"tmax");
}

::hx::Val Ray_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"o") ) { return ::hx::Val( o ); }
		if (HX_FIELD_EQ(inName,"d") ) { return ::hx::Val( d ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"tmin") ) { return ::hx::Val( tmin ); }
		if (HX_FIELD_EQ(inName,"tmax") ) { return ::hx::Val( tmax ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"hitBVH") ) { return ::hx::Val( hitBVH_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hitBBox") ) { return ::hx::Val( hitBBox_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"hitTriangle") ) { return ::hx::Val( hitTriangle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Ray_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"d") ) { d=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"tmin") ) { tmin=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tmax") ) { tmax=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Ray_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("o",6f,00,00,00));
	outFields->push(HX_("d",64,00,00,00));
	outFields->push(HX_("tmin",9e,d1,ff,4c));
	outFields->push(HX_("tmax",b0,ca,ff,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Ray_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Ray_obj,o),HX_("o",6f,00,00,00)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(Ray_obj,d),HX_("d",64,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Ray_obj,tmin),HX_("tmin",9e,d1,ff,4c)},
	{::hx::fsFloat,(int)offsetof(Ray_obj,tmax),HX_("tmax",b0,ca,ff,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Ray_obj_sStaticStorageInfo = 0;
#endif

static ::String Ray_obj_sMemberFields[] = {
	HX_("o",6f,00,00,00),
	HX_("d",64,00,00,00),
	HX_("tmin",9e,d1,ff,4c),
	HX_("tmax",b0,ca,ff,4c),
	HX_("hitBBox",bc,f6,7e,d6),
	HX_("hitTriangle",3b,cc,c1,35),
	HX_("hitBVH",81,8f,0f,57),
	::String(null()) };

::hx::Class Ray_obj::__mClass;

void Ray_obj::__register()
{
	Ray_obj _hx_dummy;
	Ray_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.Ray",dd,94,e8,a6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Ray_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Ray_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Ray_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Ray_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
