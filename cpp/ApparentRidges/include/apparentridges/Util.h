// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_Util
#define INCLUDED_apparentridges_Util

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(apparentridges,Util)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES Util_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Util_obj OBJ_;
		Util_obj();

	public:
		enum { _hx_ClassId = 0x4f27c263 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="apparentridges.Util")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"apparentridges.Util"); }

		inline static ::hx::ObjectPtr< Util_obj > __new() {
			::hx::ObjectPtr< Util_obj > __this = new Util_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Util_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Util_obj *__this = (Util_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Util_obj), false, "apparentridges.Util"));
			*(void **)__this = Util_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Util_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Util",22,84,87,38); }

		static int rndInt(Float x);
		static ::Dynamic rndInt_dyn();

		static int min(int a,int b);
		static ::Dynamic min_dyn();

		static Float sq(Float x);
		static ::Dynamic sq_dyn();

		static int nextMod3(int i);
		static ::Dynamic nextMod3_dyn();

		static int prevMod3(int i);
		static ::Dynamic prevMod3_dyn();

		static ::Array< Float > trinorm(::Array< Float > v0,::Array< Float > v1,::Array< Float > v2);
		static ::Dynamic trinorm_dyn();

		static bool ldltdc(::Array< ::Dynamic> A,::Array< Float > rdiag);
		static ::Dynamic ldltdc_dyn();

		static void ldltsl(::Array< ::Dynamic> A,::Array< Float > rdiag,::Array< Float > b,::Array< Float > x);
		static ::Dynamic ldltsl_dyn();

		static ::Array< Float > largestEig2x2(Float m1,Float m12,Float m2);
		static ::Dynamic largestEig2x2_dyn();

		static ::Array< Float > matIden();
		static ::Dynamic matIden_dyn();

		static ::Array< Float > matRotx(Float a);
		static ::Dynamic matRotx_dyn();

		static ::Array< Float > matRoty(Float a);
		static ::Dynamic matRoty_dyn();

		static ::Array< Float > matRotz(Float a);
		static ::Dynamic matRotz_dyn();

		static ::Array< Float > matTrsl(Float x,Float y,Float z);
		static ::Dynamic matTrsl_dyn();

		static ::Array< Float > matScal(Float x,Float y,Float z);
		static ::Dynamic matScal_dyn();

		static ::Array< Float > matMult(::Array< Float > A,::Array< Float > B);
		static ::Dynamic matMult_dyn();

		static ::Array< Float > matTrfm(::Array< Float > A,::Array< Float > v);
		static ::Dynamic matTrfm_dyn();

		static ::Array< Float > matProj(Float f,::Array< Float > v);
		static ::Dynamic matProj_dyn();

		static ::Array< Float > uniformHemisphereSampler();
		static ::Dynamic uniformHemisphereSampler_dyn();

		static void writeFile(::String filename,::String content);
		static ::Dynamic writeFile_dyn();

};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_Util */ 
