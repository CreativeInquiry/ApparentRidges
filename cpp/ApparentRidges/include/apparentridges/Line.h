// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_Line
#define INCLUDED_apparentridges_Line

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_777862f6d00c0fdb_1366_new)
HX_DECLARE_CLASS1(apparentridges,Line)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES Line_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Line_obj OBJ_;
		Line_obj();

	public:
		enum { _hx_ClassId = 0x492c8255 };

		void __construct(Float _x1,Float _y1,Float _x2,Float _y2);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="apparentridges.Line")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"apparentridges.Line"); }

		inline static ::hx::ObjectPtr< Line_obj > __new(Float _x1,Float _y1,Float _x2,Float _y2) {
			::hx::ObjectPtr< Line_obj > __this = new Line_obj();
			__this->__construct(_x1,_y1,_x2,_y2);
			return __this;
		}

		inline static ::hx::ObjectPtr< Line_obj > __alloc(::hx::Ctx *_hx_ctx,Float _x1,Float _y1,Float _x2,Float _y2) {
			Line_obj *__this = (Line_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Line_obj), false, "apparentridges.Line"));
			*(void **)__this = Line_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_777862f6d00c0fdb_1366_new)
HXLINE(1372)		( ( ::apparentridges::Line)(__this) )->opacity2 = ((Float)1);
HXLINE(1371)		( ( ::apparentridges::Line)(__this) )->opacity1 = ((Float)1);
HXLINE(1374)		( ( ::apparentridges::Line)(__this) )->x1 = _x1;
HXLINE(1375)		( ( ::apparentridges::Line)(__this) )->y1 = _y1;
HXLINE(1376)		( ( ::apparentridges::Line)(__this) )->x2 = _x2;
HXLINE(1377)		( ( ::apparentridges::Line)(__this) )->y2 = _y2;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Line_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Line",14,44,8c,32); }

		Float x1;
		Float y1;
		Float x2;
		Float y2;
		Float opacity1;
		Float opacity2;
		void setOpacity(Float o1,Float o2);
		::Dynamic setOpacity_dyn();

		void flip();
		::Dynamic flip_dyn();

};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_Line */ 
