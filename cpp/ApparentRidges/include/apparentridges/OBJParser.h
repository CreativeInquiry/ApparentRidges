// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_OBJParser
#define INCLUDED_apparentridges_OBJParser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(apparentridges,Mesh)
HX_DECLARE_CLASS1(apparentridges,OBJParser)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES OBJParser_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OBJParser_obj OBJ_;
		OBJParser_obj();

	public:
		enum { _hx_ClassId = 0x01c3ae35 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="apparentridges.OBJParser")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"apparentridges.OBJParser"); }

		inline static ::hx::ObjectPtr< OBJParser_obj > __new() {
			::hx::ObjectPtr< OBJParser_obj > __this = new OBJParser_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< OBJParser_obj > __alloc(::hx::Ctx *_hx_ctx) {
			OBJParser_obj *__this = (OBJParser_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OBJParser_obj), false, "apparentridges.OBJParser"));
			*(void **)__this = OBJParser_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OBJParser_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OBJParser",16,38,d2,fe); }

		static  ::apparentridges::Mesh fromFile(::String path);
		static ::Dynamic fromFile_dyn();

		static  ::apparentridges::Mesh fromString(::String str);
		static ::Dynamic fromString_dyn();

};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_OBJParser */ 
