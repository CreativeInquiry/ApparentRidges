// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_BSphere
#define INCLUDED_apparentridges_BSphere

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_962a22343921ddc2_307_new)
HX_DECLARE_CLASS1(apparentridges,BSphere)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES BSphere_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BSphere_obj OBJ_;
		BSphere_obj();

	public:
		enum { _hx_ClassId = 0x0f7cec6a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="apparentridges.BSphere")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"apparentridges.BSphere"); }

		inline static ::hx::ObjectPtr< BSphere_obj > __new() {
			::hx::ObjectPtr< BSphere_obj > __this = new BSphere_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< BSphere_obj > __alloc(::hx::Ctx *_hx_ctx) {
			BSphere_obj *__this = (BSphere_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BSphere_obj), true, "apparentridges.BSphere"));
			*(void **)__this = BSphere_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_962a22343921ddc2_307_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BSphere_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BSphere",ef,c0,13,aa); }

		Float r;
		::Array< Float > o;
};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_BSphere */ 
