// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_Ridge
#define INCLUDED_apparentridges_Ridge

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_aae6d9f18e5dd49a_297_new)
HX_DECLARE_CLASS1(apparentridges,Ridge)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES Ridge_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Ridge_obj OBJ_;
		Ridge_obj();

	public:
		enum { _hx_ClassId = 0x32256eaa };

		void __construct(::Array< Float > a,Float sa,::Array< Float > b,Float sb);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="apparentridges.Ridge")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"apparentridges.Ridge"); }

		inline static ::hx::ObjectPtr< Ridge_obj > __new(::Array< Float > a,Float sa,::Array< Float > b,Float sb) {
			::hx::ObjectPtr< Ridge_obj > __this = new Ridge_obj();
			__this->__construct(a,sa,b,sb);
			return __this;
		}

		inline static ::hx::ObjectPtr< Ridge_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< Float > a,Float sa,::Array< Float > b,Float sb) {
			Ridge_obj *__this = (Ridge_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Ridge_obj), true, "apparentridges.Ridge"));
			*(void **)__this = Ridge_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_aae6d9f18e5dd49a_297_new)
HXLINE( 298)		( ( ::apparentridges::Ridge)(__this) )->A = a;
HXDLIN( 298)		( ( ::apparentridges::Ridge)(__this) )->strengthA = sa;
HXLINE( 299)		( ( ::apparentridges::Ridge)(__this) )->B = b;
HXDLIN( 299)		( ( ::apparentridges::Ridge)(__this) )->strengthB = sb;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Ridge_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Ridge",0b,34,8f,7c); }

		::Array< Float > A;
		::Array< Float > B;
		Float strengthA;
		Float strengthB;
};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_Ridge */ 
