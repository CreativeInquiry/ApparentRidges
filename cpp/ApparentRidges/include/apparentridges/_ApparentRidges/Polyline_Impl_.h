// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges__ApparentRidges_Polyline_Impl_
#define INCLUDED_apparentridges__ApparentRidges_Polyline_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(apparentridges,_ApparentRidges,Polyline_Impl_)

namespace apparentridges{
namespace _ApparentRidges{


class HXCPP_CLASS_ATTRIBUTES Polyline_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Polyline_Impl__obj OBJ_;
		Polyline_Impl__obj();

	public:
		enum { _hx_ClassId = 0x72dfe71b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="apparentridges._ApparentRidges.Polyline_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"apparentridges._ApparentRidges.Polyline_Impl_"); }

		inline static ::hx::ObjectPtr< Polyline_Impl__obj > __new() {
			::hx::ObjectPtr< Polyline_Impl__obj > __this = new Polyline_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Polyline_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Polyline_Impl__obj *__this = (Polyline_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Polyline_Impl__obj), false, "apparentridges._ApparentRidges.Polyline_Impl_"));
			*(void **)__this = Polyline_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Polyline_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Polyline_Impl_",00,2d,20,a7); }

		static ::Array< ::Dynamic> _new();
		static ::Dynamic _new_dyn();

		static int get_length(::Array< ::Dynamic> this1);
		static ::Dynamic get_length_dyn();

		static int set_length(::Array< ::Dynamic> this1,int v);
		static ::Dynamic set_length_dyn();

		static int startY(::Array< ::Dynamic> this1);
		static ::Dynamic startY_dyn();

		static int endY(::Array< ::Dynamic> this1);
		static ::Dynamic endY_dyn();

		static Float startX(::Array< ::Dynamic> this1);
		static ::Dynamic startX_dyn();

		static Float endX(::Array< ::Dynamic> this1);
		static ::Dynamic endX_dyn();

		static ::Array< Float > get(::Array< ::Dynamic> this1,int i);
		static ::Dynamic get_dyn();

		static ::Array< Float > set(::Array< ::Dynamic> this1,int i,::Array< Float > v);
		static ::Dynamic set_dyn();

		static int push(::Array< ::Dynamic> this1,::Array< Float > v);
		static ::Dynamic push_dyn();

		static void unshift(::Array< ::Dynamic> this1,::Array< Float > v);
		static ::Dynamic unshift_dyn();

};

} // end namespace apparentridges
} // end namespace _ApparentRidges

#endif /* INCLUDED_apparentridges__ApparentRidges_Polyline_Impl_ */ 
