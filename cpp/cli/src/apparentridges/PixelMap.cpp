// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_apparentridges_BBox
#include <apparentridges/BBox.h>
#endif
#ifndef INCLUDED_apparentridges_BVHNode
#include <apparentridges/BVHNode.h>
#endif
#ifndef INCLUDED_apparentridges_BVHTree
#include <apparentridges/BVHTree.h>
#endif
#ifndef INCLUDED_apparentridges_Mesh
#include <apparentridges/Mesh.h>
#endif
#ifndef INCLUDED_apparentridges_PixelMap
#include <apparentridges/PixelMap.h>
#endif
#ifndef INCLUDED_apparentridges_RayHit
#include <apparentridges/RayHit.h>
#endif
#ifndef INCLUDED_apparentridges_Render
#include <apparentridges/Render.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1666_raycast,"apparentridges.PixelMap","raycast",0x6e9e521e,"apparentridges.PixelMap.raycast","apparentridges/ApparentRidges.hx",1666,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1683_raycast,"apparentridges.PixelMap","raycast",0x6e9e521e,"apparentridges.PixelMap.raycast","apparentridges/ApparentRidges.hx",1683,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1698_depth,"apparentridges.PixelMap","depth",0xc9809a38,"apparentridges.PixelMap.depth","apparentridges/ApparentRidges.hx",1698,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1690_depth,"apparentridges.PixelMap","depth",0xc9809a38,"apparentridges.PixelMap.depth","apparentridges/ApparentRidges.hx",1690,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1722_normal,"apparentridges.PixelMap","normal",0x49e6d752,"apparentridges.PixelMap.normal","apparentridges/ApparentRidges.hx",1722,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1719_normal,"apparentridges.PixelMap","normal",0x49e6d752,"apparentridges.PixelMap.normal","apparentridges/ApparentRidges.hx",1719,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1747_curvature,"apparentridges.PixelMap","curvature",0xa2955154,"apparentridges.PixelMap.curvature","apparentridges/ApparentRidges.hx",1747,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1744_curvature,"apparentridges.PixelMap","curvature",0xa2955154,"apparentridges.PixelMap.curvature","apparentridges/ApparentRidges.hx",1744,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1775_lambertian,"apparentridges.PixelMap","lambertian",0xfc1a93c4,"apparentridges.PixelMap.lambertian","apparentridges/ApparentRidges.hx",1775,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1770_lambertian,"apparentridges.PixelMap","lambertian",0xfc1a93c4,"apparentridges.PixelMap.lambertian","apparentridges/ApparentRidges.hx",1770,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1808_ambientOcclusion,"apparentridges.PixelMap","ambientOcclusion",0xbe7f3200,"apparentridges.PixelMap.ambientOcclusion","apparentridges/ApparentRidges.hx",1808,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1831_ambientOcclusion,"apparentridges.PixelMap","ambientOcclusion",0xbe7f3200,"apparentridges.PixelMap.ambientOcclusion","apparentridges/ApparentRidges.hx",1831,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1803_ambientOcclusion,"apparentridges.PixelMap","ambientOcclusion",0xbe7f3200,"apparentridges.PixelMap.ambientOcclusion","apparentridges/ApparentRidges.hx",1803,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_a32ac4e6f2b4899a_1859_toPPMString,"apparentridges.PixelMap","toPPMString",0xf62d6118,"apparentridges.PixelMap.toPPMString","apparentridges/ApparentRidges.hx",1859,0xfeacc84f)
namespace apparentridges{

void PixelMap_obj::__construct() { }

Dynamic PixelMap_obj::__CreateEmpty() { return new PixelMap_obj; }

void *PixelMap_obj::_hx_vtable = 0;

Dynamic PixelMap_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PixelMap_obj > _hx_result = new PixelMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PixelMap_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x048bcac3;
}

void PixelMap_obj::raycast( ::apparentridges::Render render, ::Dynamic fun){
            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1666_raycast)
HXLINE(1667)		Float min = ::Math_obj::POSITIVE_INFINITY;
HXLINE(1668)		Float max = ::Math_obj::NEGATIVE_INFINITY;
HXLINE(1669)		int width = render->width;
HXLINE(1670)		int height = render->height;
HXLINE(1671)		int hw = ::Std_obj::_hx_int((( (Float)(width) ) / ( (Float)(2) )));
HXLINE(1672)		int hh = ::Std_obj::_hx_int((( (Float)(height) ) / ( (Float)(2) )));
HXLINE(1674)		{
HXLINE(1674)			int _g = -(hh);
HXDLIN(1674)			int _g1 = (height - hh);
HXDLIN(1674)			while((_g < _g1)){
HXLINE(1674)				_g = (_g + 1);
HXDLIN(1674)				int y = (_g - 1);
HXLINE(1675)				{
HXLINE(1675)					int _g1 = -(hw);
HXDLIN(1675)					int _g2 = (width - hw);
HXDLIN(1675)					while((_g1 < _g2)){
            						HX_BEGIN_LOCAL_FUNC_S6(::hx::LocalFunc,_hx_Closure_0, ::apparentridges::BVHTree,bvh,::Array< Float >,r_o,::Array< ::Dynamic>,hitNode,Float,r_tmax,Float,r_tmin,::Array< Float >,r_d) HXARGC(1)
            						 ::apparentridges::RayHit _hx_run( ::apparentridges::BVHNode node){
            							HX_GC_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1683_raycast)
HXLINE(1683)							bool _hx_tmp;
HXDLIN(1683)							if (::hx::IsNull( node->left )) {
HXLINE(1683)								_hx_tmp = ::hx::IsNull( node->right );
            							}
            							else {
HXLINE(1683)								_hx_tmp = false;
            							}
HXDLIN(1683)							if (_hx_tmp) {
HXLINE(1683)								Float tmin = ::Math_obj::POSITIVE_INFINITY;
HXDLIN(1683)								 ::apparentridges::RayHit closest = null();
HXDLIN(1683)								{
HXLINE(1683)									int _g = node->begin;
HXDLIN(1683)									int _g1 = node->end;
HXDLIN(1683)									while((_g < _g1)){
HXLINE(1683)										_g = (_g + 1);
HXDLIN(1683)										int i = (_g - 1);
HXDLIN(1683)										::Array< Float > p0 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN(1683)										::Array< Float > p1 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN(1683)										::Array< Float > p2 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN(1683)										Float _x = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1683)										Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1683)										Float _y = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN(1683)										Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1683)										Float _z = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN(1683)										Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1683)										::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)										::Array< Float > this2 = this1;
HXDLIN(1683)										this2->__unsafe_set(0,_x1);
HXDLIN(1683)										this2->__unsafe_set(1,_y1);
HXDLIN(1683)										this2->__unsafe_set(2,_z1);
HXDLIN(1683)										::Array< Float > e1 = this2;
HXDLIN(1683)										Float _x2 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1683)										Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1683)										Float _y2 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN(1683)										Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1683)										Float _z2 = ( (Float)(_hx_array_unsafe_get(p2,2)) );
HXDLIN(1683)										Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1683)										::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)										::Array< Float > this4 = this3;
HXDLIN(1683)										this4->__unsafe_set(0,_x3);
HXDLIN(1683)										this4->__unsafe_set(1,_y3);
HXDLIN(1683)										this4->__unsafe_set(2,_z3);
HXDLIN(1683)										::Array< Float > e2 = this4;
HXDLIN(1683)										::Array< Float > this5 = r_o;
HXDLIN(1683)										Float _x4 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN(1683)										Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1683)										Float _y4 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN(1683)										Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1683)										Float _z4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN(1683)										Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1683)										::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)										::Array< Float > this7 = this6;
HXDLIN(1683)										this7->__unsafe_set(0,_x5);
HXDLIN(1683)										this7->__unsafe_set(1,_y5);
HXDLIN(1683)										this7->__unsafe_set(2,_z5);
HXDLIN(1683)										::Array< Float > s = this7;
HXDLIN(1683)										::Array< Float > this8 = r_d;
HXDLIN(1683)										Float _x6 = (( (Float)(_hx_array_unsafe_get(this8,0)) ) * ((Float)-1.0));
HXDLIN(1683)										Float _y6 = (( (Float)(_hx_array_unsafe_get(this8,1)) ) * ((Float)-1.0));
HXDLIN(1683)										Float _z6 = (( (Float)(_hx_array_unsafe_get(this8,2)) ) * ((Float)-1.0));
HXDLIN(1683)										::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)										::Array< Float > this10 = this9;
HXDLIN(1683)										this10->__unsafe_set(0,_x6);
HXDLIN(1683)										this10->__unsafe_set(1,_y6);
HXDLIN(1683)										this10->__unsafe_set(2,_z6);
HXDLIN(1683)										::Array< Float > _d = this10;
HXDLIN(1683)										Float _x7 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)										Float _x8 = (_x7 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1683)										Float _x9 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)										Float _x10 = (_x8 - (_x9 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1683)										Float _y7 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)										Float _y8 = (_y7 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1683)										Float _y9 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)										Float _y10 = (_y8 - (_y9 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1683)										Float _z7 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)										Float _z8 = (_z7 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1683)										Float _z9 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)										Float _z10 = (_z8 - (_z9 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1683)										::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)										::Array< Float > this12 = this11;
HXDLIN(1683)										this12->__unsafe_set(0,_x10);
HXDLIN(1683)										this12->__unsafe_set(1,_y10);
HXDLIN(1683)										this12->__unsafe_set(2,_z10);
HXDLIN(1683)										::Array< Float > v1 = this12;
HXDLIN(1683)										Float denom = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1683)										Float denom1 = (denom * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1683)										Float denom2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1683)										Float denom3 = (denom1 + (denom2 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1683)										Float denom4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1683)										Float denom5 = (denom3 + (denom4 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1683)										 ::apparentridges::RayHit h;
HXDLIN(1683)										if ((denom5 == 0)) {
HXLINE(1683)											h = null();
            										}
            										else {
HXLINE(1683)											Float _x = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1683)											Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1683)											Float _x2 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1683)											Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1683)											Float _y = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1683)											Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1683)											Float _y2 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1683)											Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1683)											Float _z = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1683)											Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1683)											Float _z2 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1683)											Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1683)											::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)											::Array< Float > this2 = this1;
HXDLIN(1683)											this2->__unsafe_set(0,_x3);
HXDLIN(1683)											this2->__unsafe_set(1,_y3);
HXDLIN(1683)											this2->__unsafe_set(2,_z3);
HXDLIN(1683)											::Array< Float > v1 = this2;
HXDLIN(1683)											Float _x4 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1683)											Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1683)											Float _x6 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1683)											Float _x7 = (_x5 + (_x6 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1683)											Float _x8 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1683)											Float _x9 = (_x7 + (_x8 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1683)											Float _x10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)											Float _x11 = (_x10 * ( (Float)(_hx_array_unsafe_get(s,2)) ));
HXDLIN(1683)											Float _x12 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)											Float _x13 = (_x11 - (_x12 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1683)											Float _y4 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)											Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1683)											Float _y6 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)											Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1683)											Float _z4 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)											Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(s,1)) ));
HXDLIN(1683)											Float _z6 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)											Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(s,0)) )));
HXDLIN(1683)											::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)											::Array< Float > this4 = this3;
HXDLIN(1683)											this4->__unsafe_set(0,_x13);
HXDLIN(1683)											this4->__unsafe_set(1,_y7);
HXDLIN(1683)											this4->__unsafe_set(2,_z7);
HXDLIN(1683)											::Array< Float > v11 = this4;
HXDLIN(1683)											Float _y8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(1683)											Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1683)											Float _y10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(1683)											Float _y11 = (_y9 + (_y10 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1683)											Float _y12 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(1683)											Float _y13 = (_y11 + (_y12 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1683)											Float _x14 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)											Float _x15 = (_x14 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1683)											Float _x16 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)											Float _x17 = (_x15 - (_x16 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1683)											Float _y14 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1683)											Float _y15 = (_y14 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1683)											Float _y16 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)											Float _y17 = (_y15 - (_y16 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1683)											Float _z8 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1683)											Float _z9 = (_z8 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1683)											Float _z10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1683)											Float _z11 = (_z9 - (_z10 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1683)											::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)											::Array< Float > this6 = this5;
HXDLIN(1683)											this6->__unsafe_set(0,_x17);
HXDLIN(1683)											this6->__unsafe_set(1,_y17);
HXDLIN(1683)											this6->__unsafe_set(2,_z11);
HXDLIN(1683)											::Array< Float > v12 = this6;
HXDLIN(1683)											Float _z12 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN(1683)											Float _z13 = (_z12 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1683)											Float _z14 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN(1683)											Float _z15 = (_z13 + (_z14 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1683)											Float _z16 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN(1683)											Float _z17 = (_z15 + (_z16 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1683)											::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)											::Array< Float > this8 = this7;
HXDLIN(1683)											this8->__unsafe_set(0,_x9);
HXDLIN(1683)											this8->__unsafe_set(1,_y13);
HXDLIN(1683)											this8->__unsafe_set(2,_z17);
HXDLIN(1683)											::Array< Float > this9 = this8;
HXDLIN(1683)											Float rhs = (( (Float)(1) ) / denom5);
HXDLIN(1683)											Float _x18 = (( (Float)(_hx_array_unsafe_get(this9,0)) ) * rhs);
HXDLIN(1683)											Float _y18 = (( (Float)(_hx_array_unsafe_get(this9,1)) ) * rhs);
HXDLIN(1683)											Float _z18 = (( (Float)(_hx_array_unsafe_get(this9,2)) ) * rhs);
HXDLIN(1683)											::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN(1683)											::Array< Float > this11 = this10;
HXDLIN(1683)											this11->__unsafe_set(0,_x18);
HXDLIN(1683)											this11->__unsafe_set(1,_y18);
HXDLIN(1683)											this11->__unsafe_set(2,_z18);
HXDLIN(1683)											::Array< Float > uvt = this11;
HXDLIN(1683)											Float u = ( (Float)(_hx_array_unsafe_get(uvt,0)) );
HXDLIN(1683)											Float v = ( (Float)(_hx_array_unsafe_get(uvt,1)) );
HXDLIN(1683)											Float t = ( (Float)(_hx_array_unsafe_get(uvt,2)) );
HXDLIN(1683)											bool h1;
HXDLIN(1683)											bool h2;
HXDLIN(1683)											bool h3;
HXDLIN(1683)											bool h4;
HXDLIN(1683)											if (!((u < 0))) {
HXLINE(1683)												h4 = (v < 0);
            											}
            											else {
HXLINE(1683)												h4 = true;
            											}
HXDLIN(1683)											if (!(h4)) {
HXLINE(1683)												h3 = (((( (Float)(1) ) - u) - v) < 0);
            											}
            											else {
HXLINE(1683)												h3 = true;
            											}
HXDLIN(1683)											if (!(h3)) {
HXLINE(1683)												h2 = (t < r_tmin);
            											}
            											else {
HXLINE(1683)												h2 = true;
            											}
HXDLIN(1683)											if (!(h2)) {
HXLINE(1683)												h1 = (t > r_tmax);
            											}
            											else {
HXLINE(1683)												h1 = true;
            											}
HXDLIN(1683)											if (h1) {
HXLINE(1683)												h = null();
            											}
            											else {
HXLINE(1683)												 ::apparentridges::RayHit h1 =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t);
HXDLIN(1683)												h1->u = u;
HXDLIN(1683)												h1->v = v;
HXDLIN(1683)												h = h1;
            											}
            										}
HXDLIN(1683)										if (::hx::IsNotNull( h )) {
HXLINE(1683)											h->face = bvh->faces->__get(i).StaticCast< ::Array< int > >();
HXDLIN(1683)											if ((tmin > h->t)) {
HXLINE(1060)												tmin = h->t;
HXLINE(1061)												closest = h;
            											}
            										}
            									}
            								}
HXLINE(1683)								return closest;
            							}
HXDLIN(1683)							 ::apparentridges::BBox bb = node->left->bbox;
HXDLIN(1683)							Float tx1 = ( (Float)(_hx_array_unsafe_get(bb->min,0)) );
HXDLIN(1683)							Float tx11 = (tx1 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1683)							Float tx12 = (tx11 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1683)							Float tx2 = ( (Float)(_hx_array_unsafe_get(bb->max,0)) );
HXDLIN(1683)							Float tx21 = (tx2 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1683)							Float tx22 = (tx21 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1683)							Float ty1 = ( (Float)(_hx_array_unsafe_get(bb->min,1)) );
HXDLIN(1683)							Float ty11 = (ty1 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1683)							Float ty12 = (ty11 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1683)							Float ty2 = ( (Float)(_hx_array_unsafe_get(bb->max,1)) );
HXDLIN(1683)							Float ty21 = (ty2 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1683)							Float ty22 = (ty21 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1683)							Float tz1 = ( (Float)(_hx_array_unsafe_get(bb->min,2)) );
HXDLIN(1683)							Float tz11 = (tz1 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1683)							Float tz12 = (tz11 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1683)							Float tz2 = ( (Float)(_hx_array_unsafe_get(bb->max,2)) );
HXDLIN(1683)							Float tz21 = (tz2 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1683)							Float tz22 = (tz21 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1683)							Float t1 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx12,tx22),::Math_obj::min(ty12,ty22)),::Math_obj::min(tz12,tz22));
HXDLIN(1683)							Float t2 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx12,tx22),::Math_obj::max(ty12,ty22)),::Math_obj::max(tz12,tz22));
HXDLIN(1683)							 ::apparentridges::RayHit hitL;
HXDLIN(1683)							if (((t2 - t1) < 0)) {
HXLINE(1683)								hitL = null();
            							}
            							else {
HXLINE(1683)								bool hitL1;
HXDLIN(1683)								if (!((t1 > r_tmax))) {
HXLINE(1683)									hitL1 = (t2 < r_tmin);
            								}
            								else {
HXLINE(1683)									hitL1 = true;
            								}
HXDLIN(1683)								if (hitL1) {
HXLINE(1683)									hitL = null();
            								}
            								else {
HXLINE(1683)									 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t1);
HXDLIN(1683)									h->t2 = t2;
HXDLIN(1683)									hitL = h;
            								}
            							}
HXDLIN(1683)							 ::apparentridges::BBox bb1 = node->right->bbox;
HXDLIN(1683)							Float tx13 = ( (Float)(_hx_array_unsafe_get(bb1->min,0)) );
HXDLIN(1683)							Float tx14 = (tx13 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1683)							Float tx15 = (tx14 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1683)							Float tx23 = ( (Float)(_hx_array_unsafe_get(bb1->max,0)) );
HXDLIN(1683)							Float tx24 = (tx23 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1683)							Float tx25 = (tx24 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1683)							Float ty13 = ( (Float)(_hx_array_unsafe_get(bb1->min,1)) );
HXDLIN(1683)							Float ty14 = (ty13 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1683)							Float ty15 = (ty14 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1683)							Float ty23 = ( (Float)(_hx_array_unsafe_get(bb1->max,1)) );
HXDLIN(1683)							Float ty24 = (ty23 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1683)							Float ty25 = (ty24 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1683)							Float tz13 = ( (Float)(_hx_array_unsafe_get(bb1->min,2)) );
HXDLIN(1683)							Float tz14 = (tz13 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1683)							Float tz15 = (tz14 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1683)							Float tz23 = ( (Float)(_hx_array_unsafe_get(bb1->max,2)) );
HXDLIN(1683)							Float tz24 = (tz23 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1683)							Float tz25 = (tz24 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1683)							Float t11 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx15,tx25),::Math_obj::min(ty15,ty25)),::Math_obj::min(tz15,tz25));
HXDLIN(1683)							Float t21 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx15,tx25),::Math_obj::max(ty15,ty25)),::Math_obj::max(tz15,tz25));
HXDLIN(1683)							 ::apparentridges::RayHit hitR;
HXDLIN(1683)							if (((t21 - t11) < 0)) {
HXLINE(1683)								hitR = null();
            							}
            							else {
HXLINE(1683)								bool hitR1;
HXDLIN(1683)								if (!((t11 > r_tmax))) {
HXLINE(1683)									hitR1 = (t21 < r_tmin);
            								}
            								else {
HXLINE(1683)									hitR1 = true;
            								}
HXDLIN(1683)								if (hitR1) {
HXLINE(1683)									hitR = null();
            								}
            								else {
HXLINE(1683)									 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t11);
HXDLIN(1683)									h->t2 = t21;
HXDLIN(1683)									hitR = h;
            								}
            							}
HXDLIN(1683)							bool _hx_tmp1;
HXDLIN(1683)							if (::hx::IsNotNull( hitL )) {
HXLINE(1683)								_hx_tmp1 = ::hx::IsNull( hitR );
            							}
            							else {
HXLINE(1683)								_hx_tmp1 = false;
            							}
HXDLIN(1683)							if (_hx_tmp1) {
HXLINE(1683)								return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->left)) );
            							}
            							else {
HXLINE(1683)								bool _hx_tmp;
HXDLIN(1683)								if (::hx::IsNull( hitL )) {
HXLINE(1683)									_hx_tmp = ::hx::IsNotNull( hitR );
            								}
            								else {
HXLINE(1683)									_hx_tmp = false;
            								}
HXDLIN(1683)								if (_hx_tmp) {
HXLINE(1683)									return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->right)) );
            								}
            								else {
HXLINE(1683)									bool _hx_tmp;
HXDLIN(1683)									if (::hx::IsNull( hitL )) {
HXLINE(1683)										_hx_tmp = ::hx::IsNull( hitR );
            									}
            									else {
HXLINE(1683)										_hx_tmp = false;
            									}
HXDLIN(1683)									if (_hx_tmp) {
HXLINE(1683)										return null();
            									}
            								}
            							}
HXDLIN(1683)							 ::apparentridges::BVHNode first;
HXDLIN(1683)							 ::apparentridges::BVHNode second;
HXDLIN(1683)							if ((hitL->t < hitR->t)) {
HXLINE(1079)								first = node->left;
HXLINE(1080)								second = node->right;
            							}
            							else {
HXLINE(1082)								first = node->right;
HXLINE(1083)								second = node->left;
            							}
HXLINE(1683)							 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(first)) );
HXDLIN(1683)							bool _hx_tmp2;
HXDLIN(1683)							if (::hx::IsNotNull( h )) {
HXLINE(1683)								_hx_tmp2 = (h->t >= ::Math_obj::max(hitL->t,hitR->t));
            							}
            							else {
HXLINE(1683)								_hx_tmp2 = true;
            							}
HXDLIN(1683)							if (_hx_tmp2) {
HXLINE(1683)								 ::apparentridges::RayHit h2 = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(second)) );
HXDLIN(1683)								if (::hx::IsNotNull( h2 )) {
HXLINE(1683)									bool _hx_tmp;
HXDLIN(1683)									if (::hx::IsNotNull( h )) {
HXLINE(1683)										_hx_tmp = (h2->t < h->t);
            									}
            									else {
HXLINE(1683)										_hx_tmp = true;
            									}
HXDLIN(1683)									if (_hx_tmp) {
HXLINE(1683)										return h2;
            									}
            								}
            							}
HXDLIN(1683)							return h;
            						}
            						HX_END_LOCAL_FUNC1(return)

HXLINE(1675)						_g1 = (_g1 + 1);
HXDLIN(1675)						int x = (_g1 - 1);
HXLINE(1676)						Float r_tmin;
HXDLIN(1676)						Float r_tmax;
HXDLIN(1676)						::Array< Float > r_o;
HXDLIN(1676)						::Array< Float > r_d;
HXLINE(1677)						::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1677)						::Array< Float > this2 = this1;
HXDLIN(1677)						this2->__unsafe_set(0,0);
HXDLIN(1677)						this2->__unsafe_set(1,0);
HXDLIN(1677)						this2->__unsafe_set(2,0);
HXDLIN(1677)						r_o = this2;
HXLINE(1678)						Float _z = render->focal;
HXDLIN(1678)						::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1678)						::Array< Float > this4 = this3;
HXDLIN(1678)						this4->__unsafe_set(0,-(x));
HXDLIN(1678)						this4->__unsafe_set(1,-(y));
HXDLIN(1678)						this4->__unsafe_set(2,_z);
HXDLIN(1678)						r_d = this4;
HXLINE(1679)						r_tmax = ::Math_obj::POSITIVE_INFINITY;
HXLINE(1680)						r_tmin = ( (Float)(0) );
HXLINE(1681)						{
HXLINE(1681)							::Array< Float > this5 = r_d;
HXDLIN(1681)							Float l = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN(1681)							Float l1 = (l * ( (Float)(_hx_array_unsafe_get(this5,0)) ));
HXDLIN(1681)							Float l2 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN(1681)							Float l3 = (l1 + (l2 * ( (Float)(_hx_array_unsafe_get(this5,1)) )));
HXDLIN(1681)							Float l4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN(1681)							Float l5 = ::Math_obj::sqrt((l3 + (l4 * ( (Float)(_hx_array_unsafe_get(this5,2)) ))));
HXDLIN(1681)							if ((l5 > 0)) {
HXLINE( 221)								l5 = (( (Float)(1) ) / l5);
HXLINE(1681)								{
HXLINE(1681)									::Array< Float > _g = this5;
HXDLIN(1681)									{
HXLINE(1681)										Float v = (( (Float)(_hx_array_unsafe_get(_g,0)) ) * l5);
HXDLIN(1681)										_g->__unsafe_set(0,v);
            									}
            								}
HXDLIN(1681)								{
HXLINE(1681)									::Array< Float > _g1 = this5;
HXDLIN(1681)									{
HXLINE(1681)										Float v1 = (( (Float)(_hx_array_unsafe_get(_g1,1)) ) * l5);
HXDLIN(1681)										_g1->__unsafe_set(1,v1);
            									}
            								}
HXDLIN(1681)								{
HXLINE(1681)									::Array< Float > _g2 = this5;
HXDLIN(1681)									{
HXLINE(1681)										Float v2 = (( (Float)(_hx_array_unsafe_get(_g2,2)) ) * l5);
HXDLIN(1681)										_g2->__unsafe_set(2,v2);
            									}
            								}
            							}
            							else {
HXLINE(1681)								this5->__unsafe_set(0,0);
HXDLIN(1681)								this5->__unsafe_set(1,0);
HXDLIN(1681)								this5->__unsafe_set(2,1);
            							}
            						}
HXLINE(1683)						 ::apparentridges::BVHTree bvh = render->mesh->bvh;
HXDLIN(1683)						::Array< ::Dynamic> hitNode = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE(1046)						hitNode[0] =  ::Dynamic(new _hx_Closure_0(bvh,r_o,hitNode,r_tmax,r_tmin,r_d));
HXLINE(1683)						 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(bvh->root)) );
HXLINE(1685)						fun(h,(x + hh),(y + hh));
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(PixelMap_obj,raycast,(void))

::Array< Float > PixelMap_obj::depth( ::apparentridges::Render render,::hx::Null< bool >  __o_normalize){
            		HX_BEGIN_LOCAL_FUNC_S4(::hx::LocalFunc,_hx_Closure_0,::Array< Float >,min,::Array< Float >,data,::Array< Float >,max, ::apparentridges::Render,render) HXARGC(3)
            		void _hx_run( ::apparentridges::RayHit h,int x,int y){
            			HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1698_depth)
HXLINE(1698)			if (::hx::IsNull( h )) {
HXLINE(1699)				data->__unsafe_set(((y * render->width) + x),::Math_obj::POSITIVE_INFINITY);
            			}
            			else {
HXLINE(1701)				min[0] = ::Math_obj::min(min->__get(0),h->t);
HXLINE(1702)				max[0] = ::Math_obj::max(max->__get(0),h->t);
HXLINE(1703)				data->__unsafe_set(((y * render->width) + x),h->t);
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            		bool normalize = __o_normalize.Default(false);
            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1690_depth)
HXLINE(1691)		::Array< Float > this1 = ::Array_obj< Float >::__new((render->width * render->height));
HXDLIN(1691)		::Array< Float > data = this1;
HXLINE(1693)		::Array< Float > min = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::POSITIVE_INFINITY);
HXLINE(1694)		::Array< Float > max = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::NEGATIVE_INFINITY);
HXLINE(1697)		::apparentridges::PixelMap_obj::raycast(render, ::Dynamic(new _hx_Closure_0(min,data,max,render)));
HXLINE(1707)		if (normalize) {
HXLINE(1708)			int _g = 0;
HXDLIN(1708)			int _g1 = data->length;
HXDLIN(1708)			while((_g < _g1)){
HXLINE(1708)				_g = (_g + 1);
HXDLIN(1708)				int i = (_g - 1);
HXLINE(1709)				if ((( (Float)(_hx_array_unsafe_get(data,i)) ) != ::Math_obj::POSITIVE_INFINITY)) {
HXLINE(1710)					Float val = ( (Float)(_hx_array_unsafe_get(data,i)) );
HXDLIN(1710)					data->__unsafe_set(i,(( (Float)(1) ) - ((val - min->__get(0)) / (max->__get(0) - min->__get(0)))));
            				}
            				else {
HXLINE(1712)					data->__unsafe_set(i,0);
            				}
            			}
            		}
HXLINE(1716)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(PixelMap_obj,depth,return )

::Array< Float > PixelMap_obj::normal( ::apparentridges::Render render){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< Float >,data, ::apparentridges::Render,render) HXARGC(3)
            		void _hx_run( ::apparentridges::RayHit h,int x,int y){
            			HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1722_normal)
HXLINE(1723)			int idx = (((y * render->width) + x) * 3);
HXLINE(1724)			if (::hx::IsNull( h )) {
HXLINE(1725)				data->__unsafe_set(idx,0);
HXLINE(1726)				data->__unsafe_set((idx + 1),0);
HXLINE(1727)				data->__unsafe_set((idx + 2),0);
            			}
            			else {
HXLINE(1729)				::Array< int > f = h->face;
HXLINE(1730)				::Array< Float > n0 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXLINE(1731)				::Array< Float > n1 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXLINE(1732)				::Array< Float > n2 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXLINE(1733)				Float rhs = ((( (Float)(1) ) - h->u) - h->v);
HXDLIN(1733)				Float _x = (( (Float)(_hx_array_unsafe_get(n0,0)) ) * rhs);
HXDLIN(1733)				Float _y = (( (Float)(_hx_array_unsafe_get(n0,1)) ) * rhs);
HXDLIN(1733)				Float _z = (( (Float)(_hx_array_unsafe_get(n0,2)) ) * rhs);
HXDLIN(1733)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1733)				::Array< Float > this2 = this1;
HXDLIN(1733)				this2->__unsafe_set(0,_x);
HXDLIN(1733)				this2->__unsafe_set(1,_y);
HXDLIN(1733)				this2->__unsafe_set(2,_z);
HXDLIN(1733)				::Array< Float > this3 = this2;
HXDLIN(1733)				Float rhs1 = h->u;
HXDLIN(1733)				Float _x1 = (( (Float)(_hx_array_unsafe_get(n1,0)) ) * rhs1);
HXDLIN(1733)				Float _y1 = (( (Float)(_hx_array_unsafe_get(n1,1)) ) * rhs1);
HXDLIN(1733)				Float _z1 = (( (Float)(_hx_array_unsafe_get(n1,2)) ) * rhs1);
HXDLIN(1733)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1733)				::Array< Float > this5 = this4;
HXDLIN(1733)				this5->__unsafe_set(0,_x1);
HXDLIN(1733)				this5->__unsafe_set(1,_y1);
HXDLIN(1733)				this5->__unsafe_set(2,_z1);
HXDLIN(1733)				::Array< Float > rhs2 = this5;
HXDLIN(1733)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1733)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN(1733)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1733)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN(1733)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1733)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN(1733)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1733)				::Array< Float > this7 = this6;
HXDLIN(1733)				this7->__unsafe_set(0,_x3);
HXDLIN(1733)				this7->__unsafe_set(1,_y3);
HXDLIN(1733)				this7->__unsafe_set(2,_z3);
HXDLIN(1733)				::Array< Float > this8 = this7;
HXDLIN(1733)				Float rhs3 = h->v;
HXDLIN(1733)				Float _x4 = (( (Float)(_hx_array_unsafe_get(n2,0)) ) * rhs3);
HXDLIN(1733)				Float _y4 = (( (Float)(_hx_array_unsafe_get(n2,1)) ) * rhs3);
HXDLIN(1733)				Float _z4 = (( (Float)(_hx_array_unsafe_get(n2,2)) ) * rhs3);
HXDLIN(1733)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1733)				::Array< Float > this10 = this9;
HXDLIN(1733)				this10->__unsafe_set(0,_x4);
HXDLIN(1733)				this10->__unsafe_set(1,_y4);
HXDLIN(1733)				this10->__unsafe_set(2,_z4);
HXDLIN(1733)				::Array< Float > rhs4 = this10;
HXDLIN(1733)				Float _x5 = ( (Float)(_hx_array_unsafe_get(this8,0)) );
HXDLIN(1733)				Float _x6 = (_x5 + ( (Float)(_hx_array_unsafe_get(rhs4,0)) ));
HXDLIN(1733)				Float _y5 = ( (Float)(_hx_array_unsafe_get(this8,1)) );
HXDLIN(1733)				Float _y6 = (_y5 + ( (Float)(_hx_array_unsafe_get(rhs4,1)) ));
HXDLIN(1733)				Float _z5 = ( (Float)(_hx_array_unsafe_get(this8,2)) );
HXDLIN(1733)				Float _z6 = (_z5 + ( (Float)(_hx_array_unsafe_get(rhs4,2)) ));
HXDLIN(1733)				::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1733)				::Array< Float > this12 = this11;
HXDLIN(1733)				this12->__unsafe_set(0,_x6);
HXDLIN(1733)				this12->__unsafe_set(1,_y6);
HXDLIN(1733)				this12->__unsafe_set(2,_z6);
HXDLIN(1733)				::Array< Float > n = this12;
HXLINE(1734)				{
HXLINE(1734)					Float val = ( (Float)(_hx_array_unsafe_get(n,0)) );
HXDLIN(1734)					data->__unsafe_set(idx,val);
            				}
HXLINE(1735)				{
HXLINE(1735)					Float val1 = ( (Float)(_hx_array_unsafe_get(n,1)) );
HXDLIN(1735)					data->__unsafe_set((idx + 1),val1);
            				}
HXLINE(1736)				{
HXLINE(1736)					Float val2 = ( (Float)(_hx_array_unsafe_get(n,2)) );
HXDLIN(1736)					data->__unsafe_set((idx + 2),val2);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1719_normal)
HXLINE(1720)		::Array< Float > this1 = ::Array_obj< Float >::__new(((render->width * render->height) * 3));
HXDLIN(1720)		::Array< Float > data = this1;
HXLINE(1722)		::apparentridges::PixelMap_obj::raycast(render, ::Dynamic(new _hx_Closure_0(data,render)));
HXLINE(1740)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelMap_obj,normal,return )

::Array< Float > PixelMap_obj::curvature( ::apparentridges::Render render){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< Float >,data, ::apparentridges::Render,render) HXARGC(3)
            		void _hx_run( ::apparentridges::RayHit h,int x,int y){
            			HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1747_curvature)
HXLINE(1748)			int idx = (((y * render->width) + x) * 2);
HXLINE(1749)			if (::hx::IsNull( h )) {
HXLINE(1750)				data->__unsafe_set(idx,0);
HXLINE(1751)				data->__unsafe_set((idx + 1),0);
            			}
            			else {
HXLINE(1753)				::Array< int > f = h->face;
HXLINE(1754)				Float c1a = render->mesh->curv1->__get(( (int)(_hx_array_unsafe_get(f,0)) ));
HXLINE(1755)				Float c1b = render->mesh->curv1->__get(( (int)(_hx_array_unsafe_get(f,1)) ));
HXLINE(1756)				Float c1c = render->mesh->curv1->__get(( (int)(_hx_array_unsafe_get(f,2)) ));
HXLINE(1757)				Float c2a = render->mesh->curv2->__get(( (int)(_hx_array_unsafe_get(f,0)) ));
HXLINE(1758)				Float c2b = render->mesh->curv2->__get(( (int)(_hx_array_unsafe_get(f,1)) ));
HXLINE(1759)				Float c2c = render->mesh->curv2->__get(( (int)(_hx_array_unsafe_get(f,2)) ));
HXLINE(1760)				Float c1 = (((c1a * ((( (Float)(1) ) - h->u) - h->v)) + (c1b * h->u)) + (c1c * h->v));
HXLINE(1761)				Float c2 = (((c2a * ((( (Float)(1) ) - h->u) - h->v)) + (c2b * h->u)) + (c2c * h->v));
HXLINE(1762)				data->__unsafe_set(idx,c1);
HXLINE(1763)				data->__unsafe_set((idx + 1),c2);
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1744_curvature)
HXLINE(1745)		::Array< Float > this1 = ::Array_obj< Float >::__new(((render->width * render->height) * 2));
HXDLIN(1745)		::Array< Float > data = this1;
HXLINE(1747)		::apparentridges::PixelMap_obj::raycast(render, ::Dynamic(new _hx_Closure_0(data,render)));
HXLINE(1767)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelMap_obj,curvature,return )

::Array< Float > PixelMap_obj::lambertian( ::apparentridges::Render render,::Array< Float > light,::hx::Null< bool >  __o_normalize){
            		HX_BEGIN_LOCAL_FUNC_S5(::hx::LocalFunc,_hx_Closure_0,::Array< Float >,min,::Array< Float >,data,::Array< Float >,max, ::apparentridges::Render,render,::Array< Float >,light) HXARGC(3)
            		void _hx_run( ::apparentridges::RayHit h,int x,int y){
            			HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1775_lambertian)
HXLINE(1776)			int idx = ((y * render->width) + x);
HXLINE(1777)			if (::hx::IsNull( h )) {
HXLINE(1778)				data->__unsafe_set(idx,::Math_obj::NEGATIVE_INFINITY);
            			}
            			else {
HXLINE(1780)				::Array< int > f = h->face;
HXLINE(1781)				::Array< Float > n0 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXLINE(1782)				::Array< Float > n1 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXLINE(1783)				::Array< Float > n2 = render->mesh->normals->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXLINE(1784)				Float rhs = ((( (Float)(1) ) - h->u) - h->v);
HXDLIN(1784)				Float _x = (( (Float)(_hx_array_unsafe_get(n0,0)) ) * rhs);
HXDLIN(1784)				Float _y = (( (Float)(_hx_array_unsafe_get(n0,1)) ) * rhs);
HXDLIN(1784)				Float _z = (( (Float)(_hx_array_unsafe_get(n0,2)) ) * rhs);
HXDLIN(1784)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1784)				::Array< Float > this2 = this1;
HXDLIN(1784)				this2->__unsafe_set(0,_x);
HXDLIN(1784)				this2->__unsafe_set(1,_y);
HXDLIN(1784)				this2->__unsafe_set(2,_z);
HXDLIN(1784)				::Array< Float > this3 = this2;
HXDLIN(1784)				Float rhs1 = h->u;
HXDLIN(1784)				Float _x1 = (( (Float)(_hx_array_unsafe_get(n1,0)) ) * rhs1);
HXDLIN(1784)				Float _y1 = (( (Float)(_hx_array_unsafe_get(n1,1)) ) * rhs1);
HXDLIN(1784)				Float _z1 = (( (Float)(_hx_array_unsafe_get(n1,2)) ) * rhs1);
HXDLIN(1784)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1784)				::Array< Float > this5 = this4;
HXDLIN(1784)				this5->__unsafe_set(0,_x1);
HXDLIN(1784)				this5->__unsafe_set(1,_y1);
HXDLIN(1784)				this5->__unsafe_set(2,_z1);
HXDLIN(1784)				::Array< Float > rhs2 = this5;
HXDLIN(1784)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1784)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN(1784)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1784)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN(1784)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1784)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN(1784)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1784)				::Array< Float > this7 = this6;
HXDLIN(1784)				this7->__unsafe_set(0,_x3);
HXDLIN(1784)				this7->__unsafe_set(1,_y3);
HXDLIN(1784)				this7->__unsafe_set(2,_z3);
HXDLIN(1784)				::Array< Float > this8 = this7;
HXDLIN(1784)				Float rhs3 = h->v;
HXDLIN(1784)				Float _x4 = (( (Float)(_hx_array_unsafe_get(n2,0)) ) * rhs3);
HXDLIN(1784)				Float _y4 = (( (Float)(_hx_array_unsafe_get(n2,1)) ) * rhs3);
HXDLIN(1784)				Float _z4 = (( (Float)(_hx_array_unsafe_get(n2,2)) ) * rhs3);
HXDLIN(1784)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1784)				::Array< Float > this10 = this9;
HXDLIN(1784)				this10->__unsafe_set(0,_x4);
HXDLIN(1784)				this10->__unsafe_set(1,_y4);
HXDLIN(1784)				this10->__unsafe_set(2,_z4);
HXDLIN(1784)				::Array< Float > rhs4 = this10;
HXDLIN(1784)				Float _x5 = ( (Float)(_hx_array_unsafe_get(this8,0)) );
HXDLIN(1784)				Float _x6 = (_x5 + ( (Float)(_hx_array_unsafe_get(rhs4,0)) ));
HXDLIN(1784)				Float _y5 = ( (Float)(_hx_array_unsafe_get(this8,1)) );
HXDLIN(1784)				Float _y6 = (_y5 + ( (Float)(_hx_array_unsafe_get(rhs4,1)) ));
HXDLIN(1784)				Float _z5 = ( (Float)(_hx_array_unsafe_get(this8,2)) );
HXDLIN(1784)				Float _z6 = (_z5 + ( (Float)(_hx_array_unsafe_get(rhs4,2)) ));
HXDLIN(1784)				::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1784)				::Array< Float > this12 = this11;
HXDLIN(1784)				this12->__unsafe_set(0,_x6);
HXDLIN(1784)				this12->__unsafe_set(1,_y6);
HXDLIN(1784)				this12->__unsafe_set(2,_z6);
HXDLIN(1784)				::Array< Float > n = this12;
HXLINE(1785)				Float ndotl = ( (Float)(_hx_array_unsafe_get(n,0)) );
HXDLIN(1785)				Float ndotl1 = (ndotl * ( (Float)(_hx_array_unsafe_get(light,0)) ));
HXDLIN(1785)				Float ndotl2 = ( (Float)(_hx_array_unsafe_get(n,1)) );
HXDLIN(1785)				Float ndotl3 = (ndotl1 + (ndotl2 * ( (Float)(_hx_array_unsafe_get(light,1)) )));
HXDLIN(1785)				Float ndotl4 = ( (Float)(_hx_array_unsafe_get(n,2)) );
HXDLIN(1785)				Float ndotl5 = (ndotl3 + (ndotl4 * ( (Float)(_hx_array_unsafe_get(light,2)) )));
HXLINE(1786)				min[0] = ::Math_obj::min(min->__get(0),ndotl5);
HXLINE(1787)				max[0] = ::Math_obj::max(max->__get(0),ndotl5);
HXLINE(1788)				data->__unsafe_set(idx,ndotl5);
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            		bool normalize = __o_normalize.Default(true);
            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1770_lambertian)
HXLINE(1771)		::Array< Float > this1 = ::Array_obj< Float >::__new((render->width * render->height));
HXDLIN(1771)		::Array< Float > data = this1;
HXLINE(1772)		::Array< Float > min = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::POSITIVE_INFINITY);
HXLINE(1773)		::Array< Float > max = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::NEGATIVE_INFINITY);
HXLINE(1775)		::apparentridges::PixelMap_obj::raycast(render, ::Dynamic(new _hx_Closure_0(min,data,max,render,light)));
HXLINE(1791)		if (normalize) {
HXLINE(1792)			int _g = 0;
HXDLIN(1792)			int _g1 = data->length;
HXDLIN(1792)			while((_g < _g1)){
HXLINE(1792)				_g = (_g + 1);
HXDLIN(1792)				int i = (_g - 1);
HXLINE(1793)				if ((( (Float)(_hx_array_unsafe_get(data,i)) ) != ::Math_obj::NEGATIVE_INFINITY)) {
HXLINE(1794)					Float val = ( (Float)(_hx_array_unsafe_get(data,i)) );
HXDLIN(1794)					data->__unsafe_set(i,((val - min->__get(0)) / (max->__get(0) - min->__get(0))));
            				}
            				else {
HXLINE(1796)					data->__unsafe_set(i,0);
            				}
            			}
            		}
HXLINE(1800)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PixelMap_obj,lambertian,return )

::Array< Float > PixelMap_obj::ambientOcclusion( ::apparentridges::Render render,::hx::Null< int >  __o_numSamples,::hx::Null< bool >  __o_normalize){
            		HX_BEGIN_LOCAL_FUNC_S5(::hx::LocalFunc,_hx_Closure_1,::Array< Float >,min,int,numSamples,::Array< Float >,data,::Array< Float >,max, ::apparentridges::Render,render) HXARGC(3)
            		void _hx_run( ::apparentridges::RayHit h,int x,int y){
            			HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1808_ambientOcclusion)
HXLINE(1809)			int idx = ((y * render->width) + x);
HXLINE(1810)			if (::hx::IsNull( h )) {
HXLINE(1811)				data->__unsafe_set(idx,::Math_obj::NEGATIVE_INFINITY);
            			}
            			else {
HXLINE(1813)				::Array< int > f = h->face;
HXLINE(1815)				::Array< Float > p0 = render->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXLINE(1816)				::Array< Float > p1 = render->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXLINE(1817)				::Array< Float > p2 = render->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXLINE(1818)				Float rhs = ((( (Float)(1) ) - h->u) - h->v);
HXDLIN(1818)				Float _x = (( (Float)(_hx_array_unsafe_get(p0,0)) ) * rhs);
HXDLIN(1818)				Float _y = (( (Float)(_hx_array_unsafe_get(p0,1)) ) * rhs);
HXDLIN(1818)				Float _z = (( (Float)(_hx_array_unsafe_get(p0,2)) ) * rhs);
HXDLIN(1818)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1818)				::Array< Float > this2 = this1;
HXDLIN(1818)				this2->__unsafe_set(0,_x);
HXDLIN(1818)				this2->__unsafe_set(1,_y);
HXDLIN(1818)				this2->__unsafe_set(2,_z);
HXDLIN(1818)				::Array< Float > this3 = this2;
HXDLIN(1818)				Float rhs1 = h->u;
HXDLIN(1818)				Float _x1 = (( (Float)(_hx_array_unsafe_get(p1,0)) ) * rhs1);
HXDLIN(1818)				Float _y1 = (( (Float)(_hx_array_unsafe_get(p1,1)) ) * rhs1);
HXDLIN(1818)				Float _z1 = (( (Float)(_hx_array_unsafe_get(p1,2)) ) * rhs1);
HXDLIN(1818)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1818)				::Array< Float > this5 = this4;
HXDLIN(1818)				this5->__unsafe_set(0,_x1);
HXDLIN(1818)				this5->__unsafe_set(1,_y1);
HXDLIN(1818)				this5->__unsafe_set(2,_z1);
HXDLIN(1818)				::Array< Float > rhs2 = this5;
HXDLIN(1818)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1818)				Float _x3 = (_x2 + ( (Float)(_hx_array_unsafe_get(rhs2,0)) ));
HXDLIN(1818)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1818)				Float _y3 = (_y2 + ( (Float)(_hx_array_unsafe_get(rhs2,1)) ));
HXDLIN(1818)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1818)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(rhs2,2)) ));
HXDLIN(1818)				::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1818)				::Array< Float > this7 = this6;
HXDLIN(1818)				this7->__unsafe_set(0,_x3);
HXDLIN(1818)				this7->__unsafe_set(1,_y3);
HXDLIN(1818)				this7->__unsafe_set(2,_z3);
HXDLIN(1818)				::Array< Float > this8 = this7;
HXDLIN(1818)				Float rhs3 = h->v;
HXDLIN(1818)				Float _x4 = (( (Float)(_hx_array_unsafe_get(p2,0)) ) * rhs3);
HXDLIN(1818)				Float _y4 = (( (Float)(_hx_array_unsafe_get(p2,1)) ) * rhs3);
HXDLIN(1818)				Float _z4 = (( (Float)(_hx_array_unsafe_get(p2,2)) ) * rhs3);
HXDLIN(1818)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1818)				::Array< Float > this10 = this9;
HXDLIN(1818)				this10->__unsafe_set(0,_x4);
HXDLIN(1818)				this10->__unsafe_set(1,_y4);
HXDLIN(1818)				this10->__unsafe_set(2,_z4);
HXDLIN(1818)				::Array< Float > rhs4 = this10;
HXDLIN(1818)				Float _x5 = ( (Float)(_hx_array_unsafe_get(this8,0)) );
HXDLIN(1818)				Float _x6 = (_x5 + ( (Float)(_hx_array_unsafe_get(rhs4,0)) ));
HXDLIN(1818)				Float _y5 = ( (Float)(_hx_array_unsafe_get(this8,1)) );
HXDLIN(1818)				Float _y6 = (_y5 + ( (Float)(_hx_array_unsafe_get(rhs4,1)) ));
HXDLIN(1818)				Float _z5 = ( (Float)(_hx_array_unsafe_get(this8,2)) );
HXDLIN(1818)				Float _z6 = (_z5 + ( (Float)(_hx_array_unsafe_get(rhs4,2)) ));
HXDLIN(1818)				::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1818)				::Array< Float > this12 = this11;
HXDLIN(1818)				this12->__unsafe_set(0,_x6);
HXDLIN(1818)				this12->__unsafe_set(1,_y6);
HXDLIN(1818)				this12->__unsafe_set(2,_z6);
HXDLIN(1818)				::Array< Float > o = this12;
HXLINE(1820)				int cnt = 0;
HXLINE(1821)				{
HXLINE(1821)					int _g = 0;
HXDLIN(1821)					int _g1 = numSamples;
HXDLIN(1821)					while((_g < _g1)){
            						HX_BEGIN_LOCAL_FUNC_S6(::hx::LocalFunc,_hx_Closure_0, ::apparentridges::BVHTree,bvh,::Array< Float >,r_o,::Array< ::Dynamic>,hitNode,Float,r_tmax,Float,r_tmin,::Array< Float >,r_d) HXARGC(1)
            						 ::apparentridges::RayHit _hx_run( ::apparentridges::BVHNode node){
            							HX_GC_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1831_ambientOcclusion)
HXLINE(1831)							bool _hx_tmp;
HXDLIN(1831)							if (::hx::IsNull( node->left )) {
HXLINE(1831)								_hx_tmp = ::hx::IsNull( node->right );
            							}
            							else {
HXLINE(1831)								_hx_tmp = false;
            							}
HXDLIN(1831)							if (_hx_tmp) {
HXLINE(1831)								Float tmin = ::Math_obj::POSITIVE_INFINITY;
HXDLIN(1831)								 ::apparentridges::RayHit closest = null();
HXDLIN(1831)								{
HXLINE(1831)									int _g = node->begin;
HXDLIN(1831)									int _g1 = node->end;
HXDLIN(1831)									while((_g < _g1)){
HXLINE(1831)										_g = (_g + 1);
HXDLIN(1831)										int i = (_g - 1);
HXDLIN(1831)										::Array< Float > p0 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),0)) )).StaticCast< ::Array< Float > >();
HXDLIN(1831)										::Array< Float > p1 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),1)) )).StaticCast< ::Array< Float > >();
HXDLIN(1831)										::Array< Float > p2 = bvh->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(bvh->faces->__get(i).StaticCast< ::Array< int > >(),2)) )).StaticCast< ::Array< Float > >();
HXDLIN(1831)										Float _x = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1831)										Float _x1 = (_x - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1831)										Float _y = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN(1831)										Float _y1 = (_y - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1831)										Float _z = ( (Float)(_hx_array_unsafe_get(p1,2)) );
HXDLIN(1831)										Float _z1 = (_z - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1831)										::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)										::Array< Float > this2 = this1;
HXDLIN(1831)										this2->__unsafe_set(0,_x1);
HXDLIN(1831)										this2->__unsafe_set(1,_y1);
HXDLIN(1831)										this2->__unsafe_set(2,_z1);
HXDLIN(1831)										::Array< Float > e1 = this2;
HXDLIN(1831)										Float _x2 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1831)										Float _x3 = (_x2 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1831)										Float _y2 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN(1831)										Float _y3 = (_y2 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1831)										Float _z2 = ( (Float)(_hx_array_unsafe_get(p2,2)) );
HXDLIN(1831)										Float _z3 = (_z2 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1831)										::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)										::Array< Float > this4 = this3;
HXDLIN(1831)										this4->__unsafe_set(0,_x3);
HXDLIN(1831)										this4->__unsafe_set(1,_y3);
HXDLIN(1831)										this4->__unsafe_set(2,_z3);
HXDLIN(1831)										::Array< Float > e2 = this4;
HXDLIN(1831)										::Array< Float > this5 = r_o;
HXDLIN(1831)										Float _x4 = ( (Float)(_hx_array_unsafe_get(this5,0)) );
HXDLIN(1831)										Float _x5 = (_x4 - ( (Float)(_hx_array_unsafe_get(p0,0)) ));
HXDLIN(1831)										Float _y4 = ( (Float)(_hx_array_unsafe_get(this5,1)) );
HXDLIN(1831)										Float _y5 = (_y4 - ( (Float)(_hx_array_unsafe_get(p0,1)) ));
HXDLIN(1831)										Float _z4 = ( (Float)(_hx_array_unsafe_get(this5,2)) );
HXDLIN(1831)										Float _z5 = (_z4 - ( (Float)(_hx_array_unsafe_get(p0,2)) ));
HXDLIN(1831)										::Array< Float > this6 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)										::Array< Float > this7 = this6;
HXDLIN(1831)										this7->__unsafe_set(0,_x5);
HXDLIN(1831)										this7->__unsafe_set(1,_y5);
HXDLIN(1831)										this7->__unsafe_set(2,_z5);
HXDLIN(1831)										::Array< Float > s = this7;
HXDLIN(1831)										::Array< Float > this8 = r_d;
HXDLIN(1831)										Float _x6 = (( (Float)(_hx_array_unsafe_get(this8,0)) ) * ((Float)-1.0));
HXDLIN(1831)										Float _y6 = (( (Float)(_hx_array_unsafe_get(this8,1)) ) * ((Float)-1.0));
HXDLIN(1831)										Float _z6 = (( (Float)(_hx_array_unsafe_get(this8,2)) ) * ((Float)-1.0));
HXDLIN(1831)										::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)										::Array< Float > this10 = this9;
HXDLIN(1831)										this10->__unsafe_set(0,_x6);
HXDLIN(1831)										this10->__unsafe_set(1,_y6);
HXDLIN(1831)										this10->__unsafe_set(2,_z6);
HXDLIN(1831)										::Array< Float > _d = this10;
HXDLIN(1831)										Float _x7 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)										Float _x8 = (_x7 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1831)										Float _x9 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)										Float _x10 = (_x8 - (_x9 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1831)										Float _y7 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)										Float _y8 = (_y7 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1831)										Float _y9 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)										Float _y10 = (_y8 - (_y9 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1831)										Float _z7 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)										Float _z8 = (_z7 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1831)										Float _z9 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)										Float _z10 = (_z8 - (_z9 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1831)										::Array< Float > this11 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)										::Array< Float > this12 = this11;
HXDLIN(1831)										this12->__unsafe_set(0,_x10);
HXDLIN(1831)										this12->__unsafe_set(1,_y10);
HXDLIN(1831)										this12->__unsafe_set(2,_z10);
HXDLIN(1831)										::Array< Float > v1 = this12;
HXDLIN(1831)										Float denom = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1831)										Float denom1 = (denom * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1831)										Float denom2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1831)										Float denom3 = (denom1 + (denom2 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1831)										Float denom4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1831)										Float denom5 = (denom3 + (denom4 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1831)										 ::apparentridges::RayHit h;
HXDLIN(1831)										if ((denom5 == 0)) {
HXLINE(1831)											h = null();
            										}
            										else {
HXLINE(1831)											Float _x = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1831)											Float _x1 = (_x * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1831)											Float _x2 = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1831)											Float _x3 = (_x1 - (_x2 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1831)											Float _y = ( (Float)(_hx_array_unsafe_get(s,2)) );
HXDLIN(1831)											Float _y1 = (_y * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1831)											Float _y2 = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1831)											Float _y3 = (_y1 - (_y2 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1831)											Float _z = ( (Float)(_hx_array_unsafe_get(s,0)) );
HXDLIN(1831)											Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1831)											Float _z2 = ( (Float)(_hx_array_unsafe_get(s,1)) );
HXDLIN(1831)											Float _z3 = (_z1 - (_z2 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1831)											::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)											::Array< Float > this2 = this1;
HXDLIN(1831)											this2->__unsafe_set(0,_x3);
HXDLIN(1831)											this2->__unsafe_set(1,_y3);
HXDLIN(1831)											this2->__unsafe_set(2,_z3);
HXDLIN(1831)											::Array< Float > v1 = this2;
HXDLIN(1831)											Float _x4 = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1831)											Float _x5 = (_x4 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1831)											Float _x6 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1831)											Float _x7 = (_x5 + (_x6 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1831)											Float _x8 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1831)											Float _x9 = (_x7 + (_x8 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1831)											Float _x10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)											Float _x11 = (_x10 * ( (Float)(_hx_array_unsafe_get(s,2)) ));
HXDLIN(1831)											Float _x12 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)											Float _x13 = (_x11 - (_x12 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1831)											Float _y4 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)											Float _y5 = (_y4 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1831)											Float _y6 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)											Float _y7 = (_y5 - (_y6 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1831)											Float _z4 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)											Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(s,1)) ));
HXDLIN(1831)											Float _z6 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)											Float _z7 = (_z5 - (_z6 * ( (Float)(_hx_array_unsafe_get(s,0)) )));
HXDLIN(1831)											::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)											::Array< Float > this4 = this3;
HXDLIN(1831)											this4->__unsafe_set(0,_x13);
HXDLIN(1831)											this4->__unsafe_set(1,_y7);
HXDLIN(1831)											this4->__unsafe_set(2,_z7);
HXDLIN(1831)											::Array< Float > v11 = this4;
HXDLIN(1831)											Float _y8 = ( (Float)(_hx_array_unsafe_get(v11,0)) );
HXDLIN(1831)											Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(_d,0)) ));
HXDLIN(1831)											Float _y10 = ( (Float)(_hx_array_unsafe_get(v11,1)) );
HXDLIN(1831)											Float _y11 = (_y9 + (_y10 * ( (Float)(_hx_array_unsafe_get(_d,1)) )));
HXDLIN(1831)											Float _y12 = ( (Float)(_hx_array_unsafe_get(v11,2)) );
HXDLIN(1831)											Float _y13 = (_y11 + (_y12 * ( (Float)(_hx_array_unsafe_get(_d,2)) )));
HXDLIN(1831)											Float _x14 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)											Float _x15 = (_x14 * ( (Float)(_hx_array_unsafe_get(e2,2)) ));
HXDLIN(1831)											Float _x16 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)											Float _x17 = (_x15 - (_x16 * ( (Float)(_hx_array_unsafe_get(e2,1)) )));
HXDLIN(1831)											Float _y14 = ( (Float)(_hx_array_unsafe_get(e1,2)) );
HXDLIN(1831)											Float _y15 = (_y14 * ( (Float)(_hx_array_unsafe_get(e2,0)) ));
HXDLIN(1831)											Float _y16 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)											Float _y17 = (_y15 - (_y16 * ( (Float)(_hx_array_unsafe_get(e2,2)) )));
HXDLIN(1831)											Float _z8 = ( (Float)(_hx_array_unsafe_get(e1,0)) );
HXDLIN(1831)											Float _z9 = (_z8 * ( (Float)(_hx_array_unsafe_get(e2,1)) ));
HXDLIN(1831)											Float _z10 = ( (Float)(_hx_array_unsafe_get(e1,1)) );
HXDLIN(1831)											Float _z11 = (_z9 - (_z10 * ( (Float)(_hx_array_unsafe_get(e2,0)) )));
HXDLIN(1831)											::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)											::Array< Float > this6 = this5;
HXDLIN(1831)											this6->__unsafe_set(0,_x17);
HXDLIN(1831)											this6->__unsafe_set(1,_y17);
HXDLIN(1831)											this6->__unsafe_set(2,_z11);
HXDLIN(1831)											::Array< Float > v12 = this6;
HXDLIN(1831)											Float _z12 = ( (Float)(_hx_array_unsafe_get(v12,0)) );
HXDLIN(1831)											Float _z13 = (_z12 * ( (Float)(_hx_array_unsafe_get(s,0)) ));
HXDLIN(1831)											Float _z14 = ( (Float)(_hx_array_unsafe_get(v12,1)) );
HXDLIN(1831)											Float _z15 = (_z13 + (_z14 * ( (Float)(_hx_array_unsafe_get(s,1)) )));
HXDLIN(1831)											Float _z16 = ( (Float)(_hx_array_unsafe_get(v12,2)) );
HXDLIN(1831)											Float _z17 = (_z15 + (_z16 * ( (Float)(_hx_array_unsafe_get(s,2)) )));
HXDLIN(1831)											::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)											::Array< Float > this8 = this7;
HXDLIN(1831)											this8->__unsafe_set(0,_x9);
HXDLIN(1831)											this8->__unsafe_set(1,_y13);
HXDLIN(1831)											this8->__unsafe_set(2,_z17);
HXDLIN(1831)											::Array< Float > this9 = this8;
HXDLIN(1831)											Float rhs = (( (Float)(1) ) / denom5);
HXDLIN(1831)											Float _x18 = (( (Float)(_hx_array_unsafe_get(this9,0)) ) * rhs);
HXDLIN(1831)											Float _y18 = (( (Float)(_hx_array_unsafe_get(this9,1)) ) * rhs);
HXDLIN(1831)											Float _z18 = (( (Float)(_hx_array_unsafe_get(this9,2)) ) * rhs);
HXDLIN(1831)											::Array< Float > this10 = ::Array_obj< Float >::__new(3);
HXDLIN(1831)											::Array< Float > this11 = this10;
HXDLIN(1831)											this11->__unsafe_set(0,_x18);
HXDLIN(1831)											this11->__unsafe_set(1,_y18);
HXDLIN(1831)											this11->__unsafe_set(2,_z18);
HXDLIN(1831)											::Array< Float > uvt = this11;
HXDLIN(1831)											Float u = ( (Float)(_hx_array_unsafe_get(uvt,0)) );
HXDLIN(1831)											Float v = ( (Float)(_hx_array_unsafe_get(uvt,1)) );
HXDLIN(1831)											Float t = ( (Float)(_hx_array_unsafe_get(uvt,2)) );
HXDLIN(1831)											bool h1;
HXDLIN(1831)											bool h2;
HXDLIN(1831)											bool h3;
HXDLIN(1831)											bool h4;
HXDLIN(1831)											if (!((u < 0))) {
HXLINE(1831)												h4 = (v < 0);
            											}
            											else {
HXLINE(1831)												h4 = true;
            											}
HXDLIN(1831)											if (!(h4)) {
HXLINE(1831)												h3 = (((( (Float)(1) ) - u) - v) < 0);
            											}
            											else {
HXLINE(1831)												h3 = true;
            											}
HXDLIN(1831)											if (!(h3)) {
HXLINE(1831)												h2 = (t < r_tmin);
            											}
            											else {
HXLINE(1831)												h2 = true;
            											}
HXDLIN(1831)											if (!(h2)) {
HXLINE(1831)												h1 = (t > r_tmax);
            											}
            											else {
HXLINE(1831)												h1 = true;
            											}
HXDLIN(1831)											if (h1) {
HXLINE(1831)												h = null();
            											}
            											else {
HXLINE(1831)												 ::apparentridges::RayHit h1 =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t);
HXDLIN(1831)												h1->u = u;
HXDLIN(1831)												h1->v = v;
HXDLIN(1831)												h = h1;
            											}
            										}
HXDLIN(1831)										if (::hx::IsNotNull( h )) {
HXLINE(1831)											h->face = bvh->faces->__get(i).StaticCast< ::Array< int > >();
HXDLIN(1831)											if ((tmin > h->t)) {
HXLINE(1060)												tmin = h->t;
HXLINE(1061)												closest = h;
            											}
            										}
            									}
            								}
HXLINE(1831)								return closest;
            							}
HXDLIN(1831)							 ::apparentridges::BBox bb = node->left->bbox;
HXDLIN(1831)							Float tx1 = ( (Float)(_hx_array_unsafe_get(bb->min,0)) );
HXDLIN(1831)							Float tx11 = (tx1 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1831)							Float tx12 = (tx11 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1831)							Float tx2 = ( (Float)(_hx_array_unsafe_get(bb->max,0)) );
HXDLIN(1831)							Float tx21 = (tx2 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1831)							Float tx22 = (tx21 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1831)							Float ty1 = ( (Float)(_hx_array_unsafe_get(bb->min,1)) );
HXDLIN(1831)							Float ty11 = (ty1 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1831)							Float ty12 = (ty11 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1831)							Float ty2 = ( (Float)(_hx_array_unsafe_get(bb->max,1)) );
HXDLIN(1831)							Float ty21 = (ty2 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1831)							Float ty22 = (ty21 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1831)							Float tz1 = ( (Float)(_hx_array_unsafe_get(bb->min,2)) );
HXDLIN(1831)							Float tz11 = (tz1 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1831)							Float tz12 = (tz11 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1831)							Float tz2 = ( (Float)(_hx_array_unsafe_get(bb->max,2)) );
HXDLIN(1831)							Float tz21 = (tz2 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1831)							Float tz22 = (tz21 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1831)							Float t1 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx12,tx22),::Math_obj::min(ty12,ty22)),::Math_obj::min(tz12,tz22));
HXDLIN(1831)							Float t2 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx12,tx22),::Math_obj::max(ty12,ty22)),::Math_obj::max(tz12,tz22));
HXDLIN(1831)							 ::apparentridges::RayHit hitL;
HXDLIN(1831)							if (((t2 - t1) < 0)) {
HXLINE(1831)								hitL = null();
            							}
            							else {
HXLINE(1831)								bool hitL1;
HXDLIN(1831)								if (!((t1 > r_tmax))) {
HXLINE(1831)									hitL1 = (t2 < r_tmin);
            								}
            								else {
HXLINE(1831)									hitL1 = true;
            								}
HXDLIN(1831)								if (hitL1) {
HXLINE(1831)									hitL = null();
            								}
            								else {
HXLINE(1831)									 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t1);
HXDLIN(1831)									h->t2 = t2;
HXDLIN(1831)									hitL = h;
            								}
            							}
HXDLIN(1831)							 ::apparentridges::BBox bb1 = node->right->bbox;
HXDLIN(1831)							Float tx13 = ( (Float)(_hx_array_unsafe_get(bb1->min,0)) );
HXDLIN(1831)							Float tx14 = (tx13 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1831)							Float tx15 = (tx14 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1831)							Float tx23 = ( (Float)(_hx_array_unsafe_get(bb1->max,0)) );
HXDLIN(1831)							Float tx24 = (tx23 - ( (Float)(_hx_array_unsafe_get(r_o,0)) ));
HXDLIN(1831)							Float tx25 = (tx24 / ( (Float)(_hx_array_unsafe_get(r_d,0)) ));
HXDLIN(1831)							Float ty13 = ( (Float)(_hx_array_unsafe_get(bb1->min,1)) );
HXDLIN(1831)							Float ty14 = (ty13 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1831)							Float ty15 = (ty14 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1831)							Float ty23 = ( (Float)(_hx_array_unsafe_get(bb1->max,1)) );
HXDLIN(1831)							Float ty24 = (ty23 - ( (Float)(_hx_array_unsafe_get(r_o,1)) ));
HXDLIN(1831)							Float ty25 = (ty24 / ( (Float)(_hx_array_unsafe_get(r_d,1)) ));
HXDLIN(1831)							Float tz13 = ( (Float)(_hx_array_unsafe_get(bb1->min,2)) );
HXDLIN(1831)							Float tz14 = (tz13 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1831)							Float tz15 = (tz14 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1831)							Float tz23 = ( (Float)(_hx_array_unsafe_get(bb1->max,2)) );
HXDLIN(1831)							Float tz24 = (tz23 - ( (Float)(_hx_array_unsafe_get(r_o,2)) ));
HXDLIN(1831)							Float tz25 = (tz24 / ( (Float)(_hx_array_unsafe_get(r_d,2)) ));
HXDLIN(1831)							Float t11 = ::Math_obj::max(::Math_obj::max(::Math_obj::min(tx15,tx25),::Math_obj::min(ty15,ty25)),::Math_obj::min(tz15,tz25));
HXDLIN(1831)							Float t21 = ::Math_obj::min(::Math_obj::min(::Math_obj::max(tx15,tx25),::Math_obj::max(ty15,ty25)),::Math_obj::max(tz15,tz25));
HXDLIN(1831)							 ::apparentridges::RayHit hitR;
HXDLIN(1831)							if (((t21 - t11) < 0)) {
HXLINE(1831)								hitR = null();
            							}
            							else {
HXLINE(1831)								bool hitR1;
HXDLIN(1831)								if (!((t11 > r_tmax))) {
HXLINE(1831)									hitR1 = (t21 < r_tmin);
            								}
            								else {
HXLINE(1831)									hitR1 = true;
            								}
HXDLIN(1831)								if (hitR1) {
HXLINE(1831)									hitR = null();
            								}
            								else {
HXLINE(1831)									 ::apparentridges::RayHit h =  ::apparentridges::RayHit_obj::__alloc( HX_CTX ,t11);
HXDLIN(1831)									h->t2 = t21;
HXDLIN(1831)									hitR = h;
            								}
            							}
HXDLIN(1831)							bool _hx_tmp1;
HXDLIN(1831)							if (::hx::IsNotNull( hitL )) {
HXLINE(1831)								_hx_tmp1 = ::hx::IsNull( hitR );
            							}
            							else {
HXLINE(1831)								_hx_tmp1 = false;
            							}
HXDLIN(1831)							if (_hx_tmp1) {
HXLINE(1831)								return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->left)) );
            							}
            							else {
HXLINE(1831)								bool _hx_tmp;
HXDLIN(1831)								if (::hx::IsNull( hitL )) {
HXLINE(1831)									_hx_tmp = ::hx::IsNotNull( hitR );
            								}
            								else {
HXLINE(1831)									_hx_tmp = false;
            								}
HXDLIN(1831)								if (_hx_tmp) {
HXLINE(1831)									return ( ( ::apparentridges::RayHit)(hitNode->__get(0)(node->right)) );
            								}
            								else {
HXLINE(1831)									bool _hx_tmp;
HXDLIN(1831)									if (::hx::IsNull( hitL )) {
HXLINE(1831)										_hx_tmp = ::hx::IsNull( hitR );
            									}
            									else {
HXLINE(1831)										_hx_tmp = false;
            									}
HXDLIN(1831)									if (_hx_tmp) {
HXLINE(1831)										return null();
            									}
            								}
            							}
HXDLIN(1831)							 ::apparentridges::BVHNode first;
HXDLIN(1831)							 ::apparentridges::BVHNode second;
HXDLIN(1831)							if ((hitL->t < hitR->t)) {
HXLINE(1079)								first = node->left;
HXLINE(1080)								second = node->right;
            							}
            							else {
HXLINE(1082)								first = node->right;
HXLINE(1083)								second = node->left;
            							}
HXLINE(1831)							 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(first)) );
HXDLIN(1831)							bool _hx_tmp2;
HXDLIN(1831)							if (::hx::IsNotNull( h )) {
HXLINE(1831)								_hx_tmp2 = (h->t >= ::Math_obj::max(hitL->t,hitR->t));
            							}
            							else {
HXLINE(1831)								_hx_tmp2 = true;
            							}
HXDLIN(1831)							if (_hx_tmp2) {
HXLINE(1831)								 ::apparentridges::RayHit h2 = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(second)) );
HXDLIN(1831)								if (::hx::IsNotNull( h2 )) {
HXLINE(1831)									bool _hx_tmp;
HXDLIN(1831)									if (::hx::IsNotNull( h )) {
HXLINE(1831)										_hx_tmp = (h2->t < h->t);
            									}
            									else {
HXLINE(1831)										_hx_tmp = true;
            									}
HXDLIN(1831)									if (_hx_tmp) {
HXLINE(1831)										return h2;
            									}
            								}
            							}
HXDLIN(1831)							return h;
            						}
            						HX_END_LOCAL_FUNC1(return)

HXLINE(1821)						_g = (_g + 1);
HXDLIN(1821)						int i = (_g - 1);
HXLINE(1822)						Float Xi1 = ::Math_obj::random();
HXDLIN(1822)						Float Xi2 = ::Math_obj::random();
HXDLIN(1822)						Float theta = ::Math_obj::acos(Xi1);
HXDLIN(1822)						Float phi = ((( (Float)(2) ) * ::Math_obj::PI) * Xi2);
HXDLIN(1822)						Float xs = (::Math_obj::sin(theta) * ::Math_obj::cos(phi));
HXDLIN(1822)						Float ys = (::Math_obj::sin(theta) * ::Math_obj::sin(phi));
HXDLIN(1822)						Float zs = ::Math_obj::cos(theta);
HXDLIN(1822)						::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1822)						::Array< Float > this2 = this1;
HXDLIN(1822)						this2->__unsafe_set(0,xs);
HXDLIN(1822)						this2->__unsafe_set(1,ys);
HXDLIN(1822)						this2->__unsafe_set(2,zs);
HXDLIN(1822)						::Array< Float > v = this2;
HXDLIN(1822)						::Array< Float > d = v;
HXLINE(1823)						if ((::Math_obj::random() < ((Float)0.5))) {
HXLINE(1824)							Float v = -(( (Float)(_hx_array_unsafe_get(d,2)) ));
HXDLIN(1824)							d->__unsafe_set(2,v);
            						}
HXLINE(1826)						Float r_tmin;
HXDLIN(1826)						Float r_tmax;
HXDLIN(1826)						::Array< Float > r_o;
HXDLIN(1826)						::Array< Float > r_d = d;
HXLINE(1828)						r_o = o;
HXLINE(1829)						r_tmin = ((Float)0.1);
HXLINE(1830)						r_tmax = ::Math_obj::POSITIVE_INFINITY;
HXLINE(1831)						 ::apparentridges::BVHTree bvh = render->mesh->bvh;
HXDLIN(1831)						::Array< ::Dynamic> hitNode = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE(1046)						hitNode[0] =  ::Dynamic(new _hx_Closure_0(bvh,r_o,hitNode,r_tmax,r_tmin,r_d));
HXLINE(1831)						 ::apparentridges::RayHit h = ( ( ::apparentridges::RayHit)(hitNode->__get(0)(bvh->root)) );
HXLINE(1832)						if (::hx::IsNotNull( h )) {
HXLINE(1833)							cnt = (cnt + 1);
            						}
            					}
            				}
HXLINE(1836)				Float v = (( (Float)(1) ) - (( (Float)(cnt) ) / ( (Float)(numSamples) )));
HXLINE(1837)				min[0] = ::Math_obj::min(min->__get(0),v);
HXLINE(1838)				max[0] = ::Math_obj::max(max->__get(0),v);
HXLINE(1839)				data->__unsafe_set(idx,v);
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            		int numSamples = __o_numSamples.Default(32);
            		bool normalize = __o_normalize.Default(true);
            	HX_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1803_ambientOcclusion)
HXLINE(1804)		::Array< Float > this1 = ::Array_obj< Float >::__new((render->width * render->height));
HXDLIN(1804)		::Array< Float > data = this1;
HXLINE(1805)		::Array< Float > min = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::POSITIVE_INFINITY);
HXLINE(1806)		::Array< Float > max = ::Array_obj< Float >::__new(1)->init(0,::Math_obj::NEGATIVE_INFINITY);
HXLINE(1808)		::apparentridges::PixelMap_obj::raycast(render, ::Dynamic(new _hx_Closure_1(min,numSamples,data,max,render)));
HXLINE(1843)		if (normalize) {
HXLINE(1844)			int _g = 0;
HXDLIN(1844)			int _g1 = data->length;
HXDLIN(1844)			while((_g < _g1)){
HXLINE(1844)				_g = (_g + 1);
HXDLIN(1844)				int i = (_g - 1);
HXLINE(1845)				if ((( (Float)(_hx_array_unsafe_get(data,i)) ) != ::Math_obj::NEGATIVE_INFINITY)) {
HXLINE(1846)					Float val = ( (Float)(_hx_array_unsafe_get(data,i)) );
HXDLIN(1846)					data->__unsafe_set(i,((val - min->__get(0)) / (max->__get(0) - min->__get(0))));
            				}
            				else {
HXLINE(1848)					data->__unsafe_set(i,0);
            				}
            			}
            		}
HXLINE(1852)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PixelMap_obj,ambientOcclusion,return )

::String PixelMap_obj::toPPMString(::Array< Float > data,int w,int h,Float min,Float max){
            	HX_GC_STACKFRAME(&_hx_pos_a32ac4e6f2b4899a_1859_toPPMString)
HXLINE(1863)		int chan = ::Std_obj::_hx_int((( (Float)(data->length) ) / ( (Float)((w * h)) )));
HXLINE(1865)		 ::StringBuf out =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(1866)		{
HXLINE(1866)			::String x = ((((HX_("P3\n",c7,e0,3c,00) + w) + HX_(" ",20,00,00,00)) + h) + HX_("\n255\n",c2,dd,36,e3));
HXDLIN(1866)			if (::hx::IsNotNull( out->charBuf )) {
HXLINE(1866)				out->flush();
            			}
HXDLIN(1866)			if (::hx::IsNull( out->b )) {
HXLINE(1866)				out->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            			}
            			else {
HXLINE(1866)				::Array< ::String > out1 = out->b;
HXDLIN(1866)				out1->push(::Std_obj::string(x));
            			}
            		}
HXLINE(1867)		{
HXLINE(1867)			int _g = 0;
HXDLIN(1867)			int _g1 = ::Std_obj::_hx_int((( (Float)(data->length) ) / ( (Float)(chan) )));
HXDLIN(1867)			while((_g < _g1)){
HXLINE(1867)				_g = (_g + 1);
HXDLIN(1867)				int i = (_g - 1);
HXLINE(1868)				int u = ::Std_obj::_hx_int(::Math_obj::min(::Math_obj::max((((( (Float)(_hx_array_unsafe_get(data,(i * chan))) ) - min) / (max - min)) * ( (Float)(255) )),( (Float)(0) )),( (Float)(255) )));
HXLINE(1869)				int v;
HXDLIN(1869)				if ((chan == 1)) {
HXLINE(1869)					v = u;
            				}
            				else {
HXLINE(1869)					v = ::Std_obj::_hx_int(::Math_obj::min(::Math_obj::max((((( (Float)(_hx_array_unsafe_get(data,((i * chan) + 1))) ) - min) / (max - min)) * ( (Float)(255) )),( (Float)(0) )),( (Float)(255) )));
            				}
HXLINE(1870)				int w;
HXDLIN(1870)				if ((chan == 1)) {
HXLINE(1870)					w = u;
            				}
            				else {
HXLINE(1870)					if ((chan == 2)) {
HXLINE(1870)						w = 128;
            					}
            					else {
HXLINE(1870)						w = ::Std_obj::_hx_int(::Math_obj::min(::Math_obj::max((((( (Float)(_hx_array_unsafe_get(data,((i * chan) + 2))) ) - min) / (max - min)) * ( (Float)(255) )),( (Float)(0) )),( (Float)(255) )));
            					}
            				}
HXLINE(1871)				{
HXLINE(1871)					::String x = ((((((HX_("",00,00,00,00) + u) + HX_(" ",20,00,00,00)) + v) + HX_(" ",20,00,00,00)) + w) + HX_(" ",20,00,00,00));
HXDLIN(1871)					if (::hx::IsNotNull( out->charBuf )) {
HXLINE(1871)						out->flush();
            					}
HXDLIN(1871)					if (::hx::IsNull( out->b )) {
HXLINE(1871)						out->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            					}
            					else {
HXLINE(1871)						::Array< ::String > out1 = out->b;
HXDLIN(1871)						out1->push(::Std_obj::string(x));
            					}
            				}
            			}
            		}
HXLINE(1873)		return out->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(PixelMap_obj,toPPMString,return )


PixelMap_obj::PixelMap_obj()
{
}

bool PixelMap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { outValue = depth_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"normal") ) { outValue = normal_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"raycast") ) { outValue = raycast_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"curvature") ) { outValue = curvature_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"lambertian") ) { outValue = lambertian_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"toPPMString") ) { outValue = toPPMString_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"ambientOcclusion") ) { outValue = ambientOcclusion_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PixelMap_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *PixelMap_obj_sStaticStorageInfo = 0;
#endif

::hx::Class PixelMap_obj::__mClass;

static ::String PixelMap_obj_sStaticFields[] = {
	HX_("raycast",a9,31,63,3a),
	HX_("depth",03,f1,29,d7),
	HX_("normal",27,72,69,30),
	HX_("curvature",9f,69,f9,90),
	HX_("lambertian",19,bd,4b,a5),
	HX_("ambientOcclusion",15,89,15,a1),
	HX_("toPPMString",23,62,00,58),
	::String(null())
};

void PixelMap_obj::__register()
{
	PixelMap_obj _hx_dummy;
	PixelMap_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.PixelMap",e3,83,5f,61);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PixelMap_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(PixelMap_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PixelMap_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PixelMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PixelMap_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
