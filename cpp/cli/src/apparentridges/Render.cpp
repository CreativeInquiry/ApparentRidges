// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_apparentridges_BSphere
#include <apparentridges/BSphere.h>
#endif
#ifndef INCLUDED_apparentridges_Line
#include <apparentridges/Line.h>
#endif
#ifndef INCLUDED_apparentridges_Mesh
#include <apparentridges/Mesh.h>
#endif
#ifndef INCLUDED_apparentridges_Render
#include <apparentridges/Render.h>
#endif
#ifndef INCLUDED_apparentridges_Ridge
#include <apparentridges/Ridge.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f903e347556b9149_1441_new,"apparentridges.Render","new",0x4a10c4b5,"apparentridges.Render.new","apparentridges/ApparentRidges.hx",1441,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1459_clear,"apparentridges.Render","clear",0x327de522,"apparentridges.Render.clear","apparentridges/ApparentRidges.hx",1459,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1468_setFocal,"apparentridges.Render","setFocal",0x0fe1eeee,"apparentridges.Render.setFocal","apparentridges/ApparentRidges.hx",1468,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1471_setVerbose,"apparentridges.Render","setVerbose",0x7ce26c4b,"apparentridges.Render.setVerbose","apparentridges/ApparentRidges.hx",1471,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1474_transform,"apparentridges.Render","transform",0xc81f8f81,"apparentridges.Render.transform","apparentridges/ApparentRidges.hx",1474,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1482_scaleRotateTranslate,"apparentridges.Render","scaleRotateTranslate",0xf19c4e14,"apparentridges.Render.scaleRotateTranslate","apparentridges/ApparentRidges.hx",1482,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1494_autoPlace,"apparentridges.Render","autoPlace",0x252594ed,"apparentridges.Render.autoPlace","apparentridges/ApparentRidges.hx",1494,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1510_vertices,"apparentridges.Render","vertices",0x6739f784,"apparentridges.Render.vertices","apparentridges/ApparentRidges.hx",1510,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1520_edges,"apparentridges.Render","edges",0x5402e12b,"apparentridges.Render.edges","apparentridges/ApparentRidges.hx",1520,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1535_apparentRidges,"apparentridges.Render","apparentRidges",0xc74607ec,"apparentridges.Render.apparentRidges","apparentridges/ApparentRidges.hx",1535,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1588_buildPolylines,"apparentridges.Render","buildPolylines",0x14212cf0,"apparentridges.Render.buildPolylines","apparentridges/ApparentRidges.hx",1588,0xfeacc84f)
HX_LOCAL_STACK_FRAME(_hx_pos_f903e347556b9149_1564_buildPolylines,"apparentridges.Render","buildPolylines",0x14212cf0,"apparentridges.Render.buildPolylines","apparentridges/ApparentRidges.hx",1564,0xfeacc84f)
namespace apparentridges{

void Render_obj::__construct( ::apparentridges::Mesh _mesh,int w,int h){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1441_new)
HXLINE(1451)		this->didPrecompute = false;
HXLINE(1449)		this->verbose = true;
HXLINE(1446)		this->focal = ((Float)1000);
HXLINE(1454)		this->mesh = _mesh;
HXLINE(1455)		this->lines = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1456)		this->width = w;
HXLINE(1457)		this->height = h;
            	}

Dynamic Render_obj::__CreateEmpty() { return new Render_obj; }

void *Render_obj::_hx_vtable = 0;

Dynamic Render_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Render_obj > _hx_result = new Render_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Render_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x679aeff7;
}

void Render_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1459_clear)
HXLINE(1460)		if (::hx::IsNotNull( this->lines )) {
HXLINE(1461)			this->lines->removeRange(0,this->lines->length);
            		}
HXLINE(1463)		if (::hx::IsNotNull( this->polylines )) {
HXLINE(1464)			this->polylines->removeRange(0,this->polylines->length);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Render_obj,clear,(void))

void Render_obj::setFocal(Float f){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1468_setFocal)
HXDLIN(1468)		this->focal = f;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Render_obj,setFocal,(void))

void Render_obj::setVerbose(int v){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1471_setVerbose)
HXDLIN(1471)		this->verbose = (v > 0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Render_obj,setVerbose,(void))

void Render_obj::transform(::Array< Float > mat4x4){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1474_transform)
HXDLIN(1474)		int _g = 0;
HXDLIN(1474)		int _g1 = this->mesh->vertices->length;
HXDLIN(1474)		while((_g < _g1)){
HXDLIN(1474)			_g = (_g + 1);
HXDLIN(1474)			int i = (_g - 1);
HXLINE(1475)			::Array< ::Dynamic> _hx_tmp = this->mesh->vertices;
HXDLIN(1475)			::Array< Float > v = this->mesh->vertices->__get(i).StaticCast< ::Array< Float > >();
HXDLIN(1475)			Float mat4x41 = mat4x4->__get(0);
HXDLIN(1475)			Float _x = (mat4x41 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x42 = mat4x4->__get(1);
HXDLIN(1475)			Float _x1 = (_x + (mat4x42 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x43 = mat4x4->__get(2);
HXDLIN(1475)			Float _x2 = (_x1 + (mat4x43 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _x3 = (_x2 + mat4x4->__get(3));
HXDLIN(1475)			Float mat4x44 = mat4x4->__get(12);
HXDLIN(1475)			Float _x4 = (mat4x44 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x45 = mat4x4->__get(13);
HXDLIN(1475)			Float _x5 = (_x4 + (mat4x45 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x46 = mat4x4->__get(14);
HXDLIN(1475)			Float _x6 = (_x5 + (mat4x46 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _x7 = (_x3 / (_x6 + mat4x4->__get(15)));
HXDLIN(1475)			Float mat4x47 = mat4x4->__get(4);
HXDLIN(1475)			Float _y = (mat4x47 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x48 = mat4x4->__get(5);
HXDLIN(1475)			Float _y1 = (_y + (mat4x48 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x49 = mat4x4->__get(6);
HXDLIN(1475)			Float _y2 = (_y1 + (mat4x49 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _y3 = (_y2 + mat4x4->__get(7));
HXDLIN(1475)			Float mat4x410 = mat4x4->__get(12);
HXDLIN(1475)			Float _y4 = (mat4x410 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x411 = mat4x4->__get(13);
HXDLIN(1475)			Float _y5 = (_y4 + (mat4x411 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x412 = mat4x4->__get(14);
HXDLIN(1475)			Float _y6 = (_y5 + (mat4x412 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _y7 = (_y3 / (_y6 + mat4x4->__get(15)));
HXDLIN(1475)			Float mat4x413 = mat4x4->__get(8);
HXDLIN(1475)			Float _z = (mat4x413 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x414 = mat4x4->__get(9);
HXDLIN(1475)			Float _z1 = (_z + (mat4x414 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x415 = mat4x4->__get(10);
HXDLIN(1475)			Float _z2 = (_z1 + (mat4x415 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _z3 = (_z2 + mat4x4->__get(11));
HXDLIN(1475)			Float mat4x416 = mat4x4->__get(12);
HXDLIN(1475)			Float _z4 = (mat4x416 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1475)			Float mat4x417 = mat4x4->__get(13);
HXDLIN(1475)			Float _z5 = (_z4 + (mat4x417 * ( (Float)(_hx_array_unsafe_get(v,1)) )));
HXDLIN(1475)			Float mat4x418 = mat4x4->__get(14);
HXDLIN(1475)			Float _z6 = (_z5 + (mat4x418 * ( (Float)(_hx_array_unsafe_get(v,2)) )));
HXDLIN(1475)			Float _z7 = (_z3 / (_z6 + mat4x4->__get(15)));
HXDLIN(1475)			::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1475)			::Array< Float > this2 = this1;
HXDLIN(1475)			this2->__unsafe_set(0,_x7);
HXDLIN(1475)			this2->__unsafe_set(1,_y7);
HXDLIN(1475)			this2->__unsafe_set(2,_z7);
HXDLIN(1475)			_hx_tmp[i] = this2;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Render_obj,transform,(void))

void Render_obj::scaleRotateTranslate(Float sx,Float sy,Float sz,Float rx,Float ry,Float rz,Float dx,Float dy,Float dz){
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1482_scaleRotateTranslate)
HXLINE(1483)		::Array< Float > scl = ::Array_obj< Float >::__new(16)->init(0,sx)->init(1,0)->init(2,0)->init(3,0)->init(4,0)->init(5,sy)->init(6,0)->init(7,0)->init(8,0)->init(9,0)->init(10,sz)->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1);
HXLINE(1484)		Float rotx_0 = ( (Float)(1) );
HXDLIN(1484)		Float rotx_1 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_2 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_3 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_4 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_5 = ::Math_obj::cos(rx);
HXDLIN(1484)		Float rotx_6 = -(::Math_obj::sin(rx));
HXDLIN(1484)		Float rotx_7 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_8 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_9 = ::Math_obj::sin(rx);
HXDLIN(1484)		Float rotx_10 = ::Math_obj::cos(rx);
HXDLIN(1484)		Float rotx_11 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_12 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_13 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_14 = ( (Float)(0) );
HXDLIN(1484)		Float rotx_15 = ( (Float)(1) );
HXLINE(1485)		Float roty_0 = ::Math_obj::cos(ry);
HXDLIN(1485)		Float roty_1 = ( (Float)(0) );
HXDLIN(1485)		Float roty_2 = ::Math_obj::sin(ry);
HXDLIN(1485)		Float roty_3 = ( (Float)(0) );
HXDLIN(1485)		Float roty_4 = ( (Float)(0) );
HXDLIN(1485)		Float roty_5 = ( (Float)(1) );
HXDLIN(1485)		Float roty_6 = ( (Float)(0) );
HXDLIN(1485)		Float roty_7 = ( (Float)(0) );
HXDLIN(1485)		Float roty_8 = -(::Math_obj::sin(ry));
HXDLIN(1485)		Float roty_9 = ( (Float)(0) );
HXDLIN(1485)		Float roty_10 = ::Math_obj::cos(ry);
HXDLIN(1485)		Float roty_11 = ( (Float)(0) );
HXDLIN(1485)		Float roty_12 = ( (Float)(0) );
HXDLIN(1485)		Float roty_13 = ( (Float)(0) );
HXDLIN(1485)		Float roty_14 = ( (Float)(0) );
HXDLIN(1485)		Float roty_15 = ( (Float)(1) );
HXLINE(1486)		Float rotz_0 = ::Math_obj::cos(rz);
HXDLIN(1486)		Float rotz_1 = -(::Math_obj::sin(rz));
HXDLIN(1486)		Float rotz_2 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_3 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_4 = ::Math_obj::sin(rz);
HXDLIN(1486)		Float rotz_5 = ::Math_obj::cos(rz);
HXDLIN(1486)		Float rotz_6 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_7 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_8 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_9 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_10 = ( (Float)(1) );
HXDLIN(1486)		Float rotz_11 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_12 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_13 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_14 = ( (Float)(0) );
HXDLIN(1486)		Float rotz_15 = ( (Float)(1) );
HXLINE(1487)		Float trsl_0 = ( (Float)(1) );
HXDLIN(1487)		Float trsl_1 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_2 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_3 = dx;
HXDLIN(1487)		Float trsl_4 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_5 = ( (Float)(1) );
HXDLIN(1487)		Float trsl_6 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_7 = dy;
HXDLIN(1487)		Float trsl_8 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_9 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_10 = ( (Float)(1) );
HXDLIN(1487)		Float trsl_11 = dz;
HXDLIN(1487)		Float trsl_12 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_13 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_14 = ( (Float)(0) );
HXDLIN(1487)		Float trsl_15 = ( (Float)(1) );
HXLINE(1489)		this->transform(scl);
HXLINE(1491)		Float B_0 = ((((roty_0 * rotx_0) + (roty_1 * rotx_4)) + (roty_2 * rotx_8)) + (roty_3 * rotx_12));
HXDLIN(1491)		Float B_1 = ((((roty_0 * rotx_1) + (roty_1 * rotx_5)) + (roty_2 * rotx_9)) + (roty_3 * rotx_13));
HXDLIN(1491)		Float B_2 = ((((roty_0 * rotx_2) + (roty_1 * rotx_6)) + (roty_2 * rotx_10)) + (roty_3 * rotx_14));
HXDLIN(1491)		Float B_3 = ((((roty_0 * rotx_3) + (roty_1 * rotx_7)) + (roty_2 * rotx_11)) + (roty_3 * rotx_15));
HXDLIN(1491)		Float B_4 = ((((roty_4 * rotx_0) + (roty_5 * rotx_4)) + (roty_6 * rotx_8)) + (roty_7 * rotx_12));
HXDLIN(1491)		Float B_5 = ((((roty_4 * rotx_1) + (roty_5 * rotx_5)) + (roty_6 * rotx_9)) + (roty_7 * rotx_13));
HXDLIN(1491)		Float B_6 = ((((roty_4 * rotx_2) + (roty_5 * rotx_6)) + (roty_6 * rotx_10)) + (roty_7 * rotx_14));
HXDLIN(1491)		Float B_7 = ((((roty_4 * rotx_3) + (roty_5 * rotx_7)) + (roty_6 * rotx_11)) + (roty_7 * rotx_15));
HXDLIN(1491)		Float B_8 = ((((roty_8 * rotx_0) + (roty_9 * rotx_4)) + (roty_10 * rotx_8)) + (roty_11 * rotx_12));
HXDLIN(1491)		Float B_9 = ((((roty_8 * rotx_1) + (roty_9 * rotx_5)) + (roty_10 * rotx_9)) + (roty_11 * rotx_13));
HXDLIN(1491)		Float B_10 = ((((roty_8 * rotx_2) + (roty_9 * rotx_6)) + (roty_10 * rotx_10)) + (roty_11 * rotx_14));
HXDLIN(1491)		Float B_11 = ((((roty_8 * rotx_3) + (roty_9 * rotx_7)) + (roty_10 * rotx_11)) + (roty_11 * rotx_15));
HXDLIN(1491)		Float B_12 = ((((roty_12 * rotx_0) + (roty_13 * rotx_4)) + (roty_14 * rotx_8)) + (roty_15 * rotx_12));
HXDLIN(1491)		Float B_13 = ((((roty_12 * rotx_1) + (roty_13 * rotx_5)) + (roty_14 * rotx_9)) + (roty_15 * rotx_13));
HXDLIN(1491)		Float B_14 = ((((roty_12 * rotx_2) + (roty_13 * rotx_6)) + (roty_14 * rotx_10)) + (roty_15 * rotx_14));
HXDLIN(1491)		Float B_15 = ((((roty_12 * rotx_3) + (roty_13 * rotx_7)) + (roty_14 * rotx_11)) + (roty_15 * rotx_15));
HXDLIN(1491)		Float B_01 = ((((rotz_0 * B_0) + (rotz_1 * B_4)) + (rotz_2 * B_8)) + (rotz_3 * B_12));
HXDLIN(1491)		Float B_16 = ((((rotz_0 * B_1) + (rotz_1 * B_5)) + (rotz_2 * B_9)) + (rotz_3 * B_13));
HXDLIN(1491)		Float B_21 = ((((rotz_0 * B_2) + (rotz_1 * B_6)) + (rotz_2 * B_10)) + (rotz_3 * B_14));
HXDLIN(1491)		Float B_31 = ((((rotz_0 * B_3) + (rotz_1 * B_7)) + (rotz_2 * B_11)) + (rotz_3 * B_15));
HXDLIN(1491)		Float B_41 = ((((rotz_4 * B_0) + (rotz_5 * B_4)) + (rotz_6 * B_8)) + (rotz_7 * B_12));
HXDLIN(1491)		Float B_51 = ((((rotz_4 * B_1) + (rotz_5 * B_5)) + (rotz_6 * B_9)) + (rotz_7 * B_13));
HXDLIN(1491)		Float B_61 = ((((rotz_4 * B_2) + (rotz_5 * B_6)) + (rotz_6 * B_10)) + (rotz_7 * B_14));
HXDLIN(1491)		Float B_71 = ((((rotz_4 * B_3) + (rotz_5 * B_7)) + (rotz_6 * B_11)) + (rotz_7 * B_15));
HXDLIN(1491)		Float B_81 = ((((rotz_8 * B_0) + (rotz_9 * B_4)) + (rotz_10 * B_8)) + (rotz_11 * B_12));
HXDLIN(1491)		Float B_91 = ((((rotz_8 * B_1) + (rotz_9 * B_5)) + (rotz_10 * B_9)) + (rotz_11 * B_13));
HXDLIN(1491)		Float B_101 = ((((rotz_8 * B_2) + (rotz_9 * B_6)) + (rotz_10 * B_10)) + (rotz_11 * B_14));
HXDLIN(1491)		Float B_111 = ((((rotz_8 * B_3) + (rotz_9 * B_7)) + (rotz_10 * B_11)) + (rotz_11 * B_15));
HXDLIN(1491)		Float B_121 = ((((rotz_12 * B_0) + (rotz_13 * B_4)) + (rotz_14 * B_8)) + (rotz_15 * B_12));
HXDLIN(1491)		Float B_131 = ((((rotz_12 * B_1) + (rotz_13 * B_5)) + (rotz_14 * B_9)) + (rotz_15 * B_13));
HXDLIN(1491)		Float B_141 = ((((rotz_12 * B_2) + (rotz_13 * B_6)) + (rotz_14 * B_10)) + (rotz_15 * B_14));
HXDLIN(1491)		Float B_151 = ((((rotz_12 * B_3) + (rotz_13 * B_7)) + (rotz_14 * B_11)) + (rotz_15 * B_15));
HXLINE(1490)		this->transform(::Array_obj< Float >::__new(16)->init(0,((((trsl_0 * B_01) + (trsl_1 * B_41)) + (trsl_2 * B_81)) + (trsl_3 * B_121)))->init(1,((((trsl_0 * B_16) + (trsl_1 * B_51)) + (trsl_2 * B_91)) + (trsl_3 * B_131)))->init(2,((((trsl_0 * B_21) + (trsl_1 * B_61)) + (trsl_2 * B_101)) + (trsl_3 * B_141)))->init(3,((((trsl_0 * B_31) + (trsl_1 * B_71)) + (trsl_2 * B_111)) + (trsl_3 * B_151)))->init(4,((((trsl_4 * B_01) + (trsl_5 * B_41)) + (trsl_6 * B_81)) + (trsl_7 * B_121)))->init(5,((((trsl_4 * B_16) + (trsl_5 * B_51)) + (trsl_6 * B_91)) + (trsl_7 * B_131)))->init(6,((((trsl_4 * B_21) + (trsl_5 * B_61)) + (trsl_6 * B_101)) + (trsl_7 * B_141)))->init(7,((((trsl_4 * B_31) + (trsl_5 * B_71)) + (trsl_6 * B_111)) + (trsl_7 * B_151)))->init(8,((((trsl_8 * B_01) + (trsl_9 * B_41)) + (trsl_10 * B_81)) + (trsl_11 * B_121)))->init(9,((((trsl_8 * B_16) + (trsl_9 * B_51)) + (trsl_10 * B_91)) + (trsl_11 * B_131)))->init(10,((((trsl_8 * B_21) + (trsl_9 * B_61)) + (trsl_10 * B_101)) + (trsl_11 * B_141)))->init(11,((((trsl_8 * B_31) + (trsl_9 * B_71)) + (trsl_10 * B_111)) + (trsl_11 * B_151)))->init(12,((((trsl_12 * B_01) + (trsl_13 * B_41)) + (trsl_14 * B_81)) + (trsl_15 * B_121)))->init(13,((((trsl_12 * B_16) + (trsl_13 * B_51)) + (trsl_14 * B_91)) + (trsl_15 * B_131)))->init(14,((((trsl_12 * B_21) + (trsl_13 * B_61)) + (trsl_14 * B_101)) + (trsl_15 * B_141)))->init(15,((((trsl_12 * B_31) + (trsl_13 * B_71)) + (trsl_14 * B_111)) + (trsl_15 * B_151))));
            	}


HX_DEFINE_DYNAMIC_FUNC9(Render_obj,scaleRotateTranslate,(void))

void Render_obj::autoPlace(::hx::Null< Float >  __o_zFactor,::hx::Null< Float >  __o_fFactor){
            		Float zFactor = __o_zFactor.Default(((Float)1.5));
            		Float fFactor = __o_fFactor.Default(((Float)1.25));
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1494_autoPlace)
HXLINE(1495)		this->mesh->computeBSphere();
HXLINE(1496)		Float x = -(( (Float)(_hx_array_unsafe_get(this->mesh->bsphere->o,0)) ));
HXDLIN(1496)		Float y = -(( (Float)(_hx_array_unsafe_get(this->mesh->bsphere->o,1)) ));
HXDLIN(1496)		this->transform(::Array_obj< Float >::__new(16)->init(0,1)->init(1,0)->init(2,0)->init(3,x)->init(4,0)->init(5,1)->init(6,0)->init(7,y)->init(8,0)->init(9,0)->init(10,1)->init(11,-(( (Float)(_hx_array_unsafe_get(this->mesh->bsphere->o,2)) )))->init(12,0)->init(13,0)->init(14,0)->init(15,1));
HXLINE(1499)		int a = this->width;
HXDLIN(1499)		int b = this->height;
HXDLIN(1499)		int r;
HXDLIN(1499)		if ((a > b)) {
HXLINE(1499)			r = b;
            		}
            		else {
HXLINE(1499)			r = a;
            		}
HXDLIN(1499)		Float r1 = (( (Float)(r) ) / ( (Float)(2) ));
HXLINE(1501)		this->transform(::Array_obj< Float >::__new(16)->init(0,(r1 / this->mesh->bsphere->r))->init(1,0)->init(2,0)->init(3,0)->init(4,0)->init(5,(r1 / this->mesh->bsphere->r))->init(6,0)->init(7,0)->init(8,0)->init(9,0)->init(10,(r1 / this->mesh->bsphere->r))->init(11,0)->init(12,0)->init(13,0)->init(14,0)->init(15,1));
HXLINE(1504)		this->transform(::Array_obj< Float >::__new(16)->init(0,1)->init(1,0)->init(2,0)->init(3,0)->init(4,0)->init(5,1)->init(6,0)->init(7,0)->init(8,0)->init(9,0)->init(10,1)->init(11,(r1 * zFactor))->init(12,0)->init(13,0)->init(14,0)->init(15,1));
HXLINE(1508)		this->setFocal((r1 * fFactor));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Render_obj,autoPlace,(void))

void Render_obj::vertices(){
            	HX_GC_STACKFRAME(&_hx_pos_f903e347556b9149_1510_vertices)
HXLINE(1511)		Float _x = (( (Float)(this->width) ) / ( (Float)(2) ));
HXDLIN(1511)		Float _y = (( (Float)(this->height) ) / ( (Float)(2) ));
HXDLIN(1511)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1511)		::Array< Float > this2 = this1;
HXDLIN(1511)		this2->__unsafe_set(0,_x);
HXDLIN(1511)		this2->__unsafe_set(1,_y);
HXDLIN(1511)		this2->__unsafe_set(2,0);
HXDLIN(1511)		::Array< Float > offs = this2;
HXLINE(1512)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1512)		::Array< Float > this4 = this3;
HXDLIN(1512)		this4->__unsafe_set(0,-1);
HXDLIN(1512)		this4->__unsafe_set(1,-1);
HXDLIN(1512)		this4->__unsafe_set(2,1);
HXDLIN(1512)		::Array< Float > yflip = this4;
HXLINE(1513)		{
HXLINE(1513)			int _g = 0;
HXDLIN(1513)			int _g1 = this->mesh->vertices->length;
HXDLIN(1513)			while((_g < _g1)){
HXLINE(1513)				_g = (_g + 1);
HXDLIN(1513)				int i = (_g - 1);
HXLINE(1514)				::Array< Float > v = this->mesh->vertices->__get(i).StaticCast< ::Array< Float > >();
HXLINE(1515)				Float f = this->focal;
HXDLIN(1515)				Float _x = (f * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1515)				Float _x1 = (_x / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1515)				Float _y = (f * ( (Float)(_hx_array_unsafe_get(v,1)) ));
HXDLIN(1515)				Float _y1 = (_y / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1515)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1515)				::Array< Float > this2 = this1;
HXDLIN(1515)				this2->__unsafe_set(0,_x1);
HXDLIN(1515)				this2->__unsafe_set(1,_y1);
HXDLIN(1515)				this2->__unsafe_set(2,0);
HXDLIN(1515)				::Array< Float > this3 = this2;
HXDLIN(1515)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1515)				Float _x3 = (_x2 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1515)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1515)				Float _y3 = (_y2 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1515)				Float _z = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1515)				Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1515)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1515)				::Array< Float > this5 = this4;
HXDLIN(1515)				this5->__unsafe_set(0,_x3);
HXDLIN(1515)				this5->__unsafe_set(1,_y3);
HXDLIN(1515)				this5->__unsafe_set(2,_z1);
HXDLIN(1515)				::Array< Float > this6 = this5;
HXDLIN(1515)				Float _x4 = ( (Float)(_hx_array_unsafe_get(this6,0)) );
HXDLIN(1515)				Float _x5 = (_x4 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1515)				Float _y4 = ( (Float)(_hx_array_unsafe_get(this6,1)) );
HXDLIN(1515)				Float _y5 = (_y4 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1515)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this6,2)) );
HXDLIN(1515)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1515)				::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1515)				::Array< Float > this8 = this7;
HXDLIN(1515)				this8->__unsafe_set(0,_x5);
HXDLIN(1515)				this8->__unsafe_set(1,_y5);
HXDLIN(1515)				this8->__unsafe_set(2,_z3);
HXDLIN(1515)				::Array< Float > p = this8;
HXLINE(1516)				::Array< ::Dynamic> _hx_tmp = this->lines;
HXDLIN(1516)				Float _hx_tmp1 = (( (Float)(_hx_array_unsafe_get(p,0)) ) - ( (Float)(1) ));
HXDLIN(1516)				Float _hx_tmp2 = (( (Float)(_hx_array_unsafe_get(p,1)) ) - ( (Float)(1) ));
HXDLIN(1516)				Float _hx_tmp3 = (( (Float)(_hx_array_unsafe_get(p,0)) ) + 1);
HXDLIN(1516)				_hx_tmp->push( ::apparentridges::Line_obj::__alloc( HX_CTX ,_hx_tmp1,_hx_tmp2,_hx_tmp3,(( (Float)(_hx_array_unsafe_get(p,1)) ) + 1)));
HXLINE(1517)				::Array< ::Dynamic> _hx_tmp4 = this->lines;
HXDLIN(1517)				Float _hx_tmp5 = (( (Float)(_hx_array_unsafe_get(p,0)) ) + 1);
HXDLIN(1517)				Float _hx_tmp6 = (( (Float)(_hx_array_unsafe_get(p,1)) ) - ( (Float)(1) ));
HXDLIN(1517)				Float _hx_tmp7 = (( (Float)(_hx_array_unsafe_get(p,0)) ) - ( (Float)(1) ));
HXDLIN(1517)				_hx_tmp4->push( ::apparentridges::Line_obj::__alloc( HX_CTX ,_hx_tmp5,_hx_tmp6,_hx_tmp7,(( (Float)(_hx_array_unsafe_get(p,1)) ) + 1)));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Render_obj,vertices,(void))

void Render_obj::edges(){
            	HX_GC_STACKFRAME(&_hx_pos_f903e347556b9149_1520_edges)
HXLINE(1521)		Float _x = (( (Float)(this->width) ) / ( (Float)(2) ));
HXDLIN(1521)		Float _y = (( (Float)(this->height) ) / ( (Float)(2) ));
HXDLIN(1521)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1521)		::Array< Float > this2 = this1;
HXDLIN(1521)		this2->__unsafe_set(0,_x);
HXDLIN(1521)		this2->__unsafe_set(1,_y);
HXDLIN(1521)		this2->__unsafe_set(2,0);
HXDLIN(1521)		::Array< Float > offs = this2;
HXLINE(1522)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1522)		::Array< Float > this4 = this3;
HXDLIN(1522)		this4->__unsafe_set(0,-1);
HXDLIN(1522)		this4->__unsafe_set(1,-1);
HXDLIN(1522)		this4->__unsafe_set(2,1);
HXDLIN(1522)		::Array< Float > yflip = this4;
HXLINE(1523)		{
HXLINE(1523)			int _g = 0;
HXDLIN(1523)			int _g1 = this->mesh->faces->length;
HXDLIN(1523)			while((_g < _g1)){
HXLINE(1523)				_g = (_g + 1);
HXDLIN(1523)				int i = (_g - 1);
HXLINE(1524)				::Array< int > f = this->mesh->faces->__get(i).StaticCast< ::Array< int > >();
HXLINE(1526)				Float f1 = this->focal;
HXDLIN(1526)				::Array< Float > v = this->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,0)) )).StaticCast< ::Array< Float > >();
HXDLIN(1526)				Float _x = (f1 * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1526)				Float _x1 = (_x / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1526)				Float _y = (f1 * ( (Float)(_hx_array_unsafe_get(v,1)) ));
HXDLIN(1526)				Float _y1 = (_y / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1526)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1526)				::Array< Float > this2 = this1;
HXDLIN(1526)				this2->__unsafe_set(0,_x1);
HXDLIN(1526)				this2->__unsafe_set(1,_y1);
HXDLIN(1526)				this2->__unsafe_set(2,0);
HXDLIN(1526)				::Array< Float > this3 = this2;
HXDLIN(1526)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1526)				Float _x3 = (_x2 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1526)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1526)				Float _y3 = (_y2 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1526)				Float _z = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1526)				Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1526)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1526)				::Array< Float > this5 = this4;
HXDLIN(1526)				this5->__unsafe_set(0,_x3);
HXDLIN(1526)				this5->__unsafe_set(1,_y3);
HXDLIN(1526)				this5->__unsafe_set(2,_z1);
HXDLIN(1526)				::Array< Float > this6 = this5;
HXDLIN(1526)				Float _x4 = ( (Float)(_hx_array_unsafe_get(this6,0)) );
HXDLIN(1526)				Float _x5 = (_x4 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1526)				Float _y4 = ( (Float)(_hx_array_unsafe_get(this6,1)) );
HXDLIN(1526)				Float _y5 = (_y4 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1526)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this6,2)) );
HXDLIN(1526)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1526)				::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1526)				::Array< Float > this8 = this7;
HXDLIN(1526)				this8->__unsafe_set(0,_x5);
HXDLIN(1526)				this8->__unsafe_set(1,_y5);
HXDLIN(1526)				this8->__unsafe_set(2,_z3);
HXDLIN(1526)				::Array< Float > p0 = this8;
HXLINE(1527)				Float f2 = this->focal;
HXDLIN(1527)				::Array< Float > v1 = this->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,1)) )).StaticCast< ::Array< Float > >();
HXDLIN(1527)				Float _x6 = (f2 * ( (Float)(_hx_array_unsafe_get(v1,0)) ));
HXDLIN(1527)				Float _x7 = (_x6 / ( (Float)(_hx_array_unsafe_get(v1,2)) ));
HXDLIN(1527)				Float _y6 = (f2 * ( (Float)(_hx_array_unsafe_get(v1,1)) ));
HXDLIN(1527)				Float _y7 = (_y6 / ( (Float)(_hx_array_unsafe_get(v1,2)) ));
HXDLIN(1527)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1527)				::Array< Float > this10 = this9;
HXDLIN(1527)				this10->__unsafe_set(0,_x7);
HXDLIN(1527)				this10->__unsafe_set(1,_y7);
HXDLIN(1527)				this10->__unsafe_set(2,0);
HXDLIN(1527)				::Array< Float > this11 = this10;
HXDLIN(1527)				Float _x8 = ( (Float)(_hx_array_unsafe_get(this11,0)) );
HXDLIN(1527)				Float _x9 = (_x8 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1527)				Float _y8 = ( (Float)(_hx_array_unsafe_get(this11,1)) );
HXDLIN(1527)				Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1527)				Float _z4 = ( (Float)(_hx_array_unsafe_get(this11,2)) );
HXDLIN(1527)				Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1527)				::Array< Float > this12 = ::Array_obj< Float >::__new(3);
HXDLIN(1527)				::Array< Float > this13 = this12;
HXDLIN(1527)				this13->__unsafe_set(0,_x9);
HXDLIN(1527)				this13->__unsafe_set(1,_y9);
HXDLIN(1527)				this13->__unsafe_set(2,_z5);
HXDLIN(1527)				::Array< Float > this14 = this13;
HXDLIN(1527)				Float _x10 = ( (Float)(_hx_array_unsafe_get(this14,0)) );
HXDLIN(1527)				Float _x11 = (_x10 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1527)				Float _y10 = ( (Float)(_hx_array_unsafe_get(this14,1)) );
HXDLIN(1527)				Float _y11 = (_y10 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1527)				Float _z6 = ( (Float)(_hx_array_unsafe_get(this14,2)) );
HXDLIN(1527)				Float _z7 = (_z6 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1527)				::Array< Float > this15 = ::Array_obj< Float >::__new(3);
HXDLIN(1527)				::Array< Float > this16 = this15;
HXDLIN(1527)				this16->__unsafe_set(0,_x11);
HXDLIN(1527)				this16->__unsafe_set(1,_y11);
HXDLIN(1527)				this16->__unsafe_set(2,_z7);
HXDLIN(1527)				::Array< Float > p1 = this16;
HXLINE(1528)				Float f3 = this->focal;
HXDLIN(1528)				::Array< Float > v2 = this->mesh->vertices->__get(( (int)(_hx_array_unsafe_get(f,2)) )).StaticCast< ::Array< Float > >();
HXDLIN(1528)				Float _x12 = (f3 * ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN(1528)				Float _x13 = (_x12 / ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN(1528)				Float _y12 = (f3 * ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN(1528)				Float _y13 = (_y12 / ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN(1528)				::Array< Float > this17 = ::Array_obj< Float >::__new(3);
HXDLIN(1528)				::Array< Float > this18 = this17;
HXDLIN(1528)				this18->__unsafe_set(0,_x13);
HXDLIN(1528)				this18->__unsafe_set(1,_y13);
HXDLIN(1528)				this18->__unsafe_set(2,0);
HXDLIN(1528)				::Array< Float > this19 = this18;
HXDLIN(1528)				Float _x14 = ( (Float)(_hx_array_unsafe_get(this19,0)) );
HXDLIN(1528)				Float _x15 = (_x14 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1528)				Float _y14 = ( (Float)(_hx_array_unsafe_get(this19,1)) );
HXDLIN(1528)				Float _y15 = (_y14 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1528)				Float _z8 = ( (Float)(_hx_array_unsafe_get(this19,2)) );
HXDLIN(1528)				Float _z9 = (_z8 * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1528)				::Array< Float > this20 = ::Array_obj< Float >::__new(3);
HXDLIN(1528)				::Array< Float > this21 = this20;
HXDLIN(1528)				this21->__unsafe_set(0,_x15);
HXDLIN(1528)				this21->__unsafe_set(1,_y15);
HXDLIN(1528)				this21->__unsafe_set(2,_z9);
HXDLIN(1528)				::Array< Float > this22 = this21;
HXDLIN(1528)				Float _x16 = ( (Float)(_hx_array_unsafe_get(this22,0)) );
HXDLIN(1528)				Float _x17 = (_x16 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1528)				Float _y16 = ( (Float)(_hx_array_unsafe_get(this22,1)) );
HXDLIN(1528)				Float _y17 = (_y16 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1528)				Float _z10 = ( (Float)(_hx_array_unsafe_get(this22,2)) );
HXDLIN(1528)				Float _z11 = (_z10 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1528)				::Array< Float > this23 = ::Array_obj< Float >::__new(3);
HXDLIN(1528)				::Array< Float > this24 = this23;
HXDLIN(1528)				this24->__unsafe_set(0,_x17);
HXDLIN(1528)				this24->__unsafe_set(1,_y17);
HXDLIN(1528)				this24->__unsafe_set(2,_z11);
HXDLIN(1528)				::Array< Float > p2 = this24;
HXLINE(1530)				::Array< ::Dynamic> _hx_tmp = this->lines;
HXDLIN(1530)				Float _hx_tmp1 = ( (Float)(_hx_array_unsafe_get(p0,0)) );
HXDLIN(1530)				Float _hx_tmp2 = ( (Float)(_hx_array_unsafe_get(p0,1)) );
HXDLIN(1530)				Float _hx_tmp3 = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1530)				_hx_tmp->push( ::apparentridges::Line_obj::__alloc( HX_CTX ,_hx_tmp1,_hx_tmp2,_hx_tmp3,( (Float)(_hx_array_unsafe_get(p1,1)) )));
HXLINE(1531)				::Array< ::Dynamic> _hx_tmp4 = this->lines;
HXDLIN(1531)				Float _hx_tmp5 = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1531)				Float _hx_tmp6 = ( (Float)(_hx_array_unsafe_get(p1,1)) );
HXDLIN(1531)				Float _hx_tmp7 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1531)				_hx_tmp4->push( ::apparentridges::Line_obj::__alloc( HX_CTX ,_hx_tmp5,_hx_tmp6,_hx_tmp7,( (Float)(_hx_array_unsafe_get(p2,1)) )));
HXLINE(1532)				::Array< ::Dynamic> _hx_tmp8 = this->lines;
HXDLIN(1532)				Float _hx_tmp9 = ( (Float)(_hx_array_unsafe_get(p2,0)) );
HXDLIN(1532)				Float _hx_tmp10 = ( (Float)(_hx_array_unsafe_get(p2,1)) );
HXDLIN(1532)				Float _hx_tmp11 = ( (Float)(_hx_array_unsafe_get(p0,0)) );
HXDLIN(1532)				_hx_tmp8->push( ::apparentridges::Line_obj::__alloc( HX_CTX ,_hx_tmp9,_hx_tmp10,_hx_tmp11,( (Float)(_hx_array_unsafe_get(p0,1)) )));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Render_obj,edges,(void))

void Render_obj::apparentRidges(Float thresh,::hx::Null< Float >  __o_cull){
            		Float cull = __o_cull.Default(2);
            	HX_GC_STACKFRAME(&_hx_pos_f903e347556b9149_1535_apparentRidges)
HXLINE(1536)		if (!(this->didPrecompute)) {
HXLINE(1537)			if (this->verbose) {
HXLINE(1537)				::haxe::Log_obj::trace(HX_("precomputing mesh properties...",37,4b,d8,60),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1537,HX_("apparentridges.Render",43,46,61,46),HX_("apparentRidges",21,16,77,a6)));
            			}
HXLINE(1538)			this->mesh->precompute((cull >= 0),this->verbose);
HXLINE(1539)			this->didPrecompute = true;
            		}
HXLINE(1541)		Float _x = (( (Float)(this->width) ) / ( (Float)(2) ));
HXDLIN(1541)		Float _y = (( (Float)(this->height) ) / ( (Float)(2) ));
HXDLIN(1541)		::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1541)		::Array< Float > this2 = this1;
HXDLIN(1541)		this2->__unsafe_set(0,_x);
HXDLIN(1541)		this2->__unsafe_set(1,_y);
HXDLIN(1541)		this2->__unsafe_set(2,0);
HXDLIN(1541)		::Array< Float > offs = this2;
HXLINE(1542)		::Array< Float > this3 = ::Array_obj< Float >::__new(3);
HXDLIN(1542)		::Array< Float > this4 = this3;
HXDLIN(1542)		this4->__unsafe_set(0,-1);
HXDLIN(1542)		this4->__unsafe_set(1,-1);
HXDLIN(1542)		this4->__unsafe_set(2,1);
HXDLIN(1542)		::Array< Float > yflip = this4;
HXLINE(1543)		::Array< Float > this5 = ::Array_obj< Float >::__new(3);
HXDLIN(1543)		::Array< Float > this6 = this5;
HXDLIN(1543)		this6->__unsafe_set(0,0);
HXDLIN(1543)		this6->__unsafe_set(1,0);
HXDLIN(1543)		this6->__unsafe_set(2,0);
HXDLIN(1543)		::Array< Float > eye = this6;
HXLINE(1545)		if (this->verbose) {
HXLINE(1545)			::haxe::Log_obj::trace(HX_("generating apparent ridges...",2d,2b,4e,0b),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1545,HX_("apparentridges.Render",43,46,61,46),HX_("apparentRidges",21,16,77,a6)));
            		}
HXLINE(1546)		::Array< ::Dynamic> ridges = this->mesh->apparentRidges(eye,thresh);
HXLINE(1547)		if (this->verbose) {
HXLINE(1547)			::haxe::Log_obj::trace(HX_("projecting apparent ridges onto 2D plane...",22,1c,1b,7e),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1547,HX_("apparentridges.Render",43,46,61,46),HX_("apparentRidges",21,16,77,a6)));
            		}
HXLINE(1548)		{
HXLINE(1548)			int _g = 0;
HXDLIN(1548)			int _g1 = ridges->length;
HXDLIN(1548)			while((_g < _g1)){
HXLINE(1548)				_g = (_g + 1);
HXDLIN(1548)				int i = (_g - 1);
HXLINE(1549)				if ((cull >= 0)) {
HXLINE(1550)					bool _hx_tmp;
HXDLIN(1550)					if (!(this->mesh->visible(eye,ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->A,cull))) {
HXLINE(1550)						_hx_tmp = !(this->mesh->visible(eye,ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->B,cull));
            					}
            					else {
HXLINE(1550)						_hx_tmp = false;
            					}
HXDLIN(1550)					if (_hx_tmp) {
HXLINE(1551)						continue;
            					}
            				}
HXLINE(1554)				Float f = this->focal;
HXDLIN(1554)				::Array< Float > v = ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->A;
HXDLIN(1554)				Float _x = (f * ( (Float)(_hx_array_unsafe_get(v,0)) ));
HXDLIN(1554)				Float _x1 = (_x / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1554)				Float _y = (f * ( (Float)(_hx_array_unsafe_get(v,1)) ));
HXDLIN(1554)				Float _y1 = (_y / ( (Float)(_hx_array_unsafe_get(v,2)) ));
HXDLIN(1554)				::Array< Float > this1 = ::Array_obj< Float >::__new(3);
HXDLIN(1554)				::Array< Float > this2 = this1;
HXDLIN(1554)				this2->__unsafe_set(0,_x1);
HXDLIN(1554)				this2->__unsafe_set(1,_y1);
HXDLIN(1554)				this2->__unsafe_set(2,0);
HXDLIN(1554)				::Array< Float > this3 = this2;
HXDLIN(1554)				Float _x2 = ( (Float)(_hx_array_unsafe_get(this3,0)) );
HXDLIN(1554)				Float _x3 = (_x2 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1554)				Float _y2 = ( (Float)(_hx_array_unsafe_get(this3,1)) );
HXDLIN(1554)				Float _y3 = (_y2 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1554)				Float _z = ( (Float)(_hx_array_unsafe_get(this3,2)) );
HXDLIN(1554)				Float _z1 = (_z * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1554)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1554)				::Array< Float > this5 = this4;
HXDLIN(1554)				this5->__unsafe_set(0,_x3);
HXDLIN(1554)				this5->__unsafe_set(1,_y3);
HXDLIN(1554)				this5->__unsafe_set(2,_z1);
HXDLIN(1554)				::Array< Float > this6 = this5;
HXDLIN(1554)				Float _x4 = ( (Float)(_hx_array_unsafe_get(this6,0)) );
HXDLIN(1554)				Float _x5 = (_x4 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1554)				Float _y4 = ( (Float)(_hx_array_unsafe_get(this6,1)) );
HXDLIN(1554)				Float _y5 = (_y4 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1554)				Float _z2 = ( (Float)(_hx_array_unsafe_get(this6,2)) );
HXDLIN(1554)				Float _z3 = (_z2 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1554)				::Array< Float > this7 = ::Array_obj< Float >::__new(3);
HXDLIN(1554)				::Array< Float > this8 = this7;
HXDLIN(1554)				this8->__unsafe_set(0,_x5);
HXDLIN(1554)				this8->__unsafe_set(1,_y5);
HXDLIN(1554)				this8->__unsafe_set(2,_z3);
HXDLIN(1554)				::Array< Float > p0 = this8;
HXLINE(1555)				Float f1 = this->focal;
HXDLIN(1555)				::Array< Float > v1 = ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->B;
HXDLIN(1555)				Float _x6 = (f1 * ( (Float)(_hx_array_unsafe_get(v1,0)) ));
HXDLIN(1555)				Float _x7 = (_x6 / ( (Float)(_hx_array_unsafe_get(v1,2)) ));
HXDLIN(1555)				Float _y6 = (f1 * ( (Float)(_hx_array_unsafe_get(v1,1)) ));
HXDLIN(1555)				Float _y7 = (_y6 / ( (Float)(_hx_array_unsafe_get(v1,2)) ));
HXDLIN(1555)				::Array< Float > this9 = ::Array_obj< Float >::__new(3);
HXDLIN(1555)				::Array< Float > this10 = this9;
HXDLIN(1555)				this10->__unsafe_set(0,_x7);
HXDLIN(1555)				this10->__unsafe_set(1,_y7);
HXDLIN(1555)				this10->__unsafe_set(2,0);
HXDLIN(1555)				::Array< Float > this11 = this10;
HXDLIN(1555)				Float _x8 = ( (Float)(_hx_array_unsafe_get(this11,0)) );
HXDLIN(1555)				Float _x9 = (_x8 * ( (Float)(_hx_array_unsafe_get(yflip,0)) ));
HXDLIN(1555)				Float _y8 = ( (Float)(_hx_array_unsafe_get(this11,1)) );
HXDLIN(1555)				Float _y9 = (_y8 * ( (Float)(_hx_array_unsafe_get(yflip,1)) ));
HXDLIN(1555)				Float _z4 = ( (Float)(_hx_array_unsafe_get(this11,2)) );
HXDLIN(1555)				Float _z5 = (_z4 * ( (Float)(_hx_array_unsafe_get(yflip,2)) ));
HXDLIN(1555)				::Array< Float > this12 = ::Array_obj< Float >::__new(3);
HXDLIN(1555)				::Array< Float > this13 = this12;
HXDLIN(1555)				this13->__unsafe_set(0,_x9);
HXDLIN(1555)				this13->__unsafe_set(1,_y9);
HXDLIN(1555)				this13->__unsafe_set(2,_z5);
HXDLIN(1555)				::Array< Float > this14 = this13;
HXDLIN(1555)				Float _x10 = ( (Float)(_hx_array_unsafe_get(this14,0)) );
HXDLIN(1555)				Float _x11 = (_x10 + ( (Float)(_hx_array_unsafe_get(offs,0)) ));
HXDLIN(1555)				Float _y10 = ( (Float)(_hx_array_unsafe_get(this14,1)) );
HXDLIN(1555)				Float _y11 = (_y10 + ( (Float)(_hx_array_unsafe_get(offs,1)) ));
HXDLIN(1555)				Float _z6 = ( (Float)(_hx_array_unsafe_get(this14,2)) );
HXDLIN(1555)				Float _z7 = (_z6 + ( (Float)(_hx_array_unsafe_get(offs,2)) ));
HXDLIN(1555)				::Array< Float > this15 = ::Array_obj< Float >::__new(3);
HXDLIN(1555)				::Array< Float > this16 = this15;
HXDLIN(1555)				this16->__unsafe_set(0,_x11);
HXDLIN(1555)				this16->__unsafe_set(1,_y11);
HXDLIN(1555)				this16->__unsafe_set(2,_z7);
HXDLIN(1555)				::Array< Float > p1 = this16;
HXLINE(1556)				Float l = ( (Float)(_hx_array_unsafe_get(p0,0)) );
HXDLIN(1556)				Float l1 = ( (Float)(_hx_array_unsafe_get(p0,1)) );
HXDLIN(1556)				Float l2 = ( (Float)(_hx_array_unsafe_get(p1,0)) );
HXDLIN(1556)				 ::apparentridges::Line l3 =  ::apparentridges::Line_obj::__alloc( HX_CTX ,l,l1,l2,( (Float)(_hx_array_unsafe_get(p1,1)) ));
HXLINE(1557)				l3->opacity1 = ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->strengthA;
HXLINE(1558)				l3->opacity2 = ridges->__get(i).StaticCast<  ::apparentridges::Ridge >()->strengthB;
HXLINE(1559)				this->lines->push(l3);
            			}
            		}
HXLINE(1561)		if (this->verbose) {
HXLINE(1561)			::haxe::Log_obj::trace(HX_("apparent ridges computation finished.",d2,84,45,ce),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1561,HX_("apparentridges.Render",43,46,61,46),HX_("apparentRidges",21,16,77,a6)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Render_obj,apparentRidges,(void))

void Render_obj::buildPolylines(::hx::Null< Float >  __o_epsilon){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::Array< ::Dynamic> _hx_run( ::apparentridges::Line a){
            			HX_STACKFRAME(&_hx_pos_f903e347556b9149_1588_buildPolylines)
HXLINE(1589)			::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1589)			::Array< ::Dynamic> p = this1;
HXLINE(1590)			{
HXLINE(1590)				Float _x = a->x1;
HXDLIN(1590)				Float _y = a->y1;
HXDLIN(1590)				Float _z = a->opacity1;
HXDLIN(1590)				::Array< Float > this2 = ::Array_obj< Float >::__new(3);
HXDLIN(1590)				::Array< Float > this3 = this2;
HXDLIN(1590)				this3->__unsafe_set(0,_x);
HXDLIN(1590)				this3->__unsafe_set(1,_y);
HXDLIN(1590)				this3->__unsafe_set(2,_z);
HXDLIN(1590)				p->push(this3);
            			}
HXLINE(1591)			{
HXLINE(1591)				Float _x1 = a->x2;
HXDLIN(1591)				Float _y1 = a->y2;
HXDLIN(1591)				Float _z1 = a->opacity2;
HXDLIN(1591)				::Array< Float > this4 = ::Array_obj< Float >::__new(3);
HXDLIN(1591)				::Array< Float > this5 = this4;
HXDLIN(1591)				this5->__unsafe_set(0,_x1);
HXDLIN(1591)				this5->__unsafe_set(1,_y1);
HXDLIN(1591)				this5->__unsafe_set(2,_z1);
HXDLIN(1591)				p->push(this5);
            			}
HXLINE(1592)			return p;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		Float epsilon = __o_epsilon.Default(1);
            	HX_STACKFRAME(&_hx_pos_f903e347556b9149_1564_buildPolylines)
HXDLIN(1564)		 ::apparentridges::Render _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1565)		if (this->verbose) {
HXLINE(1565)			::haxe::Log_obj::trace(HX_("building polylines from ridge segments...",5c,14,7f,e8),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1565,HX_("apparentridges.Render",43,46,61,46),HX_("buildPolylines",25,3b,52,f3)));
            		}
HXLINE(1566)		this->polylines = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1567)		::Array< ::Dynamic> _g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1567)		{
HXLINE(1567)			int _g1 = 0;
HXDLIN(1567)			::Array< ::Dynamic> _g2 = this->lines;
HXDLIN(1567)			while((_g1 < _g2->length)){
HXLINE(1567)				 ::apparentridges::Line v = _g2->__get(_g1).StaticCast<  ::apparentridges::Line >();
HXDLIN(1567)				_g1 = (_g1 + 1);
HXLINE(1568)				bool _hx_tmp;
HXLINE(1569)				bool _hx_tmp1;
HXDLIN(1569)				bool _hx_tmp2;
HXDLIN(1569)				if (!((v->y1 < 0))) {
HXLINE(1569)					_hx_tmp2 = (v->y1 > (_gthis->height - 1));
            				}
            				else {
HXLINE(1569)					_hx_tmp2 = true;
            				}
HXDLIN(1569)				if (!(_hx_tmp2)) {
HXLINE(1569)					_hx_tmp1 = (v->y2 < 0);
            				}
            				else {
HXLINE(1569)					_hx_tmp1 = true;
            				}
HXLINE(1568)				if (!(_hx_tmp1)) {
HXLINE(1568)					_hx_tmp = (v->y2 > (_gthis->height - 1));
            				}
            				else {
HXLINE(1568)					_hx_tmp = true;
            				}
HXLINE(1567)				if (!(_hx_tmp)) {
HXLINE(1567)					_g->push(v);
            				}
            			}
            		}
HXDLIN(1567)		this->lines = _g;
HXLINE(1574)		{
HXLINE(1574)			int _g3 = 0;
HXDLIN(1574)			int _g4 = this->lines->length;
HXDLIN(1574)			while((_g3 < _g4)){
HXLINE(1574)				_g3 = (_g3 + 1);
HXDLIN(1574)				int i = (_g3 - 1);
HXLINE(1575)				Float y1 = this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->y1;
HXLINE(1576)				Float y2 = this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->y2;
HXLINE(1577)				if ((y1 > y2)) {
HXLINE(1578)					this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->flip();
            				}
            				else {
HXLINE(1579)					if ((y1 == y2)) {
HXLINE(1580)						if ((this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->x1 > this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->x2)) {
HXLINE(1581)							this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->flip();
            						}
            					}
            				}
            			}
            		}
HXLINE(1585)		::Array< ::Dynamic> _g5 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1585)		{
HXLINE(1585)			int _g6 = 0;
HXDLIN(1585)			int _g7 = this->height;
HXDLIN(1585)			while((_g6 < _g7)){
HXLINE(1585)				_g6 = (_g6 + 1);
HXDLIN(1585)				int i = (_g6 - 1);
HXDLIN(1585)				_g5->push(::Array_obj< ::Dynamic>::__new(0));
            			}
            		}
HXDLIN(1585)		::Array< ::Dynamic> rows = _g5;
HXLINE(1586)		::Array< ::Dynamic> _g8 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1586)		{
HXLINE(1586)			int _g9 = 0;
HXDLIN(1586)			int _g10 = this->height;
HXDLIN(1586)			while((_g9 < _g10)){
HXLINE(1586)				_g9 = (_g9 + 1);
HXDLIN(1586)				int i = (_g9 - 1);
HXDLIN(1586)				_g8->push(::Array_obj< ::Dynamic>::__new(0));
            			}
            		}
HXDLIN(1586)		::Array< ::Dynamic> ends = _g8;
HXLINE(1588)		 ::Dynamic singleton =  ::Dynamic(new _hx_Closure_0());
HXLINE(1595)		{
HXLINE(1595)			int _g11 = 0;
HXDLIN(1595)			int _g12 = this->lines->length;
HXDLIN(1595)			while((_g11 < _g12)){
HXLINE(1595)				_g11 = (_g11 + 1);
HXDLIN(1595)				int i = (_g11 - 1);
HXLINE(1596)				::Array< ::Dynamic> p = ( (::Array< ::Dynamic>)(singleton(this->lines->__get(i).StaticCast<  ::apparentridges::Line >())) );
HXLINE(1597)				rows->__get(::Std_obj::_hx_int(( (Float)(::Math_obj::round(this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->y1)) ))).StaticCast< ::Array< ::Dynamic> >()->push(p);
HXLINE(1598)				ends->__get(::Std_obj::_hx_int(( (Float)(::Math_obj::round(this->lines->__get(i).StaticCast<  ::apparentridges::Line >()->y2)) ))).StaticCast< ::Array< ::Dynamic> >()->push(p);
            			}
            		}
HXLINE(1600)		{
HXLINE(1600)			int _g13 = 0;
HXDLIN(1600)			int _g14 = rows->length;
HXDLIN(1600)			while((_g13 < _g14)){
HXLINE(1600)				_g13 = (_g13 + 1);
HXDLIN(1600)				int i = (_g13 - 1);
HXLINE(1601)				int nj = rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->length;
HXLINE(1602)				{
HXLINE(1602)					int _g = 0;
HXDLIN(1602)					int _g1 = nj;
HXDLIN(1602)					while((_g < _g1)){
HXLINE(1602)						_g = (_g + 1);
HXDLIN(1602)						int _j = (_g - 1);
HXDLIN(1602)						int j = ((nj - _j) - 1);
HXLINE(1603)						if (::hx::IsNull( rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >() )) {
HXLINE(1604)							continue;
            						}
HXLINE(1606)						int nk = ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->length;
HXLINE(1607)						{
HXLINE(1607)							int _g1 = 0;
HXDLIN(1607)							int _g2 = nk;
HXDLIN(1607)							while((_g1 < _g2)){
HXLINE(1607)								_g1 = (_g1 + 1);
HXDLIN(1607)								int _k = (_g1 - 1);
HXDLIN(1607)								int k = ((nk - _k) - 1);
HXLINE(1608)								if (::hx::IsNull( ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >() )) {
HXLINE(1609)									continue;
            								}
HXLINE(1612)								if (::hx::IsEq( rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >(),ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >() )) {
HXLINE(1613)									continue;
            								}
HXLINE(1615)								::Array< ::Dynamic> this1 = rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1615)								int r = ::Std_obj::_hx_int(( (Float)(::Math_obj::round(( (Float)(_hx_array_unsafe_get(this1->__get((this1->length - 1)).StaticCast< ::Array< Float > >(),1)) ))) ));
HXLINE(1616)								Float d = ( (Float)(_hx_array_unsafe_get(rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >()->__get(0).StaticCast< ::Array< Float > >(),0)) );
HXDLIN(1616)								::Array< ::Dynamic> this2 = ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1616)								Float d1 = ::Math_obj::abs((d - ( (Float)(_hx_array_unsafe_get(this2->__get((this2->length - 1)).StaticCast< ::Array< Float > >(),0)) )));
HXLINE(1617)								if ((d1 <= epsilon)) {
HXLINE(1618)									if ((d1 < 1)) {
HXLINE(1619)										::Array< Float > this1 = ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >()->__get((ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >()->length - 1)).StaticCast< ::Array< Float > >();
HXLINE(1620)										Float v = ( (Float)(_hx_array_unsafe_get(ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >()->__get((ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >()->length - 1)).StaticCast< ::Array< Float > >(),2)) );
HXLINE(1619)										Float v1 = ((v + ( (Float)(_hx_array_unsafe_get(rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >()->__get(0).StaticCast< ::Array< Float > >(),2)) )) / ( (Float)(2) ));
HXDLIN(1619)										this1->__unsafe_set(2,v1);
            									}
HXLINE(1624)									{
HXLINE(1624)										int _g;
HXDLIN(1624)										if ((d1 < 1)) {
HXLINE(1624)											_g = 1;
            										}
            										else {
HXLINE(1624)											_g = 0;
            										}
HXDLIN(1624)										int _g1 = rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >()->length;
HXDLIN(1624)										while((_g < _g1)){
HXLINE(1624)											_g = (_g + 1);
HXDLIN(1624)											int t = (_g - 1);
HXLINE(1625)											{
HXLINE(1625)												::Array< ::Dynamic> this1 = ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1625)												this1->push(rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >()->__get(t).StaticCast< ::Array< Float > >());
            											}
            										}
            									}
HXLINE(1627)									ends->__get(r).StaticCast< ::Array< ::Dynamic> >()->remove(rows->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >());
HXLINE(1628)									ends->__get(r).StaticCast< ::Array< ::Dynamic> >()->push(ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(k).StaticCast< ::Array< ::Dynamic> >());
HXLINE(1629)									ends->__get(i).StaticCast< ::Array< ::Dynamic> >()[k] = null();
HXLINE(1631)									goto _hx_goto_21;
            								}
            							}
            							_hx_goto_21:;
            						}
            					}
            				}
            			}
            		}
HXLINE(1636)		{
HXLINE(1636)			int _g15 = 0;
HXDLIN(1636)			int _g16 = ends->length;
HXDLIN(1636)			while((_g15 < _g16)){
HXLINE(1636)				_g15 = (_g15 + 1);
HXDLIN(1636)				int i = (_g15 - 1);
HXLINE(1637)				{
HXLINE(1637)					int _g = 0;
HXDLIN(1637)					int _g1 = ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->length;
HXDLIN(1637)					while((_g < _g1)){
HXLINE(1637)						_g = (_g + 1);
HXDLIN(1637)						int j = (_g - 1);
HXLINE(1638)						if (::hx::IsNotNull( ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >() )) {
HXLINE(1639)							this->polylines->push(ends->__get(i).StaticCast< ::Array< ::Dynamic> >()->__get(j).StaticCast< ::Array< ::Dynamic> >());
            						}
            					}
            				}
            			}
            		}
HXLINE(1643)		::Array< ::Dynamic> _g17 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1643)		{
HXLINE(1643)			int _g18 = 0;
HXDLIN(1643)			::Array< ::Dynamic> _g19 = this->polylines;
HXDLIN(1643)			while((_g18 < _g19->length)){
HXLINE(1643)				::Array< ::Dynamic> v = _g19->__get(_g18).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1643)				_g18 = (_g18 + 1);
HXLINE(1644)				bool _hx_tmp;
HXDLIN(1644)				if ((v->length > 2)) {
HXLINE(1644)					_hx_tmp = true;
            				}
            				else {
HXLINE(1647)					if ((v->length < 2)) {
HXLINE(1644)						_hx_tmp = false;
            					}
            					else {
HXLINE(1650)						::Array< Float > v1 = v->__get(0).StaticCast< ::Array< Float > >();
HXDLIN(1650)						::Array< Float > v2 = v->__get(1).StaticCast< ::Array< Float > >();
HXDLIN(1650)						Float x = ( (Float)(_hx_array_unsafe_get(v1,0)) );
HXDLIN(1650)						Float x1 = (x - ( (Float)(_hx_array_unsafe_get(v2,0)) ));
HXDLIN(1650)						Float x2 = ( (Float)(_hx_array_unsafe_get(v1,1)) );
HXDLIN(1650)						Float x3 = (x2 - ( (Float)(_hx_array_unsafe_get(v2,1)) ));
HXDLIN(1650)						Float x4 = ( (Float)(_hx_array_unsafe_get(v1,2)) );
HXDLIN(1650)						Float x5 = (x4 - ( (Float)(_hx_array_unsafe_get(v2,2)) ));
HXDLIN(1650)						if ((::Math_obj::sqrt((((x1 * x1) + (x3 * x3)) + (x5 * x5))) < epsilon)) {
HXLINE(1644)							_hx_tmp = false;
            						}
            						else {
HXLINE(1644)							_hx_tmp = true;
            						}
            					}
            				}
HXLINE(1643)				if (_hx_tmp) {
HXLINE(1643)					_g17->push(v);
            				}
            			}
            		}
HXDLIN(1643)		this->polylines = _g17;
HXLINE(1656)		if (this->verbose) {
HXLINE(1656)			::haxe::Log_obj::trace(HX_("polylines built.",7d,03,6e,ff),::hx::SourceInfo(HX_("apparentridges/ApparentRidges.hx",4f,c8,ac,fe),1656,HX_("apparentridges.Render",43,46,61,46),HX_("buildPolylines",25,3b,52,f3)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Render_obj,buildPolylines,(void))


::hx::ObjectPtr< Render_obj > Render_obj::__new( ::apparentridges::Mesh _mesh,int w,int h) {
	::hx::ObjectPtr< Render_obj > __this = new Render_obj();
	__this->__construct(_mesh,w,h);
	return __this;
}

::hx::ObjectPtr< Render_obj > Render_obj::__alloc(::hx::Ctx *_hx_ctx, ::apparentridges::Mesh _mesh,int w,int h) {
	Render_obj *__this = (Render_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Render_obj), true, "apparentridges.Render"));
	*(void **)__this = Render_obj::_hx_vtable;
	__this->__construct(_mesh,w,h);
	return __this;
}

Render_obj::Render_obj()
{
}

void Render_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Render);
	HX_MARK_MEMBER_NAME(mesh,"mesh");
	HX_MARK_MEMBER_NAME(lines,"lines");
	HX_MARK_MEMBER_NAME(polylines,"polylines");
	HX_MARK_MEMBER_NAME(focal,"focal");
	HX_MARK_MEMBER_NAME(width,"width");
	HX_MARK_MEMBER_NAME(height,"height");
	HX_MARK_MEMBER_NAME(verbose,"verbose");
	HX_MARK_MEMBER_NAME(didPrecompute,"didPrecompute");
	HX_MARK_END_CLASS();
}

void Render_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mesh,"mesh");
	HX_VISIT_MEMBER_NAME(lines,"lines");
	HX_VISIT_MEMBER_NAME(polylines,"polylines");
	HX_VISIT_MEMBER_NAME(focal,"focal");
	HX_VISIT_MEMBER_NAME(width,"width");
	HX_VISIT_MEMBER_NAME(height,"height");
	HX_VISIT_MEMBER_NAME(verbose,"verbose");
	HX_VISIT_MEMBER_NAME(didPrecompute,"didPrecompute");
}

::hx::Val Render_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mesh") ) { return ::hx::Val( mesh ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"lines") ) { return ::hx::Val( lines ); }
		if (HX_FIELD_EQ(inName,"focal") ) { return ::hx::Val( focal ); }
		if (HX_FIELD_EQ(inName,"width") ) { return ::hx::Val( width ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"edges") ) { return ::hx::Val( edges_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { return ::hx::Val( height ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"verbose") ) { return ::hx::Val( verbose ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setFocal") ) { return ::hx::Val( setFocal_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertices") ) { return ::hx::Val( vertices_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"polylines") ) { return ::hx::Val( polylines ); }
		if (HX_FIELD_EQ(inName,"transform") ) { return ::hx::Val( transform_dyn() ); }
		if (HX_FIELD_EQ(inName,"autoPlace") ) { return ::hx::Val( autoPlace_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setVerbose") ) { return ::hx::Val( setVerbose_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"didPrecompute") ) { return ::hx::Val( didPrecompute ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"apparentRidges") ) { return ::hx::Val( apparentRidges_dyn() ); }
		if (HX_FIELD_EQ(inName,"buildPolylines") ) { return ::hx::Val( buildPolylines_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"scaleRotateTranslate") ) { return ::hx::Val( scaleRotateTranslate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Render_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mesh") ) { mesh=inValue.Cast<  ::apparentridges::Mesh >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"lines") ) { lines=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"focal") ) { focal=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"width") ) { width=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { height=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"verbose") ) { verbose=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"polylines") ) { polylines=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"didPrecompute") ) { didPrecompute=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Render_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("mesh",ed,49,59,48));
	outFields->push(HX_("lines",ff,dd,01,75));
	outFields->push(HX_("polylines",33,0c,bc,77));
	outFields->push(HX_("focal",65,4e,89,04));
	outFields->push(HX_("width",06,b6,62,ca));
	outFields->push(HX_("height",e7,07,4c,02));
	outFields->push(HX_("verbose",82,d7,b9,71));
	outFields->push(HX_("didPrecompute",d3,67,bc,a8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Render_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::apparentridges::Mesh */ ,(int)offsetof(Render_obj,mesh),HX_("mesh",ed,49,59,48)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Render_obj,lines),HX_("lines",ff,dd,01,75)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Render_obj,polylines),HX_("polylines",33,0c,bc,77)},
	{::hx::fsFloat,(int)offsetof(Render_obj,focal),HX_("focal",65,4e,89,04)},
	{::hx::fsInt,(int)offsetof(Render_obj,width),HX_("width",06,b6,62,ca)},
	{::hx::fsInt,(int)offsetof(Render_obj,height),HX_("height",e7,07,4c,02)},
	{::hx::fsBool,(int)offsetof(Render_obj,verbose),HX_("verbose",82,d7,b9,71)},
	{::hx::fsBool,(int)offsetof(Render_obj,didPrecompute),HX_("didPrecompute",d3,67,bc,a8)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Render_obj_sStaticStorageInfo = 0;
#endif

static ::String Render_obj_sMemberFields[] = {
	HX_("mesh",ed,49,59,48),
	HX_("lines",ff,dd,01,75),
	HX_("polylines",33,0c,bc,77),
	HX_("focal",65,4e,89,04),
	HX_("width",06,b6,62,ca),
	HX_("height",e7,07,4c,02),
	HX_("verbose",82,d7,b9,71),
	HX_("didPrecompute",d3,67,bc,a8),
	HX_("clear",8d,71,5b,48),
	HX_("setFocal",63,b7,bd,12),
	HX_("setVerbose",00,fc,98,c4),
	HX_("transform",6c,2d,93,45),
	HX_("scaleRotateTranslate",09,72,fd,93),
	HX_("autoPlace",d8,32,99,a2),
	HX_("vertices",f9,bf,15,6a),
	HX_("edges",96,6d,e0,69),
	HX_("apparentRidges",21,16,77,a6),
	HX_("buildPolylines",25,3b,52,f3),
	::String(null()) };

::hx::Class Render_obj::__mClass;

void Render_obj::__register()
{
	Render_obj _hx_dummy;
	Render_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("apparentridges.Render",43,46,61,46);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Render_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Render_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Render_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Render_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace apparentridges
