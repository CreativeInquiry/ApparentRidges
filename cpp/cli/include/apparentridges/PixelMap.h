// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_PixelMap
#define INCLUDED_apparentridges_PixelMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(apparentridges,PixelMap)
HX_DECLARE_CLASS1(apparentridges,RayHit)
HX_DECLARE_CLASS1(apparentridges,Render)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES PixelMap_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PixelMap_obj OBJ_;
		PixelMap_obj();

	public:
		enum { _hx_ClassId = 0x048bcac3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="apparentridges.PixelMap")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"apparentridges.PixelMap"); }

		inline static ::hx::ObjectPtr< PixelMap_obj > __new() {
			::hx::ObjectPtr< PixelMap_obj > __this = new PixelMap_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< PixelMap_obj > __alloc(::hx::Ctx *_hx_ctx) {
			PixelMap_obj *__this = (PixelMap_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PixelMap_obj), false, "apparentridges.PixelMap"));
			*(void **)__this = PixelMap_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PixelMap_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PixelMap",d6,0f,fb,57); }

		static void raycast( ::apparentridges::Render render, ::Dynamic fun);
		static ::Dynamic raycast_dyn();

		static ::Array< Float > depth( ::apparentridges::Render render,::hx::Null< bool >  normalize);
		static ::Dynamic depth_dyn();

		static ::Array< Float > normal( ::apparentridges::Render render);
		static ::Dynamic normal_dyn();

		static ::Array< Float > curvature( ::apparentridges::Render render);
		static ::Dynamic curvature_dyn();

		static ::Array< Float > lambertian( ::apparentridges::Render render,::Array< Float > light,::hx::Null< bool >  normalize);
		static ::Dynamic lambertian_dyn();

		static ::Array< Float > ambientOcclusion( ::apparentridges::Render render,::hx::Null< int >  numSamples,::hx::Null< bool >  normalize);
		static ::Dynamic ambientOcclusion_dyn();

		static ::String toPPMString(::Array< Float > data,int w,int h,Float min,Float max);
		static ::Dynamic toPPMString_dyn();

};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_PixelMap */ 
