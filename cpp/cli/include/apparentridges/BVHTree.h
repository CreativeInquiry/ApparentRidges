// Generated by Haxe 4.1.3
#ifndef INCLUDED_apparentridges_BVHTree
#define INCLUDED_apparentridges_BVHTree

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(apparentridges,BVHNode)
HX_DECLARE_CLASS1(apparentridges,BVHTree)
HX_DECLARE_CLASS1(apparentridges,Mesh)

namespace apparentridges{


class HXCPP_CLASS_ATTRIBUTES BVHTree_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BVHTree_obj OBJ_;
		BVHTree_obj();

	public:
		enum { _hx_ClassId = 0x2d595aed };

		void __construct( ::apparentridges::Mesh _mesh,::hx::Null< int >  __o__maxLeafSize,::hx::Null< int >  __o__bucketCount);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="apparentridges.BVHTree")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"apparentridges.BVHTree"); }
		static ::hx::ObjectPtr< BVHTree_obj > __new( ::apparentridges::Mesh _mesh,::hx::Null< int >  __o__maxLeafSize,::hx::Null< int >  __o__bucketCount);
		static ::hx::ObjectPtr< BVHTree_obj > __alloc(::hx::Ctx *_hx_ctx, ::apparentridges::Mesh _mesh,::hx::Null< int >  __o__maxLeafSize,::hx::Null< int >  __o__bucketCount);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BVHTree_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BVHTree",72,2f,f0,c7); }

		 ::apparentridges::BVHNode root;
		 ::apparentridges::Mesh mesh;
		::Array< ::Dynamic> faces;
		int maxLeafSize;
		int bucketCount;
		void build();
		::Dynamic build_dyn();

};

} // end namespace apparentridges

#endif /* INCLUDED_apparentridges_BVHTree */ 
